{"groups": [{"group_id": 1, "duplicates": [{"start_index": 0, "end_index": 309, "text": "<?xml version=\"1.0\" encoding=\"utf-8\" ?> <plainxml>Subversion Quick-Start Guide If you&#39;re eager to get Subversion up and running (and you enjoy learning by experimentation), this appendix will show you how to create a repository, import code, and then check it back out again as a working copy."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 2, "duplicates": [{"start_index": 383, "end_index": 566, "text": "If you&#39;re new to the entire concept of version control or to the copy-modify-merge model used by both CVS and Subversion, you should read before going any further."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 3, "duplicates": [{"start_index": 1666, "end_index": 1818, "text": "If you run a Unix-like operating system, you can use your system&#39;s native package distribution system (RPMs, DEBs, the ports tree, etc.)"}, {"start_index": 383991, "end_index": 384036, "text": "Unfortunately, the system isn&#39;t flawless."}]}, {"group_id": 4, "duplicates": [{"start_index": 1844, "end_index": 1957, "text": "Alternatively, you can build Subversion directly from source code, though it&#39;s not always an easy task."}, {"start_index": 217888, "end_index": 217979, "text": "That&#39;s not always the case, though, so we&#39;ll show a more scalable approach."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 5, "duplicates": [{"start_index": 1958, "end_index": 2118, "text": "(If you&#39;re not experienced at building open source software packages, you&#39;re probably better off downloading a binary distribution instead!)"}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 6, "duplicates": [{"start_index": 2288, "end_index": 2468, "text": "If you&#39;re one of those folks that likes to use bleeding-edge software, you can also get the Subversion source code from the Subversion repository in which it lives."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 7, "duplicates": [{"start_index": 2762, "end_index": 2871, "text": "See our discussion of Subversion&#39;s branching and tagging model for the reasoning behind this."}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 8, "duplicates": [{"start_index": 2872, "end_index": 3268, "text": ": $ svn checkout http://svn.apache.org/repos/asf/subversion/trunk subversion A subversion/HACKING A subversion/INSTALL A subversion/README A subversion/autogen.sh A subversion/build.conf The preceding command will create a working copy of the latest (unreleased) Subversion source code into a subdirectory named subversion in your current working directory."}, {"start_index": 391764, "end_index": 391812, "text": "$ svn checkout http://svn.example.com/projects ."}]}, {"group_id": 9, "duplicates": [{"start_index": 4962, "end_index": 5026, "text": "You won&#39;t see your versioned files if you peek inside."}, {"start_index": 233943, "end_index": 233984, "text": "You&#39;re not supposed to name it."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 451733, "end_index": 451792, "text": "You&#39;ll see exactly how this works as we continue."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 10, "duplicates": [{"start_index": 6702, "end_index": 6797, "text": "They&#39;re merely a popular convention that you&#39;ll most likely want to use later on."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 765255, "end_index": 765319, "text": "It&#39;s your data protect it as much as you&#39;d like."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 11, "duplicates": [{"start_index": 6798, "end_index": 7285, "text": "Once you have your tree of data ready to go, import it into the repository with the svn import command (see ): $ svn import /tmp/myproject file:///var/svn/repos/myproject \\ -m &quot;initial import&quot; Adding /tmp/myproject/branches Adding /tmp/myproject/tags Adding /tmp/myproject/trunk Adding /tmp/myproject/trunk/foo.c Adding /tmp/myproject/trunk/bar.c Adding /tmp/myproject/trunk/Makefile Committed revision 1."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}, {"start_index": 886139, "end_index": 886160, "text": "Committed revision 1."}, {"start_index": 886408, "end_index": 886429, "text": "Committed revision 1."}, {"start_index": 886677, "end_index": 886698, "text": "Committed revision 1."}]}, {"group_id": 12, "duplicates": [{"start_index": 7338, "end_index": 7484, "text": "As mentioned earlier, you won&#39;t see your files by directly peeking into the repository; they&#39;re all stored within a database."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 13, "duplicates": [{"start_index": 9112, "end_index": 9211, "text": "It&#39;s essentially a list of differences between the two systems as viewed from 10,000 feet."}, {"start_index": 134245, "end_index": 134266, "text": "What&#39;s In a Name?"}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 14, "duplicates": [{"start_index": 10616, "end_index": 10726, "text": "In Subversion, it&#39;s most likely that foo.c did not change between revisions 5 and 6."}, {"start_index": 568585, "end_index": 568661, "text": "In Subversion, there&#39;s no difference between a tag and a branch."}]}, {"group_id": 15, "duplicates": [{"start_index": 11536, "end_index": 11616, "text": "It&#39;s one of the biggest reasons Subversion was written to replace CVS."}, {"start_index": 134245, "end_index": 134266, "text": "What&#39;s In a Name?"}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 16, "duplicates": [{"start_index": 11617, "end_index": 11786, "text": "Here&#39;s what this means to you, as a former CVS user: The svn add and svn delete commands work on directories now, just as they work on files."}, {"start_index": 93942, "end_index": 93976, "text": "out of date Here&#39;s an example."}, {"start_index": 181199, "end_index": 181221, "text": "Here&#39;s an example."}, {"start_index": 359327, "end_index": 359367, "text": "Here&#39;s where the difficulty sets in."}]}, {"group_id": 17, "duplicates": [{"start_index": 12307, "end_index": 12349, "text": "Let&#39;s talk more about that last point."}, {"start_index": 139108, "end_index": 139169, "text": "We&#39;ll talk more about them later in this chapter."}, {"start_index": 233943, "end_index": 233984, "text": "You&#39;re not supposed to name it."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 18, "duplicates": [{"start_index": 14508, "end_index": 14844, "text": "This allows you to do many things offline: svn status Shows you any local changes you&#39;ve made (see ) svn diff Shows you the details of your changes (see ) svn revert Removes your local changes (see ) Also, the cached pristine files allow the Subversion client to send differences when committing, which CVS cannot do."}, {"start_index": 92152, "end_index": 92191, "text": "These changes don&#39;t overlap at all."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 19, "duplicates": [{"start_index": 15147, "end_index": 15337, "text": "And, while we&#39;re on this subject Distinction Between Status and Update Subversion attempts to erase a lot of the confusion between the cvs status and cvs update commands."}, {"start_index": 235433, "end_index": 235479, "text": "And no, they aren&#39;t the same street."}]}, {"group_id": 20, "duplicates": [{"start_index": 16709, "end_index": 17137, "text": "In the default short format, local modifications look like this: $ svn status M foo.c M bar/baz.c If you specify the --show-updates ( -u ) option, a longer output format is used: $ svn status -u M 1047 foo.c * 1045 faces.html * bloo.png M 1050 bar/baz.c Status against revision: 1066 In this case, two new columns appear."}, {"start_index": 154129, "end_index": 154143, "text": "$ svn status ?"}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 21, "duplicates": [{"start_index": 17898, "end_index": 17972, "text": "Subversion has combined CVS&#39;s P and U codes into just U ."}, {"start_index": 1196046, "end_index": 1196081, "text": "&#39;M&#39; Item has been modified."}, {"start_index": 1196082, "end_index": 1196138, "text": "&#39;R&#39; Item has been replaced in your working copy."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197144, "end_index": 1197214, "text": "&#39;M&#39; Properties for this item have been modified."}, {"start_index": 1197215, "end_index": 1197347, "text": "&#39;C&#39; Properties for this item are in conflict with property updates received from the repository."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1198194, "end_index": 1198242, "text": "&#39;K&#39; File is locked in this working copy."}, {"start_index": 1198414, "end_index": 1198522, "text": "&#39;T&#39; File was locked in this working copy, but the lock has been stolen and is invalid."}, {"start_index": 1198664, "end_index": 1198774, "text": "&#39;B&#39; File was locked in this working copy, but the lock has been broken and is invalid."}, {"start_index": 1199050, "end_index": 1199100, "text": "&#39;C&#39; Item is the victim of a tree conflict."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 22, "duplicates": [{"start_index": 19607, "end_index": 19635, "text": "For more information, see ."}, {"start_index": 899605, "end_index": 899633, "text": "For more information, see ."}]}, {"group_id": 23, "duplicates": [{"start_index": 21390, "end_index": 21561, "text": "First, it never performs any kind of keyword or line-ending translation unless you explicitly ask it to do so (see and for more details)."}, {"start_index": 425413, "end_index": 425458, "text": "(See in for details.)"}]}, {"group_id": 24, "duplicates": [{"start_index": 24837, "end_index": 25079, "text": "This is an extremely difficult problem to solve; it involves deducing changesets in the absence of atomicity and translating between the systems&#39; completely orthogonal branching policies, among other complications."}, {"start_index": 383991, "end_index": 384036, "text": "Unfortunately, the system isn&#39;t flawless."}]}, {"group_id": 25, "duplicates": [{"start_index": 28166, "end_index": 28234, "text": "It&#39;s very difficult to find any DeltaV clients or servers."}, {"start_index": 134245, "end_index": 134266, "text": "What&#39;s In a Name?"}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 26, "duplicates": [{"start_index": 28236, "end_index": 28372, "text": "The few that do exist are relatively unknown commercial products, and thus it&#39;s very difficult to test interoperability."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 27, "duplicates": [{"start_index": 28374, "end_index": 28447, "text": "It&#39;s not entirely clear as to why DeltaV has remained stagnant."}, {"start_index": 134245, "end_index": 134266, "text": "What&#39;s In a Name?"}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 28, "duplicates": [{"start_index": 31232, "end_index": 31374, "text": "A typical DeltaV server will reject an ignorant WebDAV client attempting to do a PUT to a file that&#39;s under version control."}, {"start_index": 580211, "end_index": 580253, "text": "Here&#39;s where version control can help."}]}, {"group_id": 29, "duplicates": [{"start_index": 35000, "end_index": 35063, "text": "But there&#39;s potentially no end to such cleanup tasks."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 30, "duplicates": [{"start_index": 35065, "end_index": 35462, "text": "Instead, you can use the ModMimeUsePathInfo directive in your Subversion &lt;Location&gt; block: &lt;Location /repos&gt; DAV svn SVNPath /var/svn/repository SVNAutoversioning on ModMimeUsePathInfo on &lt;/Location&gt; This directive allows mod_mime to attempt automatic deduction of the MIME type on new files that enter the repository via autoversioning."}, {"start_index": 851012, "end_index": 851202, "text": "Disabling path checks altogether &lt;Location /repos&gt; DAV svn SVNParentPath /var/svn SVNPathAuthz off &lt;/Location&gt; The SVNPathAuthz directive is on by default."}]}, {"group_id": 31, "duplicates": [{"start_index": 38130, "end_index": 38221, "text": "We&#39;ll cover some of the most popular programs with this kind of WebDAV support."}, {"start_index": 134245, "end_index": 134266, "text": "What&#39;s In a Name?"}, {"start_index": 233943, "end_index": 233984, "text": "You&#39;re not supposed to name it."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 431494, "end_index": 431567, "text": "We&#39;ll cover some of those supported operations in this section."}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 32, "duplicates": [{"start_index": 38600, "end_index": 38735, "text": "They&#39;re able to directly open and save to URLs, and tend to make heavy use of WebDAV locks when editing a file."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 33, "duplicates": [{"start_index": 39007, "end_index": 39229, "text": "It&#39;s likely that the WebDAV features were deliberately left out of Macintosh versions of these programs, since OS X already provides such excellent low-level filesystem support for WebDAV."}, {"start_index": 134245, "end_index": 134266, "text": "What&#39;s In a Name?"}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 765255, "end_index": 765319, "text": "It&#39;s your data protect it as much as you&#39;d like."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 34, "duplicates": [{"start_index": 39555, "end_index": 39699, "text": "Using cadaver is similar to using a command-line FTP program, and thus it&#39;s extremely useful for basic WebDAV debugging."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 35, "duplicates": [{"start_index": 39934, "end_index": 40343, "text": "Coll: &gt; foobar 0 May 10 16:19 &gt; playwright.el 2864 May 4 16:18 &gt; proofbypoem.txt 1461 May 5 15:09 &gt; westcoast.jpg 66737 May 5 15:09 dav:/repos/&gt; put README Uploading README to `/repos/README&#39;: Progress: [=============================&gt;] 100.0% of 357 bytes succeeded."}, {"start_index": 40345, "end_index": 40519, "text": "dav:/repos/&gt; get proofbypoem.txt Downloading `/repos/proofbypoem.txt&#39; to proofbypoem.txt: Progress: [=============================&gt;] 100.0% of 1461 bytes succeeded."}]}, {"group_id": 36, "duplicates": [{"start_index": 40599, "end_index": 40673, "text": "It&#39;s under a free Apache-like license and is available at ."}, {"start_index": 134245, "end_index": 134266, "text": "What&#39;s In a Name?"}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 37, "duplicates": [{"start_index": 40827, "end_index": 40937, "text": "It&#39;s also one of the first clients to support the new WebDAV Access Control Protocol (RFC 3744)."}, {"start_index": 134245, "end_index": 134266, "text": "What&#39;s In a Name?"}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 38, "duplicates": [{"start_index": 41270, "end_index": 41415, "text": "But it&#39;s not relevant anyway; we&#39;re assuming all of these clients are operating against an autoversioning repository."}, {"start_index": 223609, "end_index": 223670, "text": "If you aren&#39;t, you&#39;ll want to first read and ."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 423929, "end_index": 424115, "text": "You can avoid future appearances of this warning by setting the value of the &#39;store-plaintext-passwords&#39; option to either &#39;yes&#39; or &#39;no&#39; in &#39;/tmp/servers&#39;."}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 507173, "end_index": 507194, "text": "Yes, that&#39;s true."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 614039, "end_index": 614118, "text": "That&#39;s not to say that there are no technical penalties to branching."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 39, "duplicates": [{"start_index": 41936, "end_index": 42067, "text": "But because it&#39;s only a feature of the file explorer, the DAV share isn&#39;t visible to ordinary applications."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 40, "duplicates": [{"start_index": 44494, "end_index": 44628, "text": "If it doesn&#39;t, it seems that the original pre-XP Web Folders implementation is still buried within the system."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 41, "duplicates": [{"start_index": 45391, "end_index": 45541, "text": "If you&#39;re unable to connect to the Subversion repository via SSL, you can tweak the system registry to turn off this behavior."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 42, "duplicates": [{"start_index": 45705, "end_index": 45888, "text": "A final warning: be sure to set up the Web Folder to point to the repository&#39;s root directory ( / ), rather than some subdirectory such as /trunk ."}, {"start_index": 1184335, "end_index": 1184432, "text": "The content of the repository doesn&#39;t change, but the repository&#39;s root URL does."}]}, {"group_id": 43, "duplicates": [{"start_index": 46925, "end_index": 47028, "text": "You&#39;ll likely see the generic HTML directory listing produced by mod_dav_svn ."}, {"start_index": 233943, "end_index": 233984, "text": "You&#39;re not supposed to name it."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 44, "duplicates": [{"start_index": 47341, "end_index": 47463, "text": "It&#39;s implemented as a low-level filesystem module, typically within the operating system&#39;s kernel."}, {"start_index": 134245, "end_index": 134266, "text": "What&#39;s In a Name?"}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 383991, "end_index": 384036, "text": "Unfortunately, the system isn&#39;t flawless."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 45, "duplicates": [{"start_index": 49719, "end_index": 50784, "text": "Once you install davfs2, you can mount a WebDAV network share using the usual Linux mount command: $ mount.davfs http://host/repos /mnt/dav Version Control with Subversion [DRAFT] For Subversion 1.8 (Compiled from ) Ben Collins-Sussman Brian W. Fitzpatrick C. Michael Pilato Tatiana Apandi 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 Ben Collins-Sussman Brian W. Fitzpatrick C. Michael Pilato This work is licensed under the Creative Commons Attribution License. To view a copy of this license, visit or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA. Getting to Know Subversion Subversion Command Reference Appendices Preface Greg Hudson, Subversion developer It is important not to let the perfect become the enemy of the good, even when you can agree on what perfect is."}, {"start_index": 1048668, "end_index": 1048966, "text": "This work is licensed under the Creative Commons Attribution License. To view a copy of this license, visit or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA. A summary of the license is given below, followed by the full legal text."}]}, {"group_id": 46, "duplicates": [{"start_index": 51982, "end_index": 52299, "text": "While the result wasn&#39;t and isn&#39;t the next great evolution in version control design, Subversion is very powerful, very usable, and very flexible. This book is written to document the 1.8 series of the Apache Subversion We&#39;ll refer to it simply as Subversion throughout this book."}, {"start_index": 1243168, "end_index": 1243671, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help! svndumpfilter help [SUBCOMMAND...] Description Displays the help message for svndumpfilter ."}]}, {"group_id": 47, "duplicates": [{"start_index": 52301, "end_index": 52377, "text": "You&#39;ll thank us when you realize just how much space that saves!"}, {"start_index": 233943, "end_index": 233984, "text": "You&#39;re not supposed to name it."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 48, "duplicates": [{"start_index": 54499, "end_index": 54790, "text": "If you&#39;re a user or system administrator pondering the use of Subversion, the first question you should ask yourself is: &quot;Is this the right tool for the job?&quot; Subversion is a fantastic hammer, but be careful not to view every problem as a nail."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 49, "duplicates": [{"start_index": 56194, "end_index": 56396, "text": "Even assuming that you are okay with the cost/benefit tradeoff afforded by a version control system, you shouldn&#39;t choose to use one merely because it can do what you want."}, {"start_index": 383991, "end_index": 384036, "text": "Unfortunately, the system isn&#39;t flawless."}]}, {"group_id": 50, "duplicates": [{"start_index": 63783, "end_index": 63900, "text": "They didn&#39;t want to break new ground in version control methodology, they just wanted to fix CVS."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 614039, "end_index": 614118, "text": "That&#39;s not to say that there are no technical penalties to branching."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 51, "duplicates": [{"start_index": 66351, "end_index": 66527, "text": "Don&#39;t be alarmed if the brief descriptions leave you scratching your head plenty more pages in this book are devoted to alleviating that confusion."}, {"start_index": 1115491, "end_index": 1115519, "text": "Don&#39;t bother reading it."}]}, {"group_id": 52, "duplicates": [{"start_index": 66528, "end_index": 67904, "text": "svn svnversion svnlook svnadmin mod_dav_svn svnserve svndumpfilter svnsync svnrdump svnmucc svn The command-line client program svnversion A program for reporting the state (in terms of revisions of the items present) of a working copy svnlook A tool for directly inspecting a Subversion repository svnadmin A tool for creating, tweaking, or repairing a Subversion repository mod_dav_svn A plug-in module for the Apache HTTP Server, used to make your repository available to others over a network svnserve A custom standalone server program, runnable as a daemon process or invokable by SSH; another way to make your repository available to others over a network svndumpfilter A program for filtering Subversion repository dump streams svnsync A program for incrementally mirroring one repository to another over a network svnrdump A program for performing repository history dumps and loads over a network svnmucc A program for performing multiple repository URL-based operations in a single commit and without the use of a working copy What&#39;s New in Subversion Subversion history of The first edition of this book was published by O&#39;Reilly Media in 2004, shortly after Subversion had reached 1.0."}, {"start_index": 134245, "end_index": 134266, "text": "What&#39;s In a Name?"}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 53, "duplicates": [{"start_index": 68016, "end_index": 68093, "text": "Here&#39;s a quick summary of major new changes since Subversion 1.0."}, {"start_index": 93942, "end_index": 93976, "text": "out of date Here&#39;s an example."}, {"start_index": 181199, "end_index": 181221, "text": "Here&#39;s an example."}, {"start_index": 359327, "end_index": 359367, "text": "Here&#39;s where the difficulty sets in."}]}, {"group_id": 54, "duplicates": [{"start_index": 69822, "end_index": 70020, "text": "The Apache server, however, gained some new logging features of its own, and Subversion&#39;s API bindings to other languages also made great leaps forward."}, {"start_index": 1021068, "end_index": 1021128, "text": "After all, Subversion uses Subversion&#39;s APIs, too."}]}, {"group_id": 55, "duplicates": [{"start_index": 73655, "end_index": 73786, "text": "This is the most common use for Subversion, and therefore it is the scenario underlying all of the book&#39;s examples."}, {"start_index": 93942, "end_index": 93976, "text": "out of date Here&#39;s an example."}, {"start_index": 181199, "end_index": 181221, "text": "Here&#39;s an example."}, {"start_index": 359327, "end_index": 359367, "text": "Here&#39;s where the difficulty sets in."}]}, {"group_id": 56, "duplicates": [{"start_index": 73969, "end_index": 74205, "text": "While this book is written with the assumption that the reader has never used a version control system, we&#39;ve also tried to make it easy for users of CVS (and other systems) to make a painless leap into Subversion."}, {"start_index": 383991, "end_index": 384036, "text": "Unfortunately, the system isn&#39;t flawless."}]}, {"group_id": 57, "duplicates": [{"start_index": 75334, "end_index": 75447, "text": "(And if you&#39;re actually reading this section, you&#39;re probably already a top-down learner yourself!)"}, {"start_index": 235433, "end_index": 235479, "text": "And no, they aren&#39;t the same street."}]}, {"group_id": 58, "duplicates": [{"start_index": 76812, "end_index": 76966, "text": "If you&#39;ve never used a version control system, then is a vital introduction to the ideas behind version control."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 59, "duplicates": [{"start_index": 77025, "end_index": 77137, "text": "Advanced users Whether you&#39;re a user or administrator, eventually your project will grow larger."}, {"start_index": 134245, "end_index": 134266, "text": "What&#39;s In a Name?"}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 60, "duplicates": [{"start_index": 77139, "end_index": 77450, "text": "You&#39;re going to want to learn how to do more advanced things with Subversion, such as how to use Subversion&#39;s property support ( ), how to use branches and perform merges ( ), how to configure runtime options ( ), and other things."}, {"start_index": 124377, "end_index": 124433, "text": "Let&#39;s move now into the details of using Subversion."}, {"start_index": 233943, "end_index": 233984, "text": "You&#39;re not supposed to name it."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1021068, "end_index": 1021128, "text": "After all, Subversion uses Subversion&#39;s APIs, too."}]}, {"group_id": 61, "duplicates": [{"start_index": 80996, "end_index": 81059, "text": "As such, it has always been under a free license (see )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 62, "duplicates": [{"start_index": 83168, "end_index": 83362, "text": "An exhaustive listing of those folks&#39; names would be impractical to print and maintain here, but may their names live on forever in this book&#39;s version control history!"}, {"start_index": 580211, "end_index": 580253, "text": "Here&#39;s where version control can help."}]}, {"group_id": 63, "duplicates": [{"start_index": 83900, "end_index": 84124, "text": "Version Control Basics version control systems A version control system (or revision control system) is a system that tracks incremental versions (or revisions) of files and, in some cases, directories over time."}, {"start_index": 569843, "end_index": 569886, "text": "This is version control, after all!"}]}, {"group_id": 64, "duplicates": [{"start_index": 84499, "end_index": 84612, "text": "In this section, we&#39;ll introduce some fairly high-level version control system components and concepts."}, {"start_index": 406167, "end_index": 406241, "text": "In this section, we&#39;ll look in detail at how to do these things."}]}, {"group_id": 65, "duplicates": [{"start_index": 84614, "end_index": 84855, "text": "We&#39;ll limit our discussion to modern version control systems in today&#39;s interconnected world, there is very little point in acknowledging version control systems which cannot operate across wide-area networks."}, {"start_index": 134245, "end_index": 134266, "text": "What&#39;s In a Name?"}, {"start_index": 179969, "end_index": 180027, "text": "You aren&#39;t limited strictly to all-or-nothing options."}, {"start_index": 233943, "end_index": 233984, "text": "You&#39;re not supposed to name it."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 66, "duplicates": [{"start_index": 84856, "end_index": 85065, "text": "The Repository repositories repositories filesystem tree version control systems clients At the core of the version control system is a repository, which is the central store of that system&#39;s data."}, {"start_index": 383991, "end_index": 384036, "text": "Unfortunately, the system isn&#39;t flawless."}]}, {"group_id": 67, "duplicates": [{"start_index": 86185, "end_index": 86311, "text": "A version control client can ask historical questions such as What did this directory contain last Wednesday?"}, {"start_index": 569843, "end_index": 569886, "text": "This is version control, after all!"}]}, {"group_id": 68, "duplicates": [{"start_index": 86504, "end_index": 86764, "text": "The Working Copy working copies A version control system&#39;s value comes from the fact that it tracks versions of files and directories, but the rest of the software universe doesn&#39;t operate on versions of files and directories ."}, {"start_index": 383991, "end_index": 384036, "text": "Unfortunately, the system isn&#39;t flawless."}, {"start_index": 569843, "end_index": 569886, "text": "This is version control, after all!"}]}, {"group_id": 69, "duplicates": [{"start_index": 88091, "end_index": 88294, "text": "The task of managing the working copy and communicating changes made to its contents to and from the repository falls squarely to the version control system&#39;s client software."}, {"start_index": 383991, "end_index": 384036, "text": "Unfortunately, the system isn&#39;t flawless."}]}, {"group_id": 70, "duplicates": [{"start_index": 88666, "end_index": 88759, "text": "It&#39;s important to understand these different strategies, for a couple of reasons."}, {"start_index": 134245, "end_index": 134266, "text": "What&#39;s In a Name?"}, {"start_index": 207354, "end_index": 207413, "text": "to make certain that they&#39;re not of importance."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 71, "duplicates": [{"start_index": 89341, "end_index": 89462, "text": "It&#39;s all too easy for users to accidentally overwrite each other&#39;s changes in the repository."}, {"start_index": 134245, "end_index": 134266, "text": "What&#39;s In a Name?"}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 72, "duplicates": [{"start_index": 89654, "end_index": 89848, "text": "If Harry saves his changes to the repository first, it&#39;s possible that (a few moments later) Sally could accidentally overwrite them with her own new version of the file."}, {"start_index": 94191, "end_index": 94249, "text": "Sally saves her changes to the repository first."}, {"start_index": 450295, "end_index": 450331, "text": "First, it&#39;s not very safe."}, {"start_index": 450436, "end_index": 450477, "text": "Second, it&#39;s not very flexible."}]}, {"group_id": 73, "duplicates": [{"start_index": 91754, "end_index": 91834, "text": "Now Sally has to get an administrator to release Harry&#39;s lock."}, {"start_index": 1148448, "end_index": 1148499, "text": "&#39;house.jpg&#39; locked by user &#39;harry&#39;."}, {"start_index": 1205776, "end_index": 1205805, "text": "&#39;house.jpg&#39; unlocked."}]}, {"group_id": 74, "duplicates": [{"start_index": 92954, "end_index": 93183, "text": "It&#39;s easy for Harry and Sally to imagine that by locking files, each is beginning a safe, insulated task, and thus they need not bother discussing their incompatible changes early on."}, {"start_index": 134245, "end_index": 134266, "text": "What&#39;s In a Name?"}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 75, "duplicates": [{"start_index": 93786, "end_index": 93941, "text": "The version control system often assists with the merging, but ultimately, a human being is responsible for making it happen correctly."}, {"start_index": 569843, "end_index": 569886, "text": "This is version control, after all!"}]}, {"group_id": 76, "duplicates": [{"start_index": 96562, "end_index": 96792, "text": "So there&#39;s no point in being lulled into a false sense of security that a locking system will somehow prevent conflicts; in practice, locking seems to inhibit productivity more than anything else."}, {"start_index": 134245, "end_index": 134266, "text": "What&#39;s In a Name?"}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 77, "duplicates": [{"start_index": 97817, "end_index": 97952, "text": "Version Control the Subversion Way We&#39;ve mentioned already that Subversion is a modern, network-aware version control system."}, {"start_index": 134245, "end_index": 134266, "text": "What&#39;s In a Name?"}, {"start_index": 233943, "end_index": 233984, "text": "You&#39;re not supposed to name it."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 594612, "end_index": 594650, "text": "So let&#39;s create our vendor branch."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 754228, "end_index": 754296, "text": "So let&#39;s look now at the user end of these operations."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 78, "duplicates": [{"start_index": 98232, "end_index": 98355, "text": "In this section, we&#39;ll begin to introduce the specific ways in which Subversion implements version control."}, {"start_index": 406167, "end_index": 406241, "text": "In this section, we&#39;ll look in detail at how to do these things."}]}, {"group_id": 79, "duplicates": [{"start_index": 104173, "end_index": 104308, "text": "You cannot use Subversion&#39;s file:// URLs in a regular web browser the way you can use typical file:// URLs."}, {"start_index": 1021068, "end_index": 1021128, "text": "After all, Subversion uses Subversion&#39;s APIs, too."}]}, {"group_id": 80, "duplicates": [{"start_index": 104510, "end_index": 104689, "text": "However, Subversion&#39;s resources exist in a virtual filesystem (see ), and your browser will not understand how to interact with that filesystem."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 81, "duplicates": [{"start_index": 105660, "end_index": 105857, "text": "repository-relative URL caret syntax ^ caret syntax In Subversion 1.6, a new caret ( ^ ) notation was introduced as a shorthand for the URL of the repository&#39;s root directory ."}, {"start_index": 1184335, "end_index": 1184432, "text": "The content of the repository doesn&#39;t change, but the repository&#39;s root URL does."}]}, {"group_id": 82, "duplicates": [{"start_index": 106082, "end_index": 106311, "text": "Note that this URL syntax works only when your current working directory is a working copy the command-line client knows the repository&#39;s root URL by looking at the working copy&#39;s metadata."}, {"start_index": 1184335, "end_index": 1184432, "text": "The content of the repository doesn&#39;t change, but the repository&#39;s root URL does."}]}, {"group_id": 83, "duplicates": [{"start_index": 108211, "end_index": 108427, "text": "The files in the administrative directory help Subversion recognize which of your versioned files contain unpublished changes, and which files are out of date with respect to others&#39; work."}, {"start_index": 207354, "end_index": 207413, "text": "to make certain that they&#39;re not of importance."}]}, {"group_id": 84, "duplicates": [{"start_index": 110330, "end_index": 110471, "text": "An svn commit of the file will do nothing, and an svn update of the file will do nothing."}, {"start_index": 111224, "end_index": 111401, "text": "An svn commit of the file will do nothing, and an svn update of the file will fold the latest changes into your working copy."}]}, {"group_id": 85, "duplicates": [{"start_index": 110472, "end_index": 110674, "text": "Locally changed, and current The file has been changed in the working directory, and no changes to that file have been committed to the repository since you last updated."}, {"start_index": 110935, "end_index": 111076, "text": "Unchanged, and out of date The file has not been changed in the working directory, but it has been changed in the repository."}, {"start_index": 111402, "end_index": 111529, "text": "Locally changed, and out of date The file has been changed both in the working directory and in the repository."}]}, {"group_id": 86, "duplicates": [{"start_index": 112929, "end_index": 113159, "text": "For example, if you check out /calc , you will get a working copy like this: $ svn checkout http://svn.example.com/repos/calc A calc/Makefile A calc/integer.c A calc/button.c Checked out revision 56."}, {"start_index": 388122, "end_index": 388264, "text": "$ svn checkout http://svn.example.com/repos/calc A calc A calc/Makefile A calc/integer.c A calc/button.c Checked out revision 148."}, {"start_index": 391764, "end_index": 391812, "text": "$ svn checkout http://svn.example.com/projects ."}]}, {"group_id": 87, "duplicates": [{"start_index": 114082, "end_index": 114337, "text": "svn subcommands commit committing To publish your changes, you can use Subversion&#39;s svn commit command: $ svn commit button.c -m &quot;Fixed a typo in button.c.&quot; Sending button.c Transmitting file data . Committed revision 57."}, {"start_index": 740547, "end_index": 740593, "text": "Transmitting file data . Committed revision 3."}, {"start_index": 740630, "end_index": 740679, "text": "Transmitting file data . Committed revision 4063."}, {"start_index": 740717, "end_index": 740766, "text": "Transmitting file data . Committed revision 4064."}]}, {"group_id": 88, "duplicates": [{"start_index": 115328, "end_index": 115465, "text": "$ pwd /home/sally/calc $ ls -A Makefile button.c integer.c .svn/ $ svn update Updating &#39;.&#39;: U button.c Updated to revision 57."}, {"start_index": 214024, "end_index": 214128, "text": "$ svn update Updating &#39;.&#39;: C code/bar.c A code/baz.c U Makefile Updated to revision 14."}, {"start_index": 223609, "end_index": 223670, "text": "If you aren&#39;t, you&#39;ll want to first read and ."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 423929, "end_index": 424115, "text": "You can avoid future appearances of this warning by setting the value of the &#39;store-plaintext-passwords&#39; option to either &#39;yes&#39; or &#39;no&#39; in &#39;/tmp/servers&#39;."}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 480460, "end_index": 480507, "text": "$ svn up Updating &#39;.&#39;: At revision 361."}, {"start_index": 483617, "end_index": 483741, "text": "-c 958 --- Merging r958 into &#39;.&#39;: U src/main.c --- Recording mergeinfo for merge of r958 into &#39;.&#39;: U ."}, {"start_index": 486214, "end_index": 486382, "text": "$ svn merge ^/calc/trunk --- Merging r362 through r378 into &#39;.&#39;: U src/main.c --- Recording mergeinfo for merge of r362 through r378 into &#39;.&#39;: U ."}, {"start_index": 487808, "end_index": 488045, "text": "$ svn merge ^/calc/branches/my-calc-branch --- Merging differences between repository URLs into &#39;.&#39;: U src/real.c U src/main.c U Makefile --- Recording mergeinfo for merge between repository URLs into &#39;.&#39;: U ."}, {"start_index": 505463, "end_index": 505489, "text": "$ svn merge ^/calc/trunk ."}, {"start_index": 505490, "end_index": 505683, "text": "-c-392 --- Reverse-merging r392 into &#39;.&#39;: U src/real.c U src/main.c U src/button.c U src/integer.c --- Recording mergeinfo for reverse merge of r392 into &#39;.&#39;: U ."}, {"start_index": 507173, "end_index": 507194, "text": "Yes, that&#39;s true."}, {"start_index": 514183, "end_index": 514250, "text": "$ svn up Updating &#39;.&#39;: A real.c Updated to revision 402."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 533695, "end_index": 533882, "text": "$ svn st $ svn merge ^/paint/trunk -r289:291 --- Merging r290 through r291 into &#39;.&#39;: C Makefile --- Recording mergeinfo for merge of r290 through r291 into &#39;.&#39;: U ."}, {"start_index": 539244, "end_index": 539310, "text": "--- Recording mergeinfo for merge of r465 into &#39;.&#39;: G ."}, {"start_index": 539784, "end_index": 539976, "text": "Now any subsequent attempts to merge the feature to /paint/trunk are inoperative: $ svn merge ^/paint/trunk -c465 --- Recording mergeinfo for merge of r465 into &#39;.&#39;: U ."}, {"start_index": 540001, "end_index": 540140, "text": "$ svn merge ^/paint/branches/paint-python-wrapper -r462:464 --- Recording mergeinfo for merge of r463 through r464 into &#39;.&#39;: U ."}, {"start_index": 540773, "end_index": 540897, "text": "$ svn merge ^/paint/trunk -c465 --ignore-ancestry --- Merging r465 into &#39;.&#39;: A python A python/paint.py G ."}, {"start_index": 551985, "end_index": 552067, "text": "--- Recording mergeinfo for merge between repository URLs into &#39;.&#39;: U ."}, {"start_index": 553263, "end_index": 553506, "text": "$ svn merge ^/calc/branches/my-calc-branch --- Merging differences between repository URLs into &#39;.&#39;: C src/integer.c U src/real.c A src/whole.c --- Recording mergeinfo for merge between repository URLs into &#39;.&#39;: U ."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 585529, "end_index": 585709, "text": "$ svn merge ^/calc/branches/mybranch --- Merging differences between repository URLs into &#39;.&#39;: U real.c U integer.c A newdirectory A newdirectory/newfile U ."}, {"start_index": 614039, "end_index": 614118, "text": "That&#39;s not to say that there are no technical penalties to branching."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1209142, "end_index": 1209187, "text": "Updating &#39;ziptastic&#39;: At revision 43."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 89, "duplicates": [{"start_index": 117894, "end_index": 118081, "text": "Just because you&#39;re ready to submit new changes to the repository doesn&#39;t mean you&#39;re ready to receive changes that others have checked in."}, {"start_index": 233943, "end_index": 233984, "text": "You&#39;re not supposed to name it."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1184335, "end_index": 1184432, "text": "The content of the repository doesn&#39;t change, but the repository&#39;s root URL does."}]}, {"group_id": 90, "duplicates": [{"start_index": 118461, "end_index": 118570, "text": "It&#39;s made more complicated by the fact that directories themselves are versioned."}, {"start_index": 134245, "end_index": 134266, "text": "What&#39;s In a Name?"}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 91, "duplicates": [{"start_index": 118939, "end_index": 119094, "text": "After the commit succeeds, many new users would expect the working copy to be entirely at revision 15, but that&#39;s not the case!"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 92, "duplicates": [{"start_index": 120510, "end_index": 120614, "text": "Even if you&#39;re the only person using the repository, you will still see this phenomenon."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 765255, "end_index": 765319, "text": "It&#39;s your data protect it as much as you&#39;d like."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 93, "duplicates": [{"start_index": 120616, "end_index": 120815, "text": "To examine your mixture of working revisions, use the svn status command with the --verbose ( -v ) option (see for more information)."}, {"start_index": 260492, "end_index": 260544, "text": "Simply supply the --verbose ( -v ) option."}, {"start_index": 1247505, "end_index": 1247534, "text": "--verbose ( -v ) Be verbose."}]}, {"group_id": 94, "duplicates": [{"start_index": 121069, "end_index": 121213, "text": "For example, the svn log command is used to display the history of changes to a file or directory (see )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 95, "duplicates": [{"start_index": 121353, "end_index": 121578, "text": "But if the object&#39;s working revision is quite old (often because svn update hasn&#39;t been run in a long time), the history of the older version of the object is shown."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}]}, {"group_id": 96, "duplicates": [{"start_index": 121579, "end_index": 121943, "text": "Mixed revisions are useful backdating If your project is sufficiently complex, you&#39;ll discover that it&#39;s sometimes nice to forcibly backdate (or update to a revision older than the one you already have) portions of your working copy to an earlier revision; you&#39;ll learn how to do that in ."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 97, "duplicates": [{"start_index": 122851, "end_index": 122955, "text": "Second, you cannot commit a metadata change to a directory unless it&#39;s fully up to date."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 98, "duplicates": [{"start_index": 122957, "end_index": 123029, "text": "You&#39;ll learn about attaching properties to items in ."}, {"start_index": 233943, "end_index": 233984, "text": "You&#39;re not supposed to name it."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 99, "duplicates": [{"start_index": 124591, "end_index": 124698, "text": "You&#39;ll start with getting your files into Subversion, followed by an initial checkout of your code."}, {"start_index": 233943, "end_index": 233984, "text": "You&#39;re not supposed to name it."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 100, "duplicates": [{"start_index": 124700, "end_index": 124779, "text": "We&#39;ll then walk you through making changes and examining those changes."}, {"start_index": 134245, "end_index": 134266, "text": "What&#39;s In a Name?"}, {"start_index": 233943, "end_index": 233984, "text": "You&#39;re not supposed to name it."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 800143, "end_index": 800212, "text": "Let&#39;s walk through these files and learn how to use them."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 101, "duplicates": [{"start_index": 124781, "end_index": 124931, "text": "You&#39;ll also see how to bring changes made by others into your working copy, examine them, and work through any conflicts that might arise."}, {"start_index": 233943, "end_index": 233984, "text": "You&#39;re not supposed to name it."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 102, "duplicates": [{"start_index": 125685, "end_index": 125777, "text": "Or, if you&#39;d prefer to set up and administer your own repositories, check out ."}, {"start_index": 207354, "end_index": 207413, "text": "to make certain that they&#39;re not of importance."}]}, {"group_id": 103, "duplicates": [{"start_index": 125779, "end_index": 125903, "text": "But don&#39;t expect the examples in this chapter to work without the user having access to a Subversion repository."}, {"start_index": 223609, "end_index": 223670, "text": "If you aren&#39;t, you&#39;ll want to first read and ."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 423929, "end_index": 424115, "text": "You can avoid future appearances of this warning by setting the value of the &#39;store-plaintext-passwords&#39; option to either &#39;yes&#39; or &#39;no&#39; in &#39;/tmp/servers&#39;."}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 507173, "end_index": 507194, "text": "Yes, that&#39;s true."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 614039, "end_index": 614118, "text": "That&#39;s not to say that there are no technical penalties to branching."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 104, "duplicates": [{"start_index": 126957, "end_index": 127260, "text": "Type &#39;svn help &lt;subcommand&gt;&#39; for help on a specific subcommand. Type &#39;svn --version&#39; to see the program version and RA modules or &#39;svn --version --quiet&#39; to see just the version number. Most subcommands take file and/or directory arguments, recursing on the directories."}, {"start_index": 672337, "end_index": 672737, "text": "Type &#39;svnlook help &lt;subcommand&gt;&#39; for help on a specific subcommand. Type &#39;svnlook --version&#39; to see the program version and FS modules. Most of svnlook &#39;s subcommands can operate on either a revision or a transaction tree, printing information about the tree itself, or how it differs from the previous revision of the repository."}]}, {"group_id": 105, "duplicates": [{"start_index": 128190, "end_index": 128433, "text": "You&#39;ll find the options supported by a given svn subcommand, plus a set of options which are globally supported by all subcommands, listed near the bottom of the built-in usage message for that subcommand."}, {"start_index": 233943, "end_index": 233984, "text": "You&#39;re not supposed to name it."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 106, "duplicates": [{"start_index": 130178, "end_index": 130319, "text": "We&#39;ll discuss svn import now and will discuss svn add later in this chapter when we review a typical day with Subversion."}, {"start_index": 134245, "end_index": 134266, "text": "What&#39;s In a Name?"}, {"start_index": 233943, "end_index": 233984, "text": "You&#39;re not supposed to name it."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 578661, "end_index": 578717, "text": "We&#39;ll discuss this more in the next section."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 107, "duplicates": [{"start_index": 130805, "end_index": 131096, "text": "For example: $ svn import /path/to/mytree \\ http://svn.example.com/svn/repo/some/project \\ -m &quot;Initial import&quot; Adding mytree/foo.c Adding mytree/bar.c Adding mytree/subdir Adding mytree/subdir/quux.h Committed revision 1."}, {"start_index": 886139, "end_index": 886160, "text": "Committed revision 1."}, {"start_index": 886408, "end_index": 886429, "text": "Committed revision 1."}, {"start_index": 886677, "end_index": 886698, "text": "Committed revision 1."}]}, {"group_id": 108, "duplicates": [{"start_index": 137537, "end_index": 137904, "text": "Unless otherwise specified, this copy contains the youngest (that is, most recently created or modified) versions of the directory and its children found in the Subversion repository: $ svn checkout http://svn.example.com/svn/repo/trunk A trunk/README A trunk/INSTALL A trunk/src/main.c A trunk/src/header.h Checked out revision 8810."}, {"start_index": 391764, "end_index": 391812, "text": "$ svn checkout http://svn.example.com/projects ."}]}, {"group_id": 109, "duplicates": [{"start_index": 137905, "end_index": 138266, "text": "$ Although the preceding example checks out the trunk directory, you can just as easily check out a deeper subdirectory of a repository by specifying that subdirectory&#39;s URL as the checkout URL: $ svn checkout http://svn.example.com/svn/repo/trunk/src A src/main.c A src/header.h A src/lib/helpers.c Checked out revision 8810."}, {"start_index": 391764, "end_index": 391812, "text": "$ svn checkout http://svn.example.com/projects ."}]}, {"group_id": 110, "duplicates": [{"start_index": 138267, "end_index": 138458, "text": "$ Since Subversion uses a copy-modify-merge model instead of lock-modify-unlock (see ), you can immediately make changes to the files and directories in your working copy."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 111, "duplicates": [{"start_index": 139170, "end_index": 139381, "text": "Unless you&#39;re ready to commit the addition of a new file or directory or changes to existing ones, there&#39;s no need to further notify the Subversion server that you&#39;ve done anything."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}, {"start_index": 1216639, "end_index": 1216708, "text": "It&#39;s unlikely that you&#39;ll need to run this command."}]}, {"group_id": 112, "duplicates": [{"start_index": 139600, "end_index": 139760, "text": "Usually, your operating system&#39;s directory listing commands won&#39;t show this subdirectory, but it is nevertheless an important directory."}, {"start_index": 383991, "end_index": 384036, "text": "Unfortunately, the system isn&#39;t flawless."}]}, {"group_id": 113, "duplicates": [{"start_index": 140487, "end_index": 140721, "text": "For example: $ svn checkout http://svn.example.com/svn/repo/trunk my-working-copy A my-working-copy/README A my-working-copy/INSTALL A my-working-copy/src/main.c A my-working-copy/src/header.h Checked out revision 8810."}, {"start_index": 391764, "end_index": 391812, "text": "$ svn checkout http://svn.example.com/projects ."}]}, {"group_id": 114, "duplicates": [{"start_index": 141017, "end_index": 141176, "text": "In this section, we&#39;ll run through the most common things that you might find yourself doing with Subversion in the course of a day&#39;s work."}, {"start_index": 406167, "end_index": 406241, "text": "In this section, we&#39;ll look in detail at how to do these things."}]}, {"group_id": 115, "duplicates": [{"start_index": 142212, "end_index": 142272, "text": "Resolve any conflicts (merge others&#39; changes)."}, {"start_index": 207354, "end_index": 207413, "text": "to make certain that they&#39;re not of importance."}]}, {"group_id": 116, "duplicates": [{"start_index": 142405, "end_index": 142577, "text": "You&#39;ll want to integrate their changes into your working copy to avoid the potential out-of-dateness scenarios when you attempt to publish your own."}, {"start_index": 233943, "end_index": 233984, "text": "You&#39;re not supposed to name it."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 117, "duplicates": [{"start_index": 142819, "end_index": 142997, "text": "The svn commit command transmits your changes to the repository where, if they are accepted, they create the newest versions of all the things you modified."}, {"start_index": 185567, "end_index": 185644, "text": "The svn commit command sends all of your changes to the repository."}]}, {"group_id": 118, "duplicates": [{"start_index": 143778, "end_index": 143972, "text": "Use svn update to bring your working copy into sync with the latest revision in the repository: $ svn update Updating &#39;.&#39;: U foo.c U bar.c Updated to revision 2."}, {"start_index": 177465, "end_index": 177652, "text": "Sally updates her working copy before committing and she gets a conflict, which she postpones: $ svn update Updating &#39;.&#39;: Conflict discovered in &#39;sandwich.txt&#39;."}, {"start_index": 214024, "end_index": 214128, "text": "$ svn update Updating &#39;.&#39;: C code/bar.c A code/baz.c U Makefile Updated to revision 14."}, {"start_index": 223609, "end_index": 223670, "text": "If you aren&#39;t, you&#39;ll want to first read and ."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 423929, "end_index": 424115, "text": "You can avoid future appearances of this warning by setting the value of the &#39;store-plaintext-passwords&#39; option to either &#39;yes&#39; or &#39;no&#39; in &#39;/tmp/servers&#39;."}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 480460, "end_index": 480507, "text": "$ svn up Updating &#39;.&#39;: At revision 361."}, {"start_index": 483617, "end_index": 483741, "text": "-c 958 --- Merging r958 into &#39;.&#39;: U src/main.c --- Recording mergeinfo for merge of r958 into &#39;.&#39;: U ."}, {"start_index": 486214, "end_index": 486382, "text": "$ svn merge ^/calc/trunk --- Merging r362 through r378 into &#39;.&#39;: U src/main.c --- Recording mergeinfo for merge of r362 through r378 into &#39;.&#39;: U ."}, {"start_index": 487808, "end_index": 488045, "text": "$ svn merge ^/calc/branches/my-calc-branch --- Merging differences between repository URLs into &#39;.&#39;: U src/real.c U src/main.c U Makefile --- Recording mergeinfo for merge between repository URLs into &#39;.&#39;: U ."}, {"start_index": 505463, "end_index": 505489, "text": "$ svn merge ^/calc/trunk ."}, {"start_index": 505490, "end_index": 505683, "text": "-c-392 --- Reverse-merging r392 into &#39;.&#39;: U src/real.c U src/main.c U src/button.c U src/integer.c --- Recording mergeinfo for reverse merge of r392 into &#39;.&#39;: U ."}, {"start_index": 507173, "end_index": 507194, "text": "Yes, that&#39;s true."}, {"start_index": 514183, "end_index": 514250, "text": "$ svn up Updating &#39;.&#39;: A real.c Updated to revision 402."}, {"start_index": 518984, "end_index": 519417, "text": "Because we already cherrypicked r413, that change is skipped: $ svn merge ^/calc/trunk --- Merging r403 through r412 into &#39;.&#39;: U doc/INSTALL U src/main.c U src/button.c U src/integer.c U Makefile U README --- Merging r414 through r458 into &#39;.&#39;: G doc/INSTALL G src/main.c G src/integer.c G Makefile --- Recording mergeinfo for merge of r403 through r458 into &#39;.&#39;: U ."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 533695, "end_index": 533882, "text": "$ svn st $ svn merge ^/paint/trunk -r289:291 --- Merging r290 through r291 into &#39;.&#39;: C Makefile --- Recording mergeinfo for merge of r290 through r291 into &#39;.&#39;: U ."}, {"start_index": 539244, "end_index": 539310, "text": "--- Recording mergeinfo for merge of r465 into &#39;.&#39;: G ."}, {"start_index": 539784, "end_index": 539976, "text": "Now any subsequent attempts to merge the feature to /paint/trunk are inoperative: $ svn merge ^/paint/trunk -c465 --- Recording mergeinfo for merge of r465 into &#39;.&#39;: U ."}, {"start_index": 540001, "end_index": 540140, "text": "$ svn merge ^/paint/branches/paint-python-wrapper -r462:464 --- Recording mergeinfo for merge of r463 through r464 into &#39;.&#39;: U ."}, {"start_index": 540773, "end_index": 540897, "text": "$ svn merge ^/paint/trunk -c465 --ignore-ancestry --- Merging r465 into &#39;.&#39;: A python A python/paint.py G ."}, {"start_index": 551670, "end_index": 551984, "text": "First you perform an automatic sync merge with /calc/trunk and commit that in r470: $ cd calc/trunk $ svn merge ^/calc/trunk --- Merging differences between repository URLs into &#39;.&#39;: U doc/INSTALL A FAQ U src/main.c U src/button.c U src/integer.c U Makefile U README U ."}, {"start_index": 551985, "end_index": 552067, "text": "--- Recording mergeinfo for merge between repository URLs into &#39;.&#39;: U ."}, {"start_index": 553263, "end_index": 553506, "text": "$ svn merge ^/calc/branches/my-calc-branch --- Merging differences between repository URLs into &#39;.&#39;: C src/integer.c U src/real.c A src/whole.c --- Recording mergeinfo for merge between repository URLs into &#39;.&#39;: U ."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 585358, "end_index": 585527, "text": "You can then run an automatic reintegrate merge from the branch back to the trunk: $ cd trunk-working-copy $ svn update Updating &#39;.&#39;: At revision 1910."}, {"start_index": 585529, "end_index": 585709, "text": "$ svn merge ^/calc/branches/mybranch --- Merging differences between repository URLs into &#39;.&#39;: U real.c U integer.c A newdirectory A newdirectory/newfile U ."}, {"start_index": 614039, "end_index": 614118, "text": "That&#39;s not to say that there are no technical penalties to branching."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}, {"start_index": 1191497, "end_index": 1191769, "text": "Options Examples Here&#39;s an example where, after a postponed conflict resolution during update, svn resolve replaces the all conflicts in file foo.c with your edits: $ svn update Updating &#39;.&#39;: Conflict discovered in &#39;foo.c&#39;."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1209142, "end_index": 1209187, "text": "Updating &#39;ziptastic&#39;: At revision 43."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 119, "duplicates": [{"start_index": 144754, "end_index": 144971, "text": "You don&#39;t need to tell Subversion that you intend to change a file; just make your changes using your text editor, word processor, graphics program, or whatever tool you would normally use."}, {"start_index": 233943, "end_index": 233984, "text": "You&#39;re not supposed to name it."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 486793, "end_index": 486849, "text": "You&#39;ll need a working copy of /calc/trunk ."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 120, "duplicates": [{"start_index": 146572, "end_index": 146718, "text": "But that doesn&#39;t in any way limit the usability of working copies on systems such as Windows that do not support symlinks."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 431284, "end_index": 431323, "text": "Fortunately, it&#39;s not the only way."}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 121, "duplicates": [{"start_index": 148893, "end_index": 149011, "text": "svn copy does not create intermediate directories unless you pass the --parents option."}, {"start_index": 149298, "end_index": 149416, "text": "svn move does not create intermediate directories unless you pass the --parents option."}]}, {"group_id": 122, "duplicates": [{"start_index": 151053, "end_index": 151286, "text": "Review Your Changes log message Once you&#39;ve finished making changes, you need to commit them to the repository, but before you do so, it&#39;s usually a good idea to take a look at exactly what you&#39;ve changed."}, {"start_index": 1184335, "end_index": 1184432, "text": "The content of the repository doesn&#39;t change, but the repository&#39;s root URL does."}]}, {"group_id": 123, "duplicates": [{"start_index": 153380, "end_index": 153476, "text": "You&#39;ll probably use svn status more than any other Subversion command."}, {"start_index": 233943, "end_index": 233984, "text": "You&#39;re not supposed to name it."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 124, "duplicates": [{"start_index": 154608, "end_index": 154719, "text": "item The file, directory, or symbolic link item is not under version control."}, {"start_index": 154720, "end_index": 154861, "text": "A item The file, directory, or symbolic link item has been scheduled for addition into the repository."}, {"start_index": 155263, "end_index": 155404, "text": "D item The file, directory, or symbolic link item has been scheduled for deletion from the repository."}]}, {"group_id": 125, "duplicates": [{"start_index": 155485, "end_index": 156240, "text": "If you pass a specific path to svn status , you get information about that item alone: $ svn status stuff/fish.c D stuff/fish.c svn status also has a --verbose ( -v ) option, which will show you the status of every item in your working copy, even if it has not been changed: $ svn status -v M 44 23 sally README 44 30 sally INSTALL M 44 20 harry bar.c 44 18 ira stuff 44 35 harry stuff/trout.c D 44 19 ira stuff/fish.c 44 21 sally stuff/things A 0 ?"}, {"start_index": 260492, "end_index": 260544, "text": "Simply supply the --verbose ( -v ) option."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}, {"start_index": 1247505, "end_index": 1247534, "text": "--verbose ( -v ) Be verbose."}]}, {"group_id": 126, "duplicates": [{"start_index": 157142, "end_index": 157589, "text": "For this, svn status offers the --show-updates ( -u ) option, which contacts the repository and adds information about items that are out of date: $ svn status -u -v M * 44 23 sally README M 44 20 harry bar.c * 44 35 harry stuff/trout.c D 44 19 ira stuff/fish.c A 0 ?"}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 127, "duplicates": [{"start_index": 159585, "end_index": 160242, "text": "Here&#39;s an example: $ svn diff Index: bar.c =================================================================== --- bar.c (revision 3) +++ bar.c (working copy) @@ -1,7 +1,12 @@ +#include &lt;sys/types.h&gt; +#include &lt;sys/stat.h&gt; +#include &lt;unistd.h&gt; + +#include &lt;stdio.h&gt; int main(void) { - printf(&quot;Sixty-four slices of American Cheese...\\n&quot;); + printf(&quot;Sixty-five slices of American Cheese...\\n&quot;); return 0; } Index: README =================================================================== --- README (revision 3) +++ README (working copy) @@ -193,3 +193,4 @@ +Note to self: pick up laundry."}, {"start_index": 181199, "end_index": 181221, "text": "Here&#39;s an example."}, {"start_index": 359327, "end_index": 359367, "text": "Here&#39;s where the difficulty sets in."}, {"start_index": 475322, "end_index": 475395, "text": "=================================================================== --- ."}, {"start_index": 538297, "end_index": 538370, "text": "=================================================================== --- ."}, {"start_index": 539346, "end_index": 539419, "text": "=================================================================== --- ."}]}, {"group_id": 128, "duplicates": [{"start_index": 160244, "end_index": 160445, "text": "Index: stuff/fish.c =================================================================== --- stuff/fish.c (revision 1) +++ stuff/fish.c (working copy) -Welcome to the file known as &#39;fish&#39;."}, {"start_index": 475322, "end_index": 475395, "text": "=================================================================== --- ."}, {"start_index": 538297, "end_index": 538370, "text": "=================================================================== --- ."}, {"start_index": 539346, "end_index": 539419, "text": "=================================================================== --- ."}]}, {"group_id": 129, "duplicates": [{"start_index": 160487, "end_index": 160715, "text": "Index: stuff/things/bloo.h =================================================================== --- stuff/things/bloo.h (revision 8) +++ stuff/things/bloo.h (working copy) +Here is a new file to describe +things about bloo."}, {"start_index": 475322, "end_index": 475395, "text": "=================================================================== --- ."}, {"start_index": 538297, "end_index": 538370, "text": "=================================================================== --- ."}, {"start_index": 539346, "end_index": 539419, "text": "=================================================================== --- ."}]}, {"group_id": 130, "duplicates": [{"start_index": 163061, "end_index": 163236, "text": "You could attempt to apply those changes to the file again in reverse using svn patch --reverse-diff or using your operating system&#39;s patch -R ."}, {"start_index": 383991, "end_index": 384036, "text": "Unfortunately, the system isn&#39;t flawless."}]}, {"group_id": 131, "duplicates": [{"start_index": 163448, "end_index": 163772, "text": "Just use the svn revert command: $ svn status README M README $ svn revert README Reverted &#39;README&#39; $ svn status README $ In this example, Subversion has reverted the file to its premodified state by overwriting it with the pristine version of the file cached in the text-base area."}, {"start_index": 164137, "end_index": 164422, "text": "new-file.txt $ Or perhaps you mistakenly removed a file from version control: $ svn status README $ svn delete README D README $ svn revert README Reverted &#39;README&#39; $ svn status README $ The svn revert command offers salvation for imperfect people."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 132, "duplicates": [{"start_index": 163774, "end_index": 163979, "text": "But note that svn revert can undo any scheduled operation for example, you might decide that you don&#39;t want to add a new file after all: $ svn status new-file.txt ?"}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 133, "duplicates": [{"start_index": 163986, "end_index": 164130, "text": "new-file.txt $ svn add new-file.txt A new-file.txt $ svn revert new-file.txt Reverted &#39;new-file.txt&#39; $ svn status new-file.txt ?"}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 134, "duplicates": [{"start_index": 164678, "end_index": 164878, "text": "Resolve Any Conflicts conflicts resolving We&#39;ve already seen how svn status -u can predict conflicts, but dealing with those conflicts is still something that remains to be done."}, {"start_index": 233943, "end_index": 233984, "text": "You&#39;re not supposed to name it."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 135, "duplicates": [{"start_index": 165422, "end_index": 165908, "text": "Suppose you run svn update and you see this sort of interesting output: $ svn update Updating &#39;.&#39;: U INSTALL G README Conflict discovered in &#39;bar.c&#39;. Select: (p) postpone, (df) diff-full, (e) edit, (mc) mine-conflict, (tc) theirs-conflict, (s) show all options: The U (which stands for Updated ) and G (for merGed ) codes are no cause for concern; those files cleanly absorbed changes from the repository."}, {"start_index": 177465, "end_index": 177823, "text": "Sally updates her working copy before committing and she gets a conflict, which she postpones: $ svn update Updating &#39;.&#39;: Conflict discovered in &#39;sandwich.txt&#39;. Select: (p) postpone, (df) diff-full, (e) edit, (mc) mine-conflict, (tc) theirs-conflict, (s) show all options: p C sandwich.txt Updated to revision 2."}, {"start_index": 1191497, "end_index": 1191933, "text": "Options Examples Here&#39;s an example where, after a postponed conflict resolution during update, svn resolve replaces the all conflicts in file foo.c with your edits: $ svn update Updating &#39;.&#39;: Conflict discovered in &#39;foo.c&#39;. Select: (p) postpone, (df) diff-full, (e) edit, (mc) mine-conflict, (tc) theirs-conflict, (s) show all options: p C foo.c Updated to revision 5."}]}, {"group_id": 136, "duplicates": [{"start_index": 166199, "end_index": 166249, "text": "It&#39;s the next few lines which are interesting."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 137, "duplicates": [{"start_index": 166907, "end_index": 168625, "text": "The most commonly used options are displayed, but you can see all of the options by typing s : Select: (p) postpone, (df) diff-full, (e) edit, (mc) mine-conflict, (tc) theirs-conflict, (s) show all options: s (e) edit - change merged file in an editor (df) diff-full - show all changes made to merged file (r) resolved - accept merged version of file (dc) display-conflict - show all conflicts (ignoring merged version) (mc) mine-conflict - accept my version for all conflicts (same) (tc) theirs-conflict - accept their version for all conflicts (same) (mf) mine-full - accept my version of entire file (even non-conflicts) (tf) theirs-full - accept their version of entire file (same) (p) postpone - mark the conflict to be resolved later (l) launch - launch external tool to resolve conflict (s) show all - show this list Select: (p) postpone, (df) diff-full, (e) edit, (mc) mine-conflict, (tc) theirs-conflict, (s) show all options: Let&#39;s briefly review each of these options before we go into detail on what each option means. (e) edit Open the file in conflict with your favorite editor, as set in the environment variable EDITOR . (df) diff-full Display the differences between the base revision and the conflicted file itself in unified diff format. (r) resolved After editing a file, tell svn that you&#39;ve resolved the conflicts in the file and that it should accept the current contents basically that you&#39;ve resolved the conflict."}, {"start_index": 533973, "end_index": 534211, "text": "Select: (p) postpone, (df) diff-full, (e) edit, (m) merge, (mc) mine-conflict, (tc) theirs-conflict, (s) show all options: p $ svn st M . C Makefile ? Makefile.merge-left.r289 ? Makefile.merge-right.r291 ?"}]}, {"group_id": 138, "duplicates": [{"start_index": 169989, "end_index": 170096, "text": "We&#39;ll cover these commands in more detail now, grouping them together by related functionality."}, {"start_index": 233943, "end_index": 233984, "text": "You&#39;re not supposed to name it."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 431494, "end_index": 431567, "text": "We&#39;ll cover some of those supported operations in this section."}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 139, "duplicates": [{"start_index": 170419, "end_index": 170949, "text": "The first is the diff-full command ( df ), which displays all the local modifications to the file in question plus any conflict regions: Select: (p) postpone, (df) diff-full, (e) edit, (mc) mine-conflict, (tc) theirs-conflict, (s) show all options: df --- .svn/text-base/sandwich.txt.svn-base Tue Dec 11 21:33:57 2007 +++ .svn/tmp/tempfile.32.tmp Tue Dec 11 21:34:33 2007 @@ -1 +1,5 @@ -Just buy a sandwich. +&lt;&lt;&lt;&lt;&lt;&lt;&lt; .mine +Go pick up a cheesesteak."}, {"start_index": 184597, "end_index": 184824, "text": "Select: (p) postpone, (df) diff-full, (e) edit, (mc) mine-conflict, (tc) theirs-conflict, (s) show all options: p C sandwich.txt Updated to revision 2. Summary of conflicts: Text conflicts: 1 $ ls sandwich."}, {"start_index": 1191770, "end_index": 1192113, "text": "Select: (p) postpone, (df) diff-full, (e) edit, (mc) mine-conflict, (tc) theirs-conflict, (s) show all options: p C foo.c Updated to revision 5. Summary of conflicts: Text conflicts: 1 $ svn resolve --accept mine-full foo.c Resolved conflicted state of &#39;foo.c&#39; $ svn subcommands resolved svn resolved Deprecated ."}]}, {"group_id": 140, "duplicates": [{"start_index": 173154, "end_index": 173325, "text": "For this reason, Subversion provides the launch resolution command ( l ) to fire up a fancy graphical merge tool instead (see )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 141, "duplicates": [{"start_index": 174456, "end_index": 174702, "text": "If you&#39;re doing an update and encounter a conflict that you&#39;re not prepared to review or resolve, you can type p to postpone resolving a conflict on a file-by-file basis when you run svn update ."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 142, "duplicates": [{"start_index": 177653, "end_index": 177823, "text": "Select: (p) postpone, (df) diff-full, (e) edit, (mc) mine-conflict, (tc) theirs-conflict, (s) show all options: p C sandwich.txt Updated to revision 2."}, {"start_index": 184597, "end_index": 184767, "text": "Select: (p) postpone, (df) diff-full, (e) edit, (mc) mine-conflict, (tc) theirs-conflict, (s) show all options: p C sandwich.txt Updated to revision 2."}, {"start_index": 266908, "end_index": 267029, "text": "Select: (p) postpone, (df) diff-full, (e) edit, (s) show all options: p C calc/button.c Updated to revision 143."}, {"start_index": 533973, "end_index": 534125, "text": "Select: (p) postpone, (df) diff-full, (e) edit, (m) merge, (mc) mine-conflict, (tc) theirs-conflict, (s) show all options: p $ svn st M ."}, {"start_index": 598061, "end_index": 598344, "text": "Select: (p) postpone, (df) diff-full, (e) edit, (m) merge, (mc) mine-conflict, (tc) theirs-conflict, (s) show all options: As you can see, svn merge has merged the changes required to make libcomplex 1.0.0 look like libcomplex 1.0.1 into our working copy."}, {"start_index": 609282, "end_index": 609641, "text": "Select: (p) postpone, (df) diff-full, (e) edit, (m) merge, (mc) mine-conflict, (tc) theirs-conflict, (s) show all options: As you can see, svn merge has merged the requisite changes into our working copy, flagging a conflict where the vendor modified the same region of one of the files as we did during our customizations."}, {"start_index": 1191770, "end_index": 1191933, "text": "Select: (p) postpone, (df) diff-full, (e) edit, (mc) mine-conflict, (tc) theirs-conflict, (s) show all options: p C foo.c Updated to revision 5."}]}, {"group_id": 143, "duplicates": [{"start_index": 177824, "end_index": 178496, "text": "Summary of conflicts: Text conflicts: 1 $ ls -1 sandwich.txt sandwich.txt.mine sandwich.txt.r1 sandwich.txt.r2 At this point, Subversion will not allow Sally to commit the file sandwich.txt until the three temporary files are removed: $ svn commit -m &quot;Add a few more things&quot; svn: E155015: Commit failed (details follow): svn: E155015: Aborting commit: &#39;/home/sally/svn-work/sandwich.txt&#39; remains in conflict If you&#39;ve postponed a conflict, you need to resolve the conflict before Subversion will allow you to commit your changes. You&#39;ll do this with the svn resolve command."}, {"start_index": 216625, "end_index": 217033, "text": "It cannot be committed until the conflict is resolved: $ svn commit -m &quot;Small fixes&quot; svn: E155015: Commit failed (details follow): svn: E155015: Aborting commit: &#39;/home/svn/project/code/bar.c&#39; remains in confl ict $ To resolve this conflict, you must either agree or disagree with the move that Harry made. If you agree with the move, your bar.c is superfluous."}]}, {"group_id": 144, "duplicates": [{"start_index": 179051, "end_index": 179205, "text": "We&#39;ll take the opportunity in this section, though, to discuss the use of the --accept option for conflict resolution."}, {"start_index": 233943, "end_index": 233984, "text": "You&#39;re not supposed to name it."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 145, "duplicates": [{"start_index": 179546, "end_index": 179670, "text": "If you&#39;d prefer instead to keep the version that contains only your edits, use --accept=mine-full ."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 146, "duplicates": [{"start_index": 179969, "end_index": 180027, "text": "You aren&#39;t limited strictly to all-or-nothing options."}, {"start_index": 233943, "end_index": 233984, "text": "You&#39;re not supposed to name it."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 147, "duplicates": [{"start_index": 181565, "end_index": 182010, "text": "First, let&#39;s take a look at the file: $ cat sandwich.txt Top piece of bread Mayonnaise Lettuce Tomato Provolone &lt;&lt;&lt;&lt;&lt;&lt;&lt; .mine Salami Mortadella Prosciutto ======= Sauerkraut Grilled Chicken &gt;&gt;&gt;&gt;&gt;&gt;&gt; .r2 Creole Mustard Bottom piece of bread The strings of less-than signs, equals signs, and greater-than signs are conflict markers and are not part of the actual data in conflict."}, {"start_index": 182124, "end_index": 182722, "text": "The text between the first two sets of markers is composed of the changes you made in the conflicting area: &lt;&lt;&lt;&lt;&lt;&lt;&lt; .mine Salami Mortadella Prosciutto ======= The text between the second and third sets of conflict markers is the text from Sally&#39;s commit: ======= Sauerkraut Grilled Chicken &gt;&gt;&gt;&gt;&gt;&gt;&gt; .r2 Usually you won&#39;t want to just delete the conflict markers and Sally&#39;s changes she&#39;s going to be awfully surprised when the sandwich arrives and it&#39;s not what she wanted."}, {"start_index": 217035, "end_index": 217111, "text": "You&#39;ll want to delete it and mark the tree conflict as resolved."}, {"start_index": 233943, "end_index": 233984, "text": "You&#39;re not supposed to name it."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 148, "duplicates": [{"start_index": 184163, "end_index": 184596, "text": "Discarding your changes in favor of a newly fetched revision conflicts resolution If you get a conflict and decide that you want to throw out your changes, you can run svn resolve --accept theirs-full CONFLICTED-PATH and Subversion will discard your edits and remove the temporary files: $ svn update Updating &#39;.&#39;: Conflict discovered in &#39;sandwich.txt&#39;."}, {"start_index": 214024, "end_index": 214128, "text": "$ svn update Updating &#39;.&#39;: C code/bar.c A code/baz.c U Makefile Updated to revision 14."}, {"start_index": 223609, "end_index": 223670, "text": "If you aren&#39;t, you&#39;ll want to first read and ."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 423929, "end_index": 424115, "text": "You can avoid future appearances of this warning by setting the value of the &#39;store-plaintext-passwords&#39; option to either &#39;yes&#39; or &#39;no&#39; in &#39;/tmp/servers&#39;."}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 480460, "end_index": 480507, "text": "$ svn up Updating &#39;.&#39;: At revision 361."}, {"start_index": 507173, "end_index": 507194, "text": "Yes, that&#39;s true."}, {"start_index": 514183, "end_index": 514250, "text": "$ svn up Updating &#39;.&#39;: A real.c Updated to revision 402."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 614039, "end_index": 614118, "text": "That&#39;s not to say that there are no technical penalties to branching."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}, {"start_index": 1191497, "end_index": 1191769, "text": "Options Examples Here&#39;s an example where, after a postponed conflict resolution during update, svn resolve replaces the all conflicts in file foo.c with your edits: $ svn update Updating &#39;.&#39;: Conflict discovered in &#39;foo.c&#39;."}, {"start_index": 1192790, "end_index": 1192968, "text": "Options Examples If you get a conflict on an update, your working copy will sprout three new files: $ svn update Updating &#39;.&#39;: C foo.c Updated to revision 31."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1209142, "end_index": 1209187, "text": "Updating &#39;ziptastic&#39;: At revision 43."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 149, "duplicates": [{"start_index": 185813, "end_index": 186088, "text": "If your log message is brief, you may wish to supply it on the command line using the --message ( -m ) option: $ svn commit -m &quot;Corrected number of cheese slices.&quot; Sending sandwich.txt Transmitting file data . Committed revision 3."}, {"start_index": 1125289, "end_index": 1125405, "text": "): $ svn commit -m &quot;added howto section.&quot; Sending a Transmitting file data . Committed revision 3."}]}, {"group_id": 150, "duplicates": [{"start_index": 186090, "end_index": 186424, "text": "However, if you&#39;ve been composing your log message in some other text file as you work, you may want to tell Subversion to get the message from that file by passing its filename as the value of the --file ( -F ) option: $ svn commit -F logmsg Sending sandwich.txt Transmitting file data ."}, {"start_index": 740547, "end_index": 740571, "text": "Transmitting file data ."}, {"start_index": 740630, "end_index": 740654, "text": "Transmitting file data ."}, {"start_index": 740717, "end_index": 740741, "text": "Transmitting file data ."}]}, {"group_id": 151, "duplicates": [{"start_index": 186448, "end_index": 186705, "text": "If you fail to specify either the --message ( -m ) or --file ( -F ) option, Subversion will automatically launch your favorite editor (see the information on editor-cmd in ) for composing a log message."}, {"start_index": 981657, "end_index": 981822, "text": "), and Subversion will try to launch the editor automatically if you don&#39;t specify either of the --message ( -m ) or --file ( -F ) options."}, {"start_index": 1094824, "end_index": 1094985, "text": "--force-log Forces a suspicious parameter passed to the --message ( -m ) or --file ( -F ) option to be accepted as valid."}]}, {"group_id": 152, "duplicates": [{"start_index": 186706, "end_index": 186881, "text": "If you&#39;re in your editor writing a commit message and decide that you want to cancel your commit, you can just quit your editor without saving changes."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 153, "duplicates": [{"start_index": 186883, "end_index": 187348, "text": "If you&#39;ve already saved your commit message, simply delete all the text, save again, and then abort: $ svn commit Waiting for Emacs...Done Log message unchanged or not specified (a)bort, (c)ontinue, (e)dit a $ The repository doesn&#39;t know or care whether your changes make any sense as a whole; it checks only to make sure nobody else has changed any of the same files that you did when you weren&#39;t looking."}, {"start_index": 223609, "end_index": 223670, "text": "If you aren&#39;t, you&#39;ll want to first read and ."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 423929, "end_index": 424115, "text": "You can avoid future appearances of this warning by setting the value of the &#39;store-plaintext-passwords&#39; option to either &#39;yes&#39; or &#39;no&#39; in &#39;/tmp/servers&#39;."}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 507173, "end_index": 507194, "text": "Yes, that&#39;s true."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 614039, "end_index": 614118, "text": "That&#39;s not to say that there are no technical penalties to branching."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 154, "duplicates": [{"start_index": 189636, "end_index": 189982, "text": "svn list Displays the files in a directory for any given revision Examining the Details of Historical Changes We&#39;ve already seen svn diff before it displays file differences in unified diff format; we used it to show the local modifications made to our working copy before committing to the repository."}, {"start_index": 233943, "end_index": 233984, "text": "You&#39;re not supposed to name it."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 155, "duplicates": [{"start_index": 189983, "end_index": 192625, "text": "In fact, it turns out that there are three distinct uses of svn diff : Examining local changes Comparing your working copy to the repository Comparing repository revisions Examining local changes As we&#39;ve seen, invoking svn diff with no options will compare your working files to the cached pristine copies in the .svn area: $ svn diff Index: rules.txt =================================================================== --- rules.txt (revision 3) +++ rules.txt (working copy) @@ -1,4 +1,5 @@ Be kind to others Freedom = Responsibility Everything in moderation -Chew with your mouth open +Chew with your mouth closed +Listen when others are speaking $ Comparing working copy to repository If a single --revision ( -r ) number is passed, your working copy is compared to the specified revision in the repository: $ svn diff -r 3 rules.txt Index: rules.txt =================================================================== --- rules.txt (revision 3) +++ rules.txt (working copy) @@ -1,4 +1,5 @@ Be kind to others Freedom = Responsibility Everything in moderation -Chew with your mouth open +Chew with your mouth closed +Listen when others are speaking $ Comparing repository revisions If two revision numbers, separated by a colon, are passed via --revision ( -r ), the two revisions are directly compared: $ svn diff -r 2:3 rules.txt Index: rules.txt =================================================================== --- rules.txt (revision 2) +++ rules.txt (revision 3) @@ -1,4 +1,4 @@ Be kind to others -Freedom = Chocolate Ice Cream +Freedom = Responsibility Everything in moderation Chew with your mouth open $ A more convenient way of comparing one revision to the previous revision is to use the --change ( -c ) option: $ svn diff -c 3 rules.txt Index: rules.txt =================================================================== --- rules.txt (revision 2) +++ rules.txt (revision 3) @@ -1,4 +1,4 @@ Be kind to others -Freedom = Chocolate Ice Cream +Freedom = Responsibility Everything in moderation Chew with your mouth open $ Lastly, you can compare repository revisions even when you don&#39;t have a working copy on your local machine, just by including the appropriate URL on the command line: $ svn diff -c 5 http://svn.example.com/repos/example/trunk/text/rules.txt $ Generating a List of Historical Changes To find information about the history of a file or directory, use the svn log command."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 475322, "end_index": 475395, "text": "=================================================================== --- ."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 538297, "end_index": 538370, "text": "=================================================================== --- ."}, {"start_index": 539346, "end_index": 539419, "text": "=================================================================== --- ."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 765255, "end_index": 765319, "text": "It&#39;s your data protect it as much as you&#39;d like."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 156, "duplicates": [{"start_index": 193245, "end_index": 196808, "text": "------------------------------------------------------------------------ r1 | sally | 2008-05-10 19:50:31 -0500 (Sat, 10 May 2008) | 1 line Initial import ------------------------------------------------------------------------ Note that the log messages are printed in reverse chronological order by default. If you wish to see a different range of revisions in a particular order or just a single revision, pass the --revision ( -r ) option: Common log requests Command Description svn log -r 5:19 Display logs for revisions 5 through 19 in chronological order svn log -r 19:5 Display logs for revisions 5 through 19 in reverse chronological order svn log -r 8 Display logs for revision 8 only You can also examine the log history of a single file or directory. For example: $ svn log foo.c $ svn log http://foo.com/svn/trunk/code/foo.c These will display log messages only for those revisions in which the named file (or directory) changed. Why Does svn log Not Show Me What I Just Committed? If you make a commit and immediately type svn log with no arguments, you may notice that your most recent commit doesn&#39;t show up in the list of log messages. This is due to a combination of the behavior of svn commit and the default behavior of svn log . First, when you commit changes to the repository, svn bumps only the revision of files (and directories) that it commits, so usually the parent directory remains at the older revision (See for an explanation of why). svn log then defaults to fetching the history of the directory at its current revision, and thus you don&#39;t see the newly committed changes. The solution here is to either update your working copy or explicitly provide a revision number to svn log by using the --revision ( -r ) option. If you want even more information about a file or directory, svn log also takes a --verbose ( -v ) option. Because Subversion allows you to move and copy files and directories, it is important to be able to track path changes in the filesystem. So, in verbose mode, svn log will include a list of changed paths in a revision in its output: $ svn log -r 8 -v ------------------------------------------------------------------------ r8 | sally | 2008-05-21 13:19:25 -0500 (Wed, 21 May 2008) | 1 line Changed paths: M /trunk/code/foo.c M /trunk/code/bar.h A /trunk/code/doc/README Frozzled the sub-space winch. ------------------------------------------------------------------------ svn log also takes a --quiet ( -q ) option, which suppresses the body of the log message. When combined with --verbose ( -v ), it gives just the names of the changed files. Why Does svn log Give Me an Empty Response? After working with Subversion for a bit, most users will come across something like this: $ svn log -r 2 ------------------------------------------------------------------------ $ At first glance, this seems like an error. But recall that while revisions are repository-wide, svn log operates on a path in the repository. If you supply no path, Subversion uses the current working directory as the default target."}, {"start_index": 459800, "end_index": 463044, "text": "------------------------------------------------------------------------ Notice that Subversion is tracing the history of your branch&#39;s integer.c all the way back through time, even traversing the point where it was copied. It shows the creation of the branch as an event in the history, because integer.c was implicitly copied when all of /calc/trunk/ was copied. Now look at what happens when Sally runs the same command on her copy of the file: $ pwd /home/sally/calc $ svn log -v src/integer.c ------------------------------------------------------------------------ r344 | sally | 2013-02-15 16:44:44 -0500 (Fri, 15 Feb 2013) | 1 line Changed paths: M /calc/trunk/src/integer.c Refactor the bazzle functions. ------------------------------------------------------------------------ r154 | sally | 2013-01-30 04:20:03 -0500 (Wed, 30 Jan 2013) | 2 lines Changed paths: M /calc/trunk/src/integer.c * integer.c: changed a docstring. ------------------------------------------------------------------------ ------------------------------------------------------------------------ r113 | sally | 2013-01-26 15:50:21 -0500 (Sat, 26 Jan 2013) | 2 lines Changed paths: M /calc/trunk/src/integer.c * integer.c: Revise the fooplus API. ------------------------------------------------------------------------ r8 | sally | 2013-01-17 16:55:36 -0500 (Thu, 17 Jan 2013) | 1 line Changed paths: A /calc/trunk/Makefile A /calc/trunk/README A /calc/trunk/doc/INSTALL A /calc/trunk/src/button.c A /calc/trunk/src/integer.c A /calc/trunk/src/main.c A /calc/trunk/src/real.c Initial trunk code import for calc project. ------------------------------------------------------------------------ Sally sees her own revision 344 change, but not the change you made in revision 343. As far as Subversion is concerned, these two commits affected different files in different repository locations. However, Subversion does show that the two files share a common history. Before the branch copy was made in revision 341, the files used to be the same file. That&#39;s why you and Sally both see the changes made between revisions 8 and 154. The Key Concepts Behind Branching You should remember two important lessons from this section. First, Subversion has no internal concept of a branch it knows only how to make copies. When you copy a directory, the resultant directory is only a branch because you attach that meaning to it. You may think of the directory differently, or treat it differently, but to Subversion it&#39;s just an ordinary directory that happens to carry some extra historical information. Second, because of this copy mechanism, Subversion&#39;s branches exist as normal filesystem directories in the repository. This is different from other version control systems, where branches are typically defined by adding extra-dimensional labels to collections of files. The location of your branch directory doesn&#39;t matter to Subversion."}]}, {"group_id": 157, "duplicates": [{"start_index": 215836, "end_index": 216623, "text": "------------------------------------------------------------------------ $ svn info shows the URLs of the items involved in the conflict. The left URL shows the source of the local side of the conflict, while the right URL shows the source of the incoming side of the conflict. These URLs indicate where you should start searching the repository&#39;s history for the change which conflicts with your local change. $ svn info code/bar.c Path: code/bar.c Name: bar.c URL: http://svn.example.com/svn/repo/trunk/code/bar.c Tree conflict: local edit, incoming delete upon update Source left: (file) ^/trunk/code/bar.c@4 Source right: (none) ^/trunk/code/bar.c@5 $ bar.c is now said to be the victim of a tree conflict."}, {"start_index": 510978, "end_index": 511482, "text": "------------------------------------------------------------------------ In the example, we&#39;re assuming that you&#39;re looking for a deleted file real.c . By looking through the logs of a parent directory, you&#39;ve spotted that this file was deleted in revision 400. Therefore, the last version of the file to exist was in the revision right before that. Conclusion: you want to resurrect the path /calc/trunk/real.c from revision 399."}, {"start_index": 544304, "end_index": 544687, "text": "------------------------------------------------------------------------ We happen to know that this merge to the branch was nothing but a merge of trunk changes. How can we see those trunk changes as well? The answer is to use the --use-merge-history ( -g ) option. This option expands those child changes that were part of the merge."}]}, {"group_id": 158, "duplicates": [{"start_index": 423371, "end_index": 423927, "text": "In those situations, Subversion will ask whether you want to cache your credentials to disk in plaintext: $ svn checkout https://host.example.com:443/svn/private-repo ----------------------------------------------------------------------- ATTENTION! Your password for authentication realm: &lt;https://host.example.com:443&gt; Subversion Repository can only be stored to disk unencrypted! You are advised to configure your system so that Subversion can store passwords encrypted, if possible. See the documentation for details."}, {"start_index": 542289, "end_index": 544475, "text": "For example, if you were to ask svn log about the history of your feature branch, it would show exactly every revision that ever affected the branch: $ cd my-calc-branch $ svn log -q ------------------------------------------------------------------------ r461 | user | 2013-02-25 05:57:48 -0500 (Mon, 25 Feb 2013) ------------------------------------------------------------------------ r379 | user | 2013-02-18 10:56:35 -0500 (Mon, 18 Feb 2013) ------------------------------------------------------------------------ r378 | user | 2013-02-18 09:48:28 -0500 (Mon, 18 Feb 2013) ------------------------------------------------------------------------ ------------------------------------------------------------------------ r8 | sally | 2013-01-17 16:55:36 -0500 (Thu, 17 Jan 2013) ------------------------------------------------------------------------ r7 | bill | 2013-01-17 16:49:36 -0500 (Thu, 17 Jan 2013) ------------------------------------------------------------------------ r3 | bill | 2013-01-17 09:07:04 -0500 (Thu, 17 Jan 2013) ------------------------------------------------------------------------ But is this really an accurate picture of all the changes that happened on the branch? What&#39;s left out here is the fact that revisions 352, 362, 372 and 379 were actually the results of merging changes from the trunk. If you look at one of these logs in detail, the multiple trunk changesets that comprised the branch change are nowhere to be seen: $ svn log ^/calc/branches/my-calc-branch -r352 -v ------------------------------------------------------------------------ r352 | user | 2013-02-16 09:35:18 -0500 (Sat, 16 Feb 2013) | 1 line Changed paths: M /calc/branches/my-calc-branch M /calc/branches/my-calc-branch/Makefile M /calc/branches/my-calc-branch/doc/INSTALL M /calc/branches/my-calc-branch/src/button.c M /calc/branches/my-calc-branch/src/real.c Sync latest trunk changes to my-calc-branch. ------------------------------------------------------------------------ We happen to know that this merge to the branch was nothing but a merge of trunk changes."}, {"start_index": 1152816, "end_index": 1153478, "text": "------------------------------------------------------------------------ r31 | harry | 2003-01-10 12:25:08 -0600 (Fri, 10 Jan 2003) | 1 line Changed paths: A /bar.c Added new file bar.c ------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines svn log uses just a handful of action codes, and they are similar to the ones the svn update command uses: A The item was added. D The item was deleted. M Properties or textual contents on the item were changed. R The item was replaced by a different one at the same location."}]}, {"group_id": 159, "duplicates": [{"start_index": 424116, "end_index": 424656, "text": "----------------------------------------------------------------------- Store password unencrypted (yes/no)? If you want the convenience of not having to continually reenter your password for future operations, you can answer yes to this prompt. If you&#39;re concerned about caching your Subversion passwords in plaintext and do not want to be asked about it again and again, you can disable caching of plaintext passwords either permanently, or on a server-by-server basis."}, {"start_index": 1156787, "end_index": 1157413, "text": "------------------------------------------------------------------------ Beginning with Subversion 1.7, users can take advantage of a special output mode which combines the information from svn log with what you would see when running svn diff on the same targets for each revision of the log. Simply invoke svn log with the --diff option to trigger this output mode. $ svn log -r 20 touched.txt --diff ------------------------------------------------------------------------ r20 | sally | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line Made a change."}]}, {"group_id": 160, "duplicates": [{"start_index": 472655, "end_index": 474208, "text": "You can find the latter with the svn log command with the -r set to HEAD : $ svn log -q -rHEAD http://svn.example.com/repos/calc/trunk ------------------------------------------------------------------------ r351 | sally | 2013-02-16 08:04:22 -0500 (Sat, 16 Feb 2013) ------------------------------------------------------------------------ $ svn merge http://svn.example.com/repos/calc/trunk -r340:351 U doc/INSTALL U src/real.c U src/button.c U Makefile After any conflicts have been resolved, you can commit the merged changes to your branch. Now, to avoid accidentally trying to merge these same changes into your branch again in the future, you&#39;ll need to record the fact that you&#39;ve already merged them. But where should that record be kept? One of the simplest places to record this information is in the log message for the commit of the merge: $ svn ci -m &quot;Sync the my-calc-branch with ^/calc/trunk through r351.&quot; The next time you sync /calc/branches/my-calc-branch with /calc/trunk you repeat this process, except that the starting revision is the youngest revision that&#39;s already been merged in from the trunk. If you&#39;ve been keeping good records of your merges in the commit log messages, you should be able to determine what that youngest revision was by reading the revision logs associated with your branch."}, {"start_index": 474210, "end_index": 475312, "text": "Once you know your starting revision, you can perform another sync merge: $ svn log -q -rHEAD http://svn.example.com/repos/calc/trunk ------------------------------------------------------------------------ r959 | sally | 2013-03-5 7:30:21 -0500 (Tue, 05 Mar 2013) ------------------------------------------------------------------------ $ svn merge http://svn.example.com/repos/calc/trunk -r351:959 After running the prior example, your branch working copy now contains new local modifications, and these edits are duplications of all of the changes that have happened on the trunk since you first created your branch: $ svn status M . M Makefile M doc/INSTALL M src/button.c M src/real.c At this point, the wise thing to do is look at the changes carefully with svn diff , and then build and test your branch. Notice that the current working directory ( . ) has also been modified; svn diff shows that its svn:mergeinfo property has been created. $ svn diff --depth empty ."}]}, {"group_id": 161, "duplicates": [{"start_index": 198057, "end_index": 198131, "text": "In fact, you don&#39;t even need a working copy to use either one."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 162, "duplicates": [{"start_index": 199831, "end_index": 199991, "text": "You can use the BASE revision keyword (see ) to instead see the unmodified form of the file as it resides in your working copy."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 163, "duplicates": [{"start_index": 199993, "end_index": 200370, "text": "$ svn annotate rules.txt@BASE 1 harry Be kind to others 3 sally Freedom = Responsibility 1 harry Everything in moderation 1 harry Chew with your mouth open The --verbose (-v) option causes svn annotate to also include on each line the datestamp associated with that line&#39;s reported revision number."}, {"start_index": 260492, "end_index": 260544, "text": "Simply supply the --verbose ( -v ) option."}, {"start_index": 1247505, "end_index": 1247534, "text": "--verbose ( -v ) Be verbose."}]}, {"group_id": 164, "duplicates": [{"start_index": 202387, "end_index": 202520, "text": "That&#39;s okay the Subversion developers anticipated as much, so those particular command aliases work, too!"}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 165, "duplicates": [{"start_index": 202521, "end_index": 202821, "text": "Finally, as with many of Subversion&#39;s informational commands, you can also reference files in your svn annotate command invocations by their repository URLs, allowing access to this information even when you don&#39;t have ready access to a working copy."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 765255, "end_index": 765319, "text": "It&#39;s your data protect it as much as you&#39;d like."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 166, "duplicates": [{"start_index": 202822, "end_index": 203723, "text": "Listing versioned directories The svn list command shows you what files are in a repository directory without actually downloading the files to your local machine: $ svn list http://svn.example.com/repo/project README branches/ tags/ trunk/ If you want a more detailed listing, pass the --verbose ( -v ) flag to get output like this: $ svn list -v http://svn.example.com/repo/project 23351 sally Feb 05 13:26 ./ 20620 harry 1084 Jul 13 2006 README 23339 harry Feb 04 01:40 branches/ 23198 harry Jan 23 17:17 tags/ 23351 sally Feb 05 13:26 trunk/ The columns tell you the revision at which the file or directory was last modified, the user who modified it, the size if it is a file, the date it was last modified, and the item&#39;s name."}, {"start_index": 1247505, "end_index": 1247534, "text": "--verbose ( -v ) Be verbose."}]}, {"group_id": 167, "duplicates": [{"start_index": 203724, "end_index": 203919, "text": "The svn list command with no arguments defaults to the repository URL of the current working directory, not the local working copy directory."}, {"start_index": 1146116, "end_index": 1146199, "text": ", meaning the repository URL of the current working copy directory."}]}, {"group_id": 168, "duplicates": [{"start_index": 204427, "end_index": 204765, "text": "$ svn update -r 1729 Updating &#39;.&#39;: $ Many Subversion newcomers attempt to use the preceding svn update example to undo committed changes, but this won&#39;t work as you can&#39;t commit changes that you obtain from backdating a working copy if the changed files have newer revisions."}, {"start_index": 223609, "end_index": 223670, "text": "If you aren&#39;t, you&#39;ll want to first read and ."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 267625, "end_index": 267831, "text": "calc/button.c.prej $ cat calc/button.c.prej Trying to change property &#39;linecount&#39; from &#39;1267&#39; to &#39;1301&#39;, but property has been locally changed from &#39;1267&#39; to &#39;1256&#39;."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 423929, "end_index": 424115, "text": "You can avoid future appearances of this warning by setting the value of the &#39;store-plaintext-passwords&#39; option to either &#39;yes&#39; or &#39;no&#39; in &#39;/tmp/servers&#39;."}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 480460, "end_index": 480507, "text": "$ svn up Updating &#39;.&#39;: At revision 361."}, {"start_index": 507173, "end_index": 507194, "text": "Yes, that&#39;s true."}, {"start_index": 514183, "end_index": 514250, "text": "$ svn up Updating &#39;.&#39;: A real.c Updated to revision 402."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 614039, "end_index": 614118, "text": "That&#39;s not to say that there are no technical penalties to branching."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1209142, "end_index": 1209187, "text": "Updating &#39;ziptastic&#39;: At revision 43."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 169, "duplicates": [{"start_index": 204828, "end_index": 204985, "text": "If you&#39;d prefer to create a whole new working copy from an older snapshot, you can do so by modifying the typical svn checkout command."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 170, "duplicates": [{"start_index": 205278, "end_index": 205400, "text": "$ svn checkout http://svn.example.com/svn/repo/trunk@1729 trunk-1729 # Checkout the current trunk as it looked in r1729."}, {"start_index": 205985, "end_index": 206103, "text": "$ svn export http://svn.example.com/svn/repo/trunk@1729 trunk-1729 # Export the current trunk as it looked in r1729."}, {"start_index": 391764, "end_index": 391812, "text": "$ svn checkout http://svn.example.com/projects ."}]}, {"group_id": 171, "duplicates": [{"start_index": 205401, "end_index": 205748, "text": "$ svn checkout http://svn.example.com/svn/repo/trunk -r 1729 trunk-1729 $ Lastly, if you&#39;re building a release and wish to bundle up your versioned files and directories, you can use svn export to create a local copy of all or part of your repository without any .svn administrative directories included."}, {"start_index": 391764, "end_index": 391812, "text": "$ svn checkout http://svn.example.com/projects ."}, {"start_index": 450295, "end_index": 450331, "text": "First, it&#39;s not very safe."}, {"start_index": 450436, "end_index": 450477, "text": "Second, it&#39;s not very flexible."}]}, {"group_id": 172, "duplicates": [{"start_index": 206105, "end_index": 206397, "text": "$ svn export http://svn.example.com/svn/repo/trunk -r 1729 trunk-1729 $ Sometimes You Just Need to Clean Up Now that we&#39;ve covered the day-to-day tasks that you&#39;ll frequently use Subversion for, we&#39;ll review a few administrative tasks relating to your working copy."}, {"start_index": 1021068, "end_index": 1021128, "text": "After all, Subversion uses Subversion&#39;s APIs, too."}]}, {"group_id": 173, "duplicates": [{"start_index": 206724, "end_index": 206989, "text": "If you&#39;re likely to use a working copy again, there&#39;s nothing wrong with just leaving it on disk until you&#39;re ready to use it again, at which point all it takes is an svn update to bring it up to date and ready for use."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 765255, "end_index": 765319, "text": "It&#39;s your data protect it as much as you&#39;d like."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 174, "duplicates": [{"start_index": 208772, "end_index": 209303, "text": "The svn status command will inform you about administrative locks in the working copy, too, by displaying an L next to those locked paths: $ svn status L somedir M somedir/foo.c $ svn cleanup $ svn status M somedir/foo.c Don&#39;t confuse these working copy administrative locks with the user-managed locks that Subversion users create when using the lock-modify-unlock model of concurrent version control; see the sidebar for clarification."}, {"start_index": 1115491, "end_index": 1115519, "text": "Don&#39;t bother reading it."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 175, "duplicates": [{"start_index": 219300, "end_index": 220414, "text": "$ svn delete --force code/bar.c D code/bar.c $ svn resolve --accept=working code/bar.c Resolved conflicted state of &#39;code/bar.c&#39; $ svn status M code/foo.c M code/baz.c $ svn diff Index: code/foo.c =================================================================== --- code/foo.c (revision 14) +++ code/foo.c (working copy) @@ -3,5 +3,5 @@ int main(int argc, char *argv[]) { printf(&quot;I don&#39;t like being moved around!\\n%s&quot;, bar()); - return 0; + return 1; } Index: code/baz.c =================================================================== --- code/baz.c (revision 14) +++ code/baz.c (working copy) @@ -1,4 +1,4 @@ const char *bar(void) { - return &quot;Me neither!\\n&quot;; + return &quot;Well, I do like being moved around!\\n&quot;; } $ But what if you do not agree with the move? Well, in that case, you can delete baz.c instead, after making sure any changes made to it after it was renamed are either preserved or not worth keeping. (Do not forget to also revert the changes Harry made to Makefile .)"}, {"start_index": 220423, "end_index": 222141, "text": "Since bar.c is already scheduled for re-addition, there is nothing else left to do, and the conflict can be marked resolved: $ svn delete --force code/baz.c D code/baz.c $ svn resolve --accept=working code/bar.c Resolved conflicted state of &#39;code/bar.c&#39; $ svn status M code/foo.c A + code/bar.c D code/baz.c M Makefile $ svn diff Index: code/foo.c =================================================================== --- code/foo.c (revision 14) +++ code/foo.c (working copy) @@ -3,5 +3,5 @@ int main(int argc, char *argv[]) { printf(&quot;I don&#39;t like being moved around!\\n%s&quot;, bar()); - return 0; + return 1; } Index: code/bar.c =================================================================== --- code/bar.c (revision 14) +++ code/bar.c (working copy) @@ -1,4 +1,4 @@ const char *bar(void) { - return &quot;Me neither!\\n&quot;; + return &quot;Well, I do like being moved around!\\n&quot;; } Index: code/baz.c =================================================================== --- code/baz.c (revision 14) +++ code/baz.c (working copy) @@ -1,4 +0,0 @@ -const char *bar(void) -{ - return &quot;Me neither!\\n&quot;; -} Index: Makefile =================================================================== --- Makefile (revision 14) +++ Makefile (working copy) @@ -1,2 +1,2 @@ foo: - $(CC) -o $@ code/foo.c code/baz.c + $(CC) -o $@ code/foo.c code/bar.c You&#39;ve now resolved your first tree conflict! You can commit your changes and tell Harry during tea break about all the extra work he caused for you. Summary Now we&#39;ve covered most of the Subversion client commands."}]}, {"group_id": 176, "duplicates": [{"start_index": 214129, "end_index": 214281, "text": "Summary of conflicts: Tree conflicts: 1 $ In its output, svn update signifies tree conflicts using a capital C in the fourth output column."}, {"start_index": 553507, "end_index": 553568, "text": "Summary of conflicts: Tree conflicts: 1 $ svn st M ."}]}, {"group_id": 177, "duplicates": [{"start_index": 214291, "end_index": 214661, "text": "svn status reveals additional details of the conflict: $ svn status M code/foo.c A + C code/bar.c &gt; local edit, incoming delete upon update Summary of conflicts: Tree conflicts: 1 $ Note how bar.c is automatically scheduled for re-addition in your working copy, which simplifies things in case you want to keep the file."}, {"start_index": 553507, "end_index": 553568, "text": "Summary of conflicts: Tree conflicts: 1 $ svn st M ."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 178, "duplicates": [{"start_index": 510304, "end_index": 510977, "text": "------------------------------------------------------------------------ r400 | bill | 2013-02-19 20:55:08 -0500 (Tue, 19 Feb 2013) | 4 lines Changed paths: M /calc/trunk/src/main.c D /calc/trunk/src/real.c * calc/trunk/src/main.c: Update help text. * calc/trunk/src/real.c: Remove this file, none of the APIs implemented here are used anymore. ------------------------------------------------------------------------ r399 | sally | 2013-02-19 20:05:14 -0500 (Tue, 19 Feb 2013) | 1 line Changed paths: M /calc/trunk/src/button.c M /calc/trunk/src/integer.c M /calc/trunk/src/main.c M /calc/trunk/src/real.c Undoing erroneous change committed in r392."}, {"start_index": 538057, "end_index": 538393, "text": "------------------------------------------------------------------------ Because revision 465 was a reintegrate merge we know that mergeinfo was recorded describing the merge: $ svn diff ^/paint/trunk --depth empty -c465 Index: . =================================================================== --- . (revision 464) +++ ."}]}, {"group_id": 179, "duplicates": [{"start_index": 515946, "end_index": 516310, "text": "------------------------------------------------------------------------ At the water cooler, you get word that Sally made an interesting change to main.c on the trunk. Looking over the history of commits to the trunk, you see that in revision 413 she fixed a critical bug that directly impacts the feature you&#39;re working on."}, {"start_index": 545969, "end_index": 546302, "text": "------------------------------------------------------------------------ By making the log operation use merge history, we see not just the revision we queried (r352), but also the other revisions that came along on the ride with it Sally&#39;s work on trunk. This is a much more complete picture of history!"}, {"start_index": 553035, "end_index": 553261, "text": "------------------------------------------------------------------------ Now you decide to merge your branch back to the trunk. How will Subversion combine the rename and edits you made with Sally&#39;s edits?"}, {"start_index": 1160092, "end_index": 1160372, "text": "------------------------------------------------------------------------ $ --search and --search-and options does not actually perform a search. They just filter the svn log output to display only log messages that match the specified pattern."}]}, {"group_id": 180, "duplicates": [{"start_index": 217379, "end_index": 217451, "text": "Let&#39;s assume that your changes do need to follow the move ."}, {"start_index": 233943, "end_index": 233984, "text": "You&#39;re not supposed to name it."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 181, "duplicates": [{"start_index": 217981, "end_index": 218043, "text": "We&#39;ll first use svn diff to create a patch file."}, {"start_index": 233943, "end_index": 233984, "text": "You&#39;re not supposed to name it."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 182, "duplicates": [{"start_index": 218229, "end_index": 219298, "text": "$ svn diff code/bar.c &gt; PATCHFILE $ cat PATCHFILE Index: code/bar.c =================================================================== --- code/bar.c (working copy) +++ code/bar.c (working copy) @@ -1,4 +1,4 @@ const char *bar(void) { - return &quot;Me neither!\\n&quot;; + return &quot;Well, I do like being moved around!\\n&quot;; } $ ### Edit PATCHFILE to refer to code/baz.c instead of code/bar.c $ cat PATCHFILE Index: code/baz.c =================================================================== --- code/baz.c (working copy) +++ code/baz.c (working copy) @@ -1,4 +1,4 @@ const char *bar(void) { - return &quot;Me neither!\\n&quot;; + return &quot;Well, I do like being moved around!\\n&quot;; } $ svn patch PATCHFILE U code/baz.c $ Now that the changes you originally made to bar.c have been successfully reproduced in baz.c , you can delete bar.c and resolve the conflict, instructing the resolution logic to accept what is currently in the working copy as the desired result."}, {"start_index": 475322, "end_index": 475395, "text": "=================================================================== --- ."}, {"start_index": 538297, "end_index": 538370, "text": "=================================================================== --- ."}, {"start_index": 539346, "end_index": 539419, "text": "=================================================================== --- ."}]}, {"group_id": 183, "duplicates": [{"start_index": 222150, "end_index": 222261, "text": "Notable exceptions are those dealing with branching and merging (see ) and properties (see )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 184, "duplicates": [{"start_index": 222468, "end_index": 222707, "text": "Advanced Topics If you&#39;ve been reading this book chapter by chapter, from start to finish, you should by now have acquired enough knowledge to use the Subversion client to perform the most common version control operations."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 185, "duplicates": [{"start_index": 222914, "end_index": 223035, "text": "You&#39;ve probably even developed a reflex that causes you to run the svn status command almost unconsciously."}, {"start_index": 233943, "end_index": 233984, "text": "You&#39;re not supposed to name it."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 186, "duplicates": [{"start_index": 223129, "end_index": 223219, "text": "But the Subversion feature set doesn&#39;t stop at common version control operations."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 187, "duplicates": [{"start_index": 229180, "end_index": 229587, "text": "When you specify a date, Subversion resolves that date to the most recent revision of the repository as of that date, and then continues to operate against that resolved revision number: $ svn log -r {2006-11-28} ------------------------------------------------------------------------ r12 | ira | 2006-11-27 12:31:51 -0600 (Mon, 27 Nov 2006) | 6 lines Is Subversion a Day Early?"}, {"start_index": 423371, "end_index": 423641, "text": "In those situations, Subversion will ask whether you want to cache your credentials to disk in plaintext: $ svn checkout https://host.example.com:443/svn/private-repo ----------------------------------------------------------------------- ATTENTION!"}, {"start_index": 424116, "end_index": 424224, "text": "----------------------------------------------------------------------- Store password unencrypted (yes/no)?"}, {"start_index": 458620, "end_index": 458876, "text": "------------------------------------------------------------------------ r341 | user | 2013-02-15 07:41:25 -0500 (Fri, 15 Feb 2013) | 1 line Changed paths: A /calc/branches/my-calc-branch (from /calc/trunk:340) Creating a private branch of /calc/trunk."}, {"start_index": 458877, "end_index": 459101, "text": "------------------------------------------------------------------------ r154 | sally | 2013-01-30 04:20:03 -0500 (Wed, 30 Jan 2013) | 2 lines Changed paths: M /calc/trunk/src/integer.c * integer.c: changed a docstring."}, {"start_index": 459102, "end_index": 459403, "text": "------------------------------------------------------------------------ ------------------------------------------------------------------------ r113 | sally | 2013-01-26 15:50:21 -0500 (Sat, 26 Jan 2013) | 2 lines Changed paths: M /calc/trunk/src/integer.c * integer.c: Revise the fooplus API."}, {"start_index": 459404, "end_index": 459799, "text": "------------------------------------------------------------------------ r8 | sally | 2013-01-17 16:55:36 -0500 (Thu, 17 Jan 2013) | 1 line Changed paths: A /calc/trunk/Makefile A /calc/trunk/README A /calc/trunk/doc/INSTALL A /calc/trunk/src/button.c A /calc/trunk/src/integer.c A /calc/trunk/src/main.c A /calc/trunk/src/real.c Initial trunk code import for calc project."}, {"start_index": 459800, "end_index": 460046, "text": "------------------------------------------------------------------------ Notice that Subversion is tracing the history of your branch&#39;s integer.c all the way back through time, even traversing the point where it was copied."}, {"start_index": 460225, "end_index": 460587, "text": "Now look at what happens when Sally runs the same command on her copy of the file: $ pwd /home/sally/calc $ svn log -v src/integer.c ------------------------------------------------------------------------ r344 | sally | 2013-02-15 16:44:44 -0500 (Fri, 15 Feb 2013) | 1 line Changed paths: M /calc/trunk/src/integer.c Refactor the bazzle functions."}, {"start_index": 460588, "end_index": 460812, "text": "------------------------------------------------------------------------ r154 | sally | 2013-01-30 04:20:03 -0500 (Wed, 30 Jan 2013) | 2 lines Changed paths: M /calc/trunk/src/integer.c * integer.c: changed a docstring."}, {"start_index": 460813, "end_index": 461114, "text": "------------------------------------------------------------------------ ------------------------------------------------------------------------ r113 | sally | 2013-01-26 15:50:21 -0500 (Sat, 26 Jan 2013) | 2 lines Changed paths: M /calc/trunk/src/integer.c * integer.c: Revise the fooplus API."}, {"start_index": 461115, "end_index": 461510, "text": "------------------------------------------------------------------------ r8 | sally | 2013-01-17 16:55:36 -0500 (Thu, 17 Jan 2013) | 1 line Changed paths: A /calc/trunk/Makefile A /calc/trunk/README A /calc/trunk/doc/INSTALL A /calc/trunk/src/button.c A /calc/trunk/src/integer.c A /calc/trunk/src/main.c A /calc/trunk/src/real.c Initial trunk code import for calc project."}, {"start_index": 461511, "end_index": 461677, "text": "------------------------------------------------------------------------ Sally sees her own revision 344 change, but not the change you made in revision 343."}, {"start_index": 471864, "end_index": 472291, "text": "Using the ongoing example, you know that you branched /calc/trunk to /calc/branches/my-calc-branch in revision 341: $ svn log -v -r341 ------------------------------------------------------------------------ r341 | user | 2013-02-15 07:41:25 -0500 (Fri, 15 Feb 2013) | 1 line Changed paths: A /calc/branches/my-calc-branch (from /calc/trunk:340) Creating a private branch of /calc/trunk."}, {"start_index": 472292, "end_index": 472653, "text": "------------------------------------------------------------------------ When you are ready to synchronize your branch with the ongoing changes from trunk, you specify the starting revision as the revision of /calc/trunk which the branch was copied from and the ending revision as the youngest change on /calc/trunk ."}, {"start_index": 472655, "end_index": 473250, "text": "You can find the latter with the svn log command with the -r set to HEAD : $ svn log -q -rHEAD http://svn.example.com/repos/calc/trunk ------------------------------------------------------------------------ r351 | sally | 2013-02-16 08:04:22 -0500 (Sat, 16 Feb 2013) ------------------------------------------------------------------------ $ svn merge http://svn.example.com/repos/calc/trunk -r340:351 U doc/INSTALL U src/real.c U src/button.c U Makefile After any conflicts have been resolved, you can commit the merged changes to your branch."}, {"start_index": 474210, "end_index": 474892, "text": "Once you know your starting revision, you can perform another sync merge: $ svn log -q -rHEAD http://svn.example.com/repos/calc/trunk ------------------------------------------------------------------------ r959 | sally | 2013-03-5 7:30:21 -0500 (Tue, 05 Mar 2013) ------------------------------------------------------------------------ $ svn merge http://svn.example.com/repos/calc/trunk -r351:959 After running the prior example, your branch working copy now contains new local modifications, and these edits are duplications of all of the changes that have happened on the trunk since you first created your branch: $ svn status M ."}, {"start_index": 510035, "end_index": 510303, "text": "$ cd calc/trunk $ svn log -v --limit 3 ------------------------------------------------------------------------ r401 | sally | 2013-02-19 23:15:44 -0500 (Tue, 19 Feb 2013) | 1 line Changed paths: M /calc/trunk/src/main.c Follow-up to r400: Fix typos in help text."}, {"start_index": 510304, "end_index": 510560, "text": "------------------------------------------------------------------------ r400 | bill | 2013-02-19 20:55:08 -0500 (Tue, 19 Feb 2013) | 4 lines Changed paths: M /calc/trunk/src/main.c D /calc/trunk/src/real.c * calc/trunk/src/main.c: Update help text."}, {"start_index": 510659, "end_index": 510977, "text": "------------------------------------------------------------------------ r399 | sally | 2013-02-19 20:05:14 -0500 (Tue, 19 Feb 2013) | 1 line Changed paths: M /calc/trunk/src/button.c M /calc/trunk/src/integer.c M /calc/trunk/src/main.c M /calc/trunk/src/real.c Undoing erroneous change committed in r392."}, {"start_index": 510978, "end_index": 511147, "text": "------------------------------------------------------------------------ In the example, we&#39;re assuming that you&#39;re looking for a deleted file real.c ."}, {"start_index": 515450, "end_index": 515945, "text": "For example, let&#39;s assume you&#39;ve created a new feature branch /calc/branches/my-calc-feature-branch copied from /calc/trunk : $ svn log ^/calc/branches/new-calc-feature-branch -v -r403 ------------------------------------------------------------------------ r403 | user | 2013-02-20 03:26:12 -0500 (Wed, 20 Feb 2013) | 1 line Changed paths: A /calc/branches/new-calc-feature-branch (from /calc/trunk:402) Create a new calc branch for Feature &#39;X&#39;."}, {"start_index": 515946, "end_index": 516125, "text": "------------------------------------------------------------------------ At the water cooler, you get word that Sally made an interesting change to main.c on the trunk."}, {"start_index": 516495, "end_index": 516833, "text": "$ svn log ^/calc/trunk -r413 -v ------------------------------------------------------------------------ r413 | sally | 2013-02-21 01:57:51 -0500 (Thu, 21 Feb 2013) | 3 lines Changed paths: M /calc/trunk/src/main.c Fix issue #22 &#39;Passing a null value in the foo argument of bar() should be a tolerated, but causes a segfault&#39;."}, {"start_index": 537592, "end_index": 538056, "text": "We know the work on this feature was done on its own branch, which was reintegrated to /paint/trunk in revision 465: $ svn log -v -r465 ^/paint/trunk ------------------------------------------------------------------------ r465 | joe | 2013-02-25 14:05:12 -0500 (Mon, 25 Feb 2013) | 1 line Changed paths: M /paint/trunk A /paint/trunk/python (from /paint/branches/paint-python-wrapper/python:464) Reintegrate Paint Python wrapper."}, {"start_index": 538057, "end_index": 538296, "text": "------------------------------------------------------------------------ Because revision 465 was a reintegrate merge we know that mergeinfo was recorded describing the merge: $ svn diff ^/paint/trunk --depth empty -c465 Index: ."}, {"start_index": 542289, "end_index": 543530, "text": "For example, if you were to ask svn log about the history of your feature branch, it would show exactly every revision that ever affected the branch: $ cd my-calc-branch $ svn log -q ------------------------------------------------------------------------ r461 | user | 2013-02-25 05:57:48 -0500 (Mon, 25 Feb 2013) ------------------------------------------------------------------------ r379 | user | 2013-02-18 10:56:35 -0500 (Mon, 18 Feb 2013) ------------------------------------------------------------------------ r378 | user | 2013-02-18 09:48:28 -0500 (Mon, 18 Feb 2013) ------------------------------------------------------------------------ ------------------------------------------------------------------------ r8 | sally | 2013-01-17 16:55:36 -0500 (Thu, 17 Jan 2013) ------------------------------------------------------------------------ r7 | bill | 2013-01-17 16:49:36 -0500 (Thu, 17 Jan 2013) ------------------------------------------------------------------------ r3 | bill | 2013-01-17 09:07:04 -0500 (Thu, 17 Jan 2013) ------------------------------------------------------------------------ But is this really an accurate picture of all the changes that happened on the branch?"}, {"start_index": 543684, "end_index": 544303, "text": "If you look at one of these logs in detail, the multiple trunk changesets that comprised the branch change are nowhere to be seen: $ svn log ^/calc/branches/my-calc-branch -r352 -v ------------------------------------------------------------------------ r352 | user | 2013-02-16 09:35:18 -0500 (Sat, 16 Feb 2013) | 1 line Changed paths: M /calc/branches/my-calc-branch M /calc/branches/my-calc-branch/Makefile M /calc/branches/my-calc-branch/doc/INSTALL M /calc/branches/my-calc-branch/src/button.c M /calc/branches/my-calc-branch/src/real.c Sync latest trunk changes to my-calc-branch."}, {"start_index": 544304, "end_index": 544475, "text": "------------------------------------------------------------------------ We happen to know that this merge to the branch was nothing but a merge of trunk changes."}, {"start_index": 544689, "end_index": 545163, "text": "$ svn log ^/calc/branches/my-calc-branch -r352 -v -g ------------------------------------------------------------------------ r352 | user | 2013-02-16 09:35:18 -0500 (Sat, 16 Feb 2013) | 1 line Changed paths: M /calc/branches/my-calc-branch M /calc/branches/my-calc-branch/Makefile M /calc/branches/my-calc-branch/doc/INSTALL M /calc/branches/my-calc-branch/src/button.c M /calc/branches/my-calc-branch/src/real.c Sync latest trunk changes to my-calc-branch."}, {"start_index": 545164, "end_index": 545395, "text": "------------------------------------------------------------------------ r351 | sally | 2013-02-16 08:04:22 -0500 (Sat, 16 Feb 2013) | 2 lines Changed paths: M /calc/trunk/src/real.c Merged via: r352 Trunk work on calc project."}, {"start_index": 545396, "end_index": 545731, "text": "------------------------------------------------------------------------ ------------------------------------------------------------------------ r345 | sally | 2013-02-15 16:51:17 -0500 (Fri, 15 Feb 2013) | 2 lines Changed paths: M /calc/trunk/Makefile M /calc/trunk/src/integer.c Merged via: r352 Trunk work on calc project."}, {"start_index": 545732, "end_index": 545968, "text": "------------------------------------------------------------------------ r344 | sally | 2013-02-15 16:44:44 -0500 (Fri, 15 Feb 2013) | 1 line Changed paths: M /calc/trunk/src/integer.c Merged via: r352 Refactor the bazzle functions."}, {"start_index": 545969, "end_index": 546245, "text": "------------------------------------------------------------------------ By making the log operation use merge history, we see not just the revision we queried (r352), but also the other revisions that came along on the ride with it Sally&#39;s work on trunk."}, {"start_index": 552664, "end_index": 553034, "text": "Meanwhile, back on /calc/trunk , Sally has committed some improvements of her own to integer.c in r472: $ svn log -v -r472 ^/calc/trunk ------------------------------------------------------------------------ r472 | sally | 2013-02-26 07:05:18 -0500 (Tue, 26 Feb 2013) | 1 line Changed paths: M /calc/trunk/src/integer.c Trunk work on integer.c."}, {"start_index": 553035, "end_index": 553163, "text": "------------------------------------------------------------------------ Now you decide to merge your branch back to the trunk."}, {"start_index": 594612, "end_index": 594650, "text": "So let&#39;s create our vendor branch."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 754228, "end_index": 754296, "text": "So let&#39;s look now at the user end of these operations."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1112807, "end_index": 1113070, "text": "$ svn log -c 5 http://svn.red-bean.com/repos/test/readme.txt ------------------------------------------------------------------------ r5 | harry | 2008-05-29 07:26:12 -0600 (Thu, 29 May 2008) | 1 line Commit the results of &#39;double-space-after-period.sh&#39;."}, {"start_index": 1113072, "end_index": 1113499, "text": "------------------------------------------------------------------------ $ svn diff -c 5 http://svn.red-bean.com/repos/test/readme.txt Index: http://svn.red-bean.com/repos/test/readme.txt =================================================================== --- http://svn.red-bean.com/repos/test/readme.txt (revision 4) +++ http://svn.red-bean.com/repos/test/readme.txt (revision 5) @@ -1,5 +1,5 @@ This is a README file."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}, {"start_index": 1150359, "end_index": 1150667, "text": "Options Examples You can see the log messages for all the paths that changed in your working copy by running svn log from the top: $ svn log ------------------------------------------------------------------------ r20 | harry | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line Tweak."}, {"start_index": 1150668, "end_index": 1151063, "text": "------------------------------------------------------------------------ r17 | sally | 2003-01-16 23:21:19 -0600 (Thu, 16 Jan 2003) | 2 lines Examine all log messages for a particular file in your working copy: $ svn log foo.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Added defines."}, {"start_index": 1151064, "end_index": 1151488, "text": "------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines If you don&#39;t have a working copy handy, you can log a URL: $ svn log http://svn.red-bean.com/repos/test/foo.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Added defines."}, {"start_index": 1151489, "end_index": 1151965, "text": "------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines If you want several distinct paths underneath the same URL, you can use the URL [PATH...] syntax: $ svn log http://svn.red-bean.com/repos/test/ foo.c bar.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Added defines."}, {"start_index": 1151966, "end_index": 1152429, "text": "------------------------------------------------------------------------ r31 | harry | 2003-01-10 12:25:08 -0600 (Fri, 10 Jan 2003) | 1 line Added new file bar.c ------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines The --verbose ( -v ) option causes svn log to include information about the paths that were changed in each displayed revision."}, {"start_index": 1152571, "end_index": 1152815, "text": "$ svn log -v http://svn.red-bean.com/repos/test/ foo.c bar.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Changed paths: M /foo.c Added defines."}, {"start_index": 1152816, "end_index": 1153306, "text": "------------------------------------------------------------------------ r31 | harry | 2003-01-10 12:25:08 -0600 (Fri, 10 Jan 2003) | 1 line Changed paths: A /bar.c Added new file bar.c ------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines svn log uses just a handful of action codes, and they are similar to the ones the svn update command uses: A The item was added."}, {"start_index": 1154131, "end_index": 1156386, "text": "If you ran svn log on a range of two revisions, you would get this: $ svn log -r 14:15 ------------------------------------------------------------------------ r14 | ------------------------------------------------------------------------ r15 | ------------------------------------------------------------------------ However, if you wanted to gather two nonsequential log messages into a file, you might do something like this: $ svn log -r 14 &gt; mylog $ svn log -r 19 &gt;&gt; mylog $ svn log -r 27 &gt;&gt; mylog $ cat mylog ------------------------------------------------------------------------ r14 | ------------------------------------------------------------------------ ------------------------------------------------------------------------ r19 | ------------------------------------------------------------------------ ------------------------------------------------------------------------ r27 | ------------------------------------------------------------------------ You can avoid the clutter of the double dashed lines in your output by using the --incremental option: $ svn log --incremental -r 14 &gt; mylog $ svn log --incremental -r 19 &gt;&gt; mylog $ svn log --incremental -r 27 &gt;&gt; mylog $ cat mylog ------------------------------------------------------------------------ r14 | ------------------------------------------------------------------------ r19 | ------------------------------------------------------------------------ r27 | The --incremental option provides similar output control when using the --xml option: $ svn log --xml --incremental -r 1 sandwich.txt &lt;logentry revision=&quot;1&quot;&gt; &lt;author&gt;harry&lt;/author&gt; &lt;date&gt;2008-06-03T06:35:53.048870Z&lt;/date&gt; &lt;msg&gt;Initial Import.&lt;/msg&gt; &lt;/logentry&gt; Sometimes when you run svn log on a specific path and a specific revision, you see no log information output at all, as in the following: $ svn log -r 20 http://svn.red-bean.com/untouched.txt ------------------------------------------------------------------------ That just means the path wasn&#39;t modified in that revision."}, {"start_index": 1156388, "end_index": 1156786, "text": "To get log information for that revision, either run the log operation against the repository&#39;s root URL, or specify a path that you happen to know was changed in that revision: $ svn log -r 20 touched.txt ------------------------------------------------------------------------ r20 | sally | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line Made a change."}, {"start_index": 1156787, "end_index": 1157117, "text": "------------------------------------------------------------------------ Beginning with Subversion 1.7, users can take advantage of a special output mode which combines the information from svn log with what you would see when running svn diff on the same targets for each revision of the log."}, {"start_index": 1157222, "end_index": 1157413, "text": "$ svn log -r 20 touched.txt --diff ------------------------------------------------------------------------ r20 | sally | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line Made a change."}, {"start_index": 1157672, "end_index": 1157973, "text": "------------------------------------------------------------------------ $ As with svn diff , you may also make use of many of the various options which control the way the difference is generated, including --depth , --diff-cmd , and --extensions ( -x )."}, {"start_index": 1158921, "end_index": 1159177, "text": "For example: $ svn log --search sally --search harry https://svn.red-bean.com/repos/test ------------------------------------------------------------------------ r1701 | sally | 2011-10-12 22:35:30 -0600 (Wed, 12 Oct 2011) | 1 line Add a reminder."}, {"start_index": 1159178, "end_index": 1159354, "text": "------------------------------------------------------------------------ r1564 | harry | 2011-10-09 22:35:30 -0600 (Sun, 09 Oct 2011) | 1 line Merge r1560 to the 1.0.x branch."}, {"start_index": 1159355, "end_index": 1159574, "text": "------------------------------------------------------------------------ $ Using --search with --search-and options will show log messages that match the combined pattern from both options."}, {"start_index": 1159575, "end_index": 1159873, "text": "For example: $ svn log --verbose --search sally --search-and /foo/bar https://svn.red-bean.com/repos/test ------------------------------------------------------------------------ r1555 | sally | 2011-07-15 22:33:14 -0600 (Fri, 15 Jul 2011) | 1 line Changed paths: M /foo/bar/src.c Typofix."}, {"start_index": 1159874, "end_index": 1160091, "text": "------------------------------------------------------------------------ r1530 | sally | 2011-07-13 07:24:11 -0600 (Wed, 13 Jul 2011) | 1 line Changed paths: M /foo/bar M /foo/build Fix up some svn:ignore properties."}, {"start_index": 1160092, "end_index": 1160250, "text": "------------------------------------------------------------------------ $ --search and --search-and options does not actually perform a search."}, {"start_index": 1184335, "end_index": 1184432, "text": "The content of the repository doesn&#39;t change, but the repository&#39;s root URL does."}, {"start_index": 1196451, "end_index": 1196514, "text": "&#39;X&#39; Item is present because of an externals definition."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}, {"start_index": 1247505, "end_index": 1247534, "text": "--verbose ( -v ) Be verbose."}]}, {"group_id": 188, "duplicates": [{"start_index": 229838, "end_index": 229919, "text": "Instead, you&#39;ll get back a revision from the 26th, or even earlier."}, {"start_index": 448554, "end_index": 448616, "text": "If you don&#39;t, go back and read about revisions in ."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 189, "duplicates": [{"start_index": 230510, "end_index": 230884, "text": "Subversion will find all revisions between both dates, inclusive: $ svn log -r {2006-11-20}:{2006-11-29} Since the timestamp of a revision is stored as an unversioned, modifiable property of the revision (see ), revision timestamps can be changed to represent complete falsifications of true chronology, or even removed altogether."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 190, "duplicates": [{"start_index": 231488, "end_index": 231653, "text": "And your version control system shouldn&#39;t get in the way of your doing these things with your version-controlled files and directories, either."}, {"start_index": 383991, "end_index": 384036, "text": "Unfortunately, the system isn&#39;t flawless."}]}, {"group_id": 191, "duplicates": [{"start_index": 234044, "end_index": 234120, "text": "Mike Wazowski Let&#39;s say you called your software Frabnaggilywort."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 192, "duplicates": [{"start_index": 234435, "end_index": 234495, "text": "It&#39;s a nice story, really, but it doesn&#39;t end there."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 193, "duplicates": [{"start_index": 237715, "end_index": 237975, "text": "Here&#39;s an example of such an invocation: $ svn command -r OPERATIVE-REV item@ PEG-REV If OPERATIVE-REV is older than PEG-REV , the algorithm is as follows: Locate item in the revision identified by PEG-REV ."}, {"start_index": 238327, "end_index": 238399, "text": "But what if OPERATIVE-REV is younger than PEG-REV ?"}, {"start_index": 359327, "end_index": 359367, "text": "Here&#39;s where the difficulty sets in."}]}, {"group_id": 194, "duplicates": [{"start_index": 237977, "end_index": 238326, "text": "There can be only one such object. Trace the object&#39;s history backwards (through any possible renames) to its ancestor in the revision OPERATIVE-REV . Perform the requested action on that ancestor, wherever it is located, or whatever its name might be or might have been at that time."}, {"start_index": 238946, "end_index": 239258, "text": "There can be only one such object. Trace the object&#39;s history backward (through any possible renames) to its ancestor in the revision PEG-REV . Verify that the object&#39;s location (path-wise) in PEG-REV is the same as it is in OPERATIVE-REV ."}]}, {"group_id": 195, "duplicates": [{"start_index": 239260, "end_index": 239448, "text": "If that&#39;s the case, at least the two locations are known to be directly related, so perform the requested action on the location in OPERATIVE-REV ."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 196, "duplicates": [{"start_index": 239736, "end_index": 239857, "text": "Note that even when you don&#39;t explicitly supply a peg revision or operative revision, they are still present."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 765255, "end_index": 765319, "text": "It&#39;s your data protect it as much as you&#39;d like."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 197, "duplicates": [{"start_index": 241129, "end_index": 241469, "text": "To find out how the current IDEA file looked in that old revision, you run: $ svn cat -r 1 concept/IDEA svn: E195012: Unable to find repository location for &#39;concept/IDEA&#39; in revision 1 Of course, in this example, the current IDEA file didn&#39;t exist yet in revision 1, so Subversion gives an error."}, {"start_index": 241578, "end_index": 241776, "text": "The expanded notation is: $ svn cat -r 1 concept/IDEA@BASE svn: E195012: Unable to find repository location for &#39;concept/IDEA&#39; in revision 1 And when executed, it has the expected results."}]}, {"group_id": 198, "duplicates": [{"start_index": 242618, "end_index": 242773, "text": "Let&#39;s ask the other question, then in revision 1, what were the contents of whatever file occupied the address concepts/IDEA at the time?"}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 199, "duplicates": [{"start_index": 242775, "end_index": 242835, "text": "We&#39;ll use an explicit peg revision to help us out."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 200, "duplicates": [{"start_index": 242837, "end_index": 243219, "text": "$ svn cat concept/IDEA@1 The idea behind this project is to come up with a piece of software that can frab a naggily wort. Frabbing naggily worts is tricky business, and doing it incorrectly can have serious ramifications, so we need to employ over-the-top input validation and data verification mechanisms. Notice that we didn&#39;t provide an operative revision this time."}, {"start_index": 244008, "end_index": 244407, "text": "$ svn cat -r 1 frabnaggilywort/IDEA@HEAD The idea behind this project is to come up with a piece of software that can frab a naggily wort. Frabbing naggily worts is tricky business, and doing it incorrectly can have serious ramifications, so we need to employ over-the-top input validation and data verification mechanisms. And the peg and operative revisions need not be so trivial, either."}]}, {"group_id": 201, "duplicates": [{"start_index": 243221, "end_index": 243381, "text": "That&#39;s because when no operative revision is specified, Subversion assumes a default operative revision that&#39;s the same as the peg revision."}, {"start_index": 246272, "end_index": 246302, "text": "But it doesn&#39;t stop there."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 202, "duplicates": [{"start_index": 244815, "end_index": 245185, "text": "$ svn diff -r 4:10 http://svn.red-bean.com/projects/frabnaggilywort/IDEA@20 Index: frabnaggilywort/IDEA =================================================================== --- frabnaggilywort/IDEA (revision 4) +++ frabnaggilywort/IDEA (revision 10) @@ -1,5 +1,5 @@ -The idea behind this project is to come up with a piece of software -that can frab a naggily wort."}, {"start_index": 475322, "end_index": 475395, "text": "=================================================================== --- ."}, {"start_index": 538297, "end_index": 538370, "text": "=================================================================== --- ."}, {"start_index": 539346, "end_index": 539419, "text": "=================================================================== --- ."}]}, {"group_id": 203, "duplicates": [{"start_index": 245877, "end_index": 246032, "text": "Properties We&#39;ve already covered in detail how Subversion stores and retrieves various versions of files and directories in its repository."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 204, "duplicates": [{"start_index": 248256, "end_index": 248446, "text": "In other words, if you change the value of, or delete, a revision property, there&#39;s no way, within the scope of Subversion&#39;s functionality, to recover the previous value."}, {"start_index": 431284, "end_index": 431323, "text": "Fortunately, it&#39;s not the only way."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 205, "duplicates": [{"start_index": 250206, "end_index": 250350, "text": "You&#39;ll learn about the property-related svn subcommands and how property modifications affect your normal Subversion workflow."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 206, "duplicates": [{"start_index": 251730, "end_index": 251838, "text": "Now consider the same web site deployed in a way that makes use of Subversion&#39;s file properties."}, {"start_index": 1021068, "end_index": 1021128, "text": "After all, Subversion uses Subversion&#39;s APIs, too."}]}, {"group_id": 207, "duplicates": [{"start_index": 253469, "end_index": 253633, "text": "But if there&#39;s, say, a test-results property on that revision with the value all passing , that&#39;s meaningful information to have."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 614039, "end_index": 614118, "text": "That&#39;s not to say that there are no technical penalties to branching."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 208, "duplicates": [{"start_index": 253635, "end_index": 253955, "text": "And Subversion allows you to easily do this via the --with-revprop option of the svn commit command: $ svn commit -m &quot;Fix up the last remaining known regression bug.&quot; \\ --with-revprop &quot;test-results=all passing&quot; Sending lib/crit_bits.c Transmitting file data ."}, {"start_index": 740547, "end_index": 740571, "text": "Transmitting file data ."}, {"start_index": 740630, "end_index": 740654, "text": "Transmitting file data ."}, {"start_index": 740717, "end_index": 740741, "text": "Transmitting file data ."}, {"start_index": 1125289, "end_index": 1125383, "text": "): $ svn commit -m &quot;added howto section.&quot; Sending a Transmitting file data ."}]}, {"group_id": 209, "duplicates": [{"start_index": 254329, "end_index": 254562, "text": "Trying to locate a custom revision property generally involves performing a linear walk across all the revisions of the repository, asking of each revision, Do you have the property I&#39;m looking for?"}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 210, "duplicates": [{"start_index": 254709, "end_index": 256311, "text": "Notice the presence of the custom revision property testresults in the following output: $ svn log --with-all-revprops --xml lib/crit_bits.c &lt;?xml version=&quot;1.0&quot;?&gt; &lt;log&gt; &lt;logentry revision=&quot;912&quot;&gt; &lt;author&gt;harry&lt;/author&gt; &lt;date&gt;2011-07-29T14:47:41.169894Z&lt;/date&gt; &lt;msg&gt;Fix up the last remaining known regression bug.&lt;/msg&gt; &lt;revprops&gt; &lt;property name=&quot;testresults&quot;&gt;all passing&lt;/property&gt; &lt;/revprops&gt; &lt;/logentry&gt; $ Trying to find a custom versioned property is painful, too, and often involves a recursive svn propget across an entire working copy. In your situation, that might not be as bad as a linear walk across all revisions. But it certainly leaves much to be desired in terms of both performance and likelihood of success, especially if the scope of your search would require a working copy from the root of your repository. For this reason, you might choose especially in the revision property use case to simply add your metadata to the revision&#39;s log message using some policy-driven (and perhaps programmatically enforced) formatting that is designed to be quickly parsed from the output of svn log . It is quite common to see the following in Subversion log messages: Issue(s): IZ2376, IZ1919 Reviewed by: sally This fixes a nasty segfault in the wort frabbing process But here again lies some misfortune."}, {"start_index": 1114208, "end_index": 1115490, "text": "3 sally If you use the --xml option, you can get XML output describing the blame annotations, but not the contents of the lines themselves: $ svn blame --xml http://svn.red-bean.com/repos/test/readme.txt &lt;?xml version=&quot;1.0&quot;?&gt; &lt;blame&gt; &lt;target path=&quot;readme.txt&quot;&gt; &lt;entry line-number=&quot;1&quot;&gt; &lt;commit revision=&quot;3&quot;&gt; &lt;author&gt;sally&lt;/author&gt; &lt;date&gt;2008-05-25T19:12:31.428953Z&lt;/date&gt; &lt;/commit&gt; &lt;/entry&gt; &lt;entry line-number=&quot;2&quot;&gt; &lt;commit revision=&quot;5&quot;&gt; &lt;author&gt;harry&lt;/author&gt; &lt;date&gt;2008-05-29T13:26:12.293121Z&lt;/date&gt; &lt;/commit&gt; &lt;/entry&gt; &lt;entry line-number=&quot;3&quot;&gt; &lt;/entry&gt; &lt;/target&gt; &lt;/blame&gt; $ svn subcommands cat svn cat Output the contents of the specified files or URLs. svn cat TARGET[@REV]... Description Output the contents of the specified files or URLs. For listing the contents of directories, see svn list later in this chapter. Options Examples If you want to view readme.txt in your repository without checking it out: $ svn cat http://svn.red-bean.com/repos/test/readme.txt This is a README file."}]}, {"group_id": 211, "duplicates": [{"start_index": 256654, "end_index": 257647, "text": "For properties with short, human-readable values, perhaps the simplest way to add a new property is to specify the property name and value on the command line of the svn propset subcommand: $ svn propset copyright &#39;(c) 2006 Red-Bean Software&#39; calc/button.c property &#39;copyright&#39; set on &#39;calc/button.c&#39; $ But we&#39;ve been touting the flexibility that Subversion offers for your property values. And if you are planning to have a multiline textual, or even binary, property value, you probably do not want to supply that value on the command line. So the svn propset subcommand takes a --file ( -F ) option for specifying the name of a file that contains the new property value. $ svn propset license -F /path/to/LICENSE calc/button.c property &#39;license&#39; set on &#39;calc/button.c&#39; $ There are some restrictions on the names you can use for properties."}, {"start_index": 259211, "end_index": 260041, "text": "For example, we could have done the following: $ svn propset copyright &#39;(c) 2006 Red-Bean Software&#39; calc/* property &#39;copyright&#39; set on &#39;calc/Makefile&#39; property &#39;copyright&#39; set on &#39;calc/button.c&#39; property &#39;copyright&#39; set on &#39;calc/integer.c&#39; $ All of this property adding and editing isn&#39;t really very useful if you can&#39;t easily get the stored property value. So the svn program supplies two subcommands for displaying the names and values of properties stored on files and directories. The svn proplist command will list the names of properties that exist on a path. Once you know the names of the properties on the node, you can request their values individually using svn propget ."}]}, {"group_id": 212, "duplicates": [{"start_index": 257833, "end_index": 257948, "text": "If you&#39;re familiar with XML, this is pretty much the ASCII subset of the syntax for XML Name ."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 213, "duplicates": [{"start_index": 258055, "end_index": 258155, "text": "This command uses the configured editor program (see ) to add or modify properties."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 214, "duplicates": [{"start_index": 258737, "end_index": 259116, "text": "If you exit your editor without making any changes, no property modification will occur: $ svn propedit copyright calc/button.c ### exit the editor without changes No changes to property &#39;copyright&#39; on &#39;calc/button.c&#39; $ We should note that, as with other svn subcommands, those related to properties can act on multiple paths at once."}, {"start_index": 267625, "end_index": 267831, "text": "calc/button.c.prej $ cat calc/button.c.prej Trying to change property &#39;linecount&#39; from &#39;1267&#39; to &#39;1301&#39;, but property has been locally changed from &#39;1267&#39; to &#39;1256&#39;."}, {"start_index": 423929, "end_index": 424115, "text": "You can avoid future appearances of this warning by setting the value of the &#39;store-plaintext-passwords&#39; option to either &#39;yes&#39; or &#39;no&#39; in &#39;/tmp/servers&#39;."}, {"start_index": 507173, "end_index": 507194, "text": "Yes, that&#39;s true."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 215, "duplicates": [{"start_index": 260546, "end_index": 260802, "text": "$ svn proplist -v calc/button.c Properties on &#39;calc/button.c&#39;: copyright (c) 2006 Red-Bean Software license ================================================================ Copyright (c) 2006 Red-Bean Software. All rights reserved."}, {"start_index": 261928, "end_index": 262193, "text": "$ svn proplist -v calc/button.c Properties on &#39;calc/button.c&#39;: copyright (c) 2006 Red-Bean Software $ Remember those unversioned revision properties? You can modify those, too, using the same svn subcommands that we just described."}]}, {"group_id": 216, "duplicates": [{"start_index": 261370, "end_index": 261762, "text": "For example, this command will not yield the desired effect: $ svn propset license &quot;&quot; calc/button.c property &#39;license&#39; set on &#39;calc/button.c&#39; $ svn proplist -v calc/button.c Properties on &#39;calc/button.c&#39;: copyright (c) 2006 Red-Bean Software license $ You need to use the propdel subcommand to delete properties altogether."}, {"start_index": 261764, "end_index": 261927, "text": "The syntax is similar to the other property commands: $ svn propdel license calc/button.c property &#39;license&#39; deleted from &#39;calc/button.c&#39;."}, {"start_index": 261928, "end_index": 262092, "text": "$ svn proplist -v calc/button.c Properties on &#39;calc/button.c&#39;: copyright (c) 2006 Red-Bean Software $ Remember those unversioned revision properties?"}]}, {"group_id": 217, "duplicates": [{"start_index": 262572, "end_index": 262714, "text": "Otherwise, you can simply provide the URL of any path in the repository of interest (including the repository&#39;s root URL)."}, {"start_index": 1184335, "end_index": 1184432, "text": "The content of the repository doesn&#39;t change, but the repository&#39;s root URL does."}]}, {"group_id": 218, "duplicates": [{"start_index": 263004, "end_index": 263859, "text": "If your current working directory is part of a working copy of your repository, you can simply run the svn propset command with no target path: $ svn propset svn:log &quot;* button.c: Fix a compiler warning.&quot; -r11 --revprop property &#39;svn:log&#39; set on repository revision &#39;11&#39; $ But even if you haven&#39;t checked out a working copy from that repository, you can still effect the property change by providing the repository&#39;s root URL: $ svn propset svn:log &quot;* button.c: Fix a compiler warning.&quot; -r11 --revprop \\ http://svn.example.com/repos/project property &#39;svn:log&#39; set on repository revision &#39;11&#39; $ Note that the ability to modify these unversioned properties must be explicitly added by the repository administrator (see )."}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 765255, "end_index": 765319, "text": "It&#39;s your data protect it as much as you&#39;d like."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}, {"start_index": 1184335, "end_index": 1184432, "text": "The content of the repository doesn&#39;t change, but the repository&#39;s root URL does."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 219, "duplicates": [{"start_index": 263868, "end_index": 264016, "text": "That&#39;s because the properties aren&#39;t versioned, so you run the risk of losing information if you aren&#39;t careful with your edits."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 220, "duplicates": [{"start_index": 264786, "end_index": 265005, "text": "Properties and the Subversion Workflow Now that you are familiar with all of the property-related svn subcommands, let&#39;s see how property modifications affect the usual Subversion workflow."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 451733, "end_index": 451792, "text": "You&#39;ll see exactly how this works as we continue."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 221, "duplicates": [{"start_index": 265825, "end_index": 266170, "text": "$ svn status calc/button.c M calc/button.c $ svn diff calc/button.c Property changes on: calc/button.c ___________________________________________________________________ Added: copyright ## -0,0 +1 ## +(c) 2006 Red-Bean Software $ Notice how the status subcommand displays M in the second column instead of the first."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 222, "duplicates": [{"start_index": 266764, "end_index": 266907, "text": "$ svn update calc Updating &#39;calc&#39;: M calc/Makefile.in Conflict for property &#39;linecount&#39; discovered on &#39;calc/button.c&#39;."}, {"start_index": 480460, "end_index": 480507, "text": "$ svn up Updating &#39;.&#39;: At revision 361."}, {"start_index": 514183, "end_index": 514250, "text": "$ svn up Updating &#39;.&#39;: A real.c Updated to revision 402."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1209142, "end_index": 1209187, "text": "Updating &#39;ziptastic&#39;: At revision 43."}, {"start_index": 1209188, "end_index": 1209241, "text": "Summary of updates: Updated &#39;calc&#39; to r394."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 223, "duplicates": [{"start_index": 267577, "end_index": 267618, "text": "$ svn status calc C calc/button.c ?"}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 224, "duplicates": [{"start_index": 270420, "end_index": 270675, "text": "The main difference between versioned properties before 1.8 and after is that the latter provides a mechanism to find the properties set on a target path&#39;s parents , even if those parents are not found within the working copy."}, {"start_index": 916161, "end_index": 916222, "text": "Permissions are inherited from a path&#39;s parent directory."}]}, {"group_id": 225, "duplicates": [{"start_index": 270759, "end_index": 270970, "text": "First, the svn proplist and svn propget subcommands can retrieve all the properties on a URL&#39;s or a working copy path&#39;s parents by using the --show-inherited-props option."}, {"start_index": 916161, "end_index": 916222, "text": "Permissions are inherited from a path&#39;s parent directory."}]}, {"group_id": 226, "duplicates": [{"start_index": 270972, "end_index": 271273, "text": "You might think of this as the opposite of a --recursive subcommand operation instead of recursing &quot;down&quot; into a target&#39;s subdirectories, subcommands with the --show-inherited-props option look &quot;up&quot; into the target&#39;s parent directories."}, {"start_index": 916161, "end_index": 916222, "text": "Permissions are inherited from a path&#39;s parent directory."}]}, {"group_id": 227, "duplicates": [{"start_index": 271424, "end_index": 271471, "text": "Let&#39;s look at an example of how this works."}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 228, "duplicates": [{"start_index": 272199, "end_index": 273212, "text": "The parent&#39;s properties are called out as &quot;inherited&quot;: $ svn pg svn:auto-props --verbose --show-inherited-props site Inherited properties on &#39;site&#39;, from &#39;.&#39;: svn:auto-props *.py = svn:eol-style=native *.c = svn:eol-style=native *.h = svn:eol-style=native Properties on &#39;site&#39;: svn:auto-props *.html = svn:eol-style=native In the prior examples the root of the working copy corresponds to the root of the repository, but properties can also be inherited from outside the working copy when this is not the case. Let&#39;s checkout the site directory from the prior example, making it the root of our working copy: $ svn co http://svn.example.com/repos site-wc A site-wc/publish A site-wc/publish/ch2.html A site-wc/publish/news.html A site-wc/publish/ch3.html A site-wc/publish/faq.html A site-wc/publish/index.html A site-wc/publish/ch1.html U site-wc Checked out revision 19."}, {"start_index": 273214, "end_index": 274159, "text": "$ cd site-wc Now when we check for inherited properties on a working copy path we can see that one property is inherited from a working copy parent and one from a repository parent representing a location &quot;above&quot; the root of the working copy: $ svn pg svn:auto-props --verbose --show-inherited-props publish Inherited properties on &#39;publish&#39;, from &#39;http://svn.example.com/repos&#39;: svn:auto-props *.py = svn:eol-style=native *.c = svn:eol-style=native *.h = svn:eol-style=native Inherited properties on &#39;publish&#39;, from &#39;.&#39;: svn:auto-props *.html = svn:eol-style=native You can only inherit properties from repository paths which you have read authorization to see and . If you don&#39;t have read authorization to a parent path then it will appear as if the parent has no properties set on it."}]}, {"group_id": 229, "duplicates": [{"start_index": 274171, "end_index": 275064, "text": "As mentioned above, the svnlook proplist and svnlook propget commands also support the --show-inherited-props option, but instead of reporting the inherited props by working copy path or URL, they are listed by repository paths: $ svnlook pg repos svn:auto-props /site/publish --show-inherited-props -v Inherited properties on &#39;/site/publish&#39;, from &#39;/&#39;: svn:auto-props *.py = svn:eol-style=native *.c = svn:eol-style=native *.h = svn:eol-style=native Inherited properties on &#39;/site/publish&#39;, from &#39;/site&#39;: svn:auto-props *.html = svn:eol-style=native Properties inherited from above the root of the working copy are cached in the working copy&#39;s administrative database when the working copy is initially checked out and then refreshed whenever the working copy is updated."}, {"start_index": 286196, "end_index": 286746, "text": "calc/editor.py Let&#39;s check what svn:auto-props apply to calc : $ svn propget svn:auto-props -v --show-inherited-props calc Inherited properties on &#39;calc&#39;, from &#39;http://svn.example.com/repos&#39;: svn:auto-props *.py = svn:eol-style=native *.c = svn:eol-style=native *.h = svn:eol-style=native Inherited properties on &#39;calc&#39;, from &#39;.&#39;: svn:auto-props *.py = svn:eol-style=native *.c = svn:keywords=Author Date Id Rev URL When we add these three files what auto-props do we expect?"}, {"start_index": 423929, "end_index": 424115, "text": "You can avoid future appearances of this warning by setting the value of the &#39;store-plaintext-passwords&#39; option to either &#39;yes&#39; or &#39;no&#39; in &#39;/tmp/servers&#39;."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 480460, "end_index": 480507, "text": "$ svn up Updating &#39;.&#39;: At revision 361."}, {"start_index": 507173, "end_index": 507194, "text": "Yes, that&#39;s true."}, {"start_index": 514183, "end_index": 514250, "text": "$ svn up Updating &#39;.&#39;: A real.c Updated to revision 402."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1209142, "end_index": 1209187, "text": "Updating &#39;ziptastic&#39;: At revision 43."}, {"start_index": 1209188, "end_index": 1209241, "text": "Summary of updates: Updated &#39;calc&#39; to r394."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 230, "duplicates": [{"start_index": 278887, "end_index": 278954, "text": "(See later in this chapter for more about this property.)"}, {"start_index": 754812, "end_index": 754870, "text": "See later in this chapter for more about this."}, {"start_index": 1176726, "end_index": 1176754, "text": "See later in this chapter."}]}, {"group_id": 231, "duplicates": [{"start_index": 279028, "end_index": 279222, "text": "If you&#39;ve configured a mime-types-files runtime configuration parameter, Subversion will try to find a MIME type mapping in that file for your file&#39;s extension."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 232, "duplicates": [{"start_index": 280394, "end_index": 280488, "text": "(For more on Subversion&#39;s use of MIME types, see later in this chapter.)"}, {"start_index": 754812, "end_index": 754870, "text": "See later in this chapter for more about this."}, {"start_index": 1176726, "end_index": 1176754, "text": "See later in this chapter."}]}, {"group_id": 233, "duplicates": [{"start_index": 280958, "end_index": 281198, "text": "Subversion also provides, via its runtime configuration system (see ), a more flexible automatic property setting feature that allows you to create mappings of filename patterns to property names and values."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 234, "duplicates": [{"start_index": 283139, "end_index": 283366, "text": "For example, say you have checked out a working copy of your trunk branch and need to add a new file (let&#39;s assume that automatic properties in your runtime configuration are disabled): $ svn st ?"}, {"start_index": 285806, "end_index": 285835, "text": "Let&#39;s look at an example."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 235, "duplicates": [{"start_index": 283883, "end_index": 284605, "text": "Using the svn propget subcommand with the --show-inherited-props option we see that this is indeed the case: $ svn propget svn:auto-props --show-inherited-props -v calc Inherited properties on &#39;calc&#39;, from &#39;http://svn.example.com/repos&#39;: svn:auto-props *.py = svn:eol-style=native *.c = svn:eol-style=native *.h = svn:eol-style=native Unlike the svn:global-ignores property and its analogous runtime configuration global-ignores , which are combined, the svn:auto-props property overrides the auto-props runtime configuration if it defines an auto-prop for the same pattern as the runtime configuration."}, {"start_index": 286196, "end_index": 286746, "text": "calc/editor.py Let&#39;s check what svn:auto-props apply to calc : $ svn propget svn:auto-props -v --show-inherited-props calc Inherited properties on &#39;calc&#39;, from &#39;http://svn.example.com/repos&#39;: svn:auto-props *.py = svn:eol-style=native *.c = svn:eol-style=native *.h = svn:eol-style=native Inherited properties on &#39;calc&#39;, from &#39;.&#39;: svn:auto-props *.py = svn:eol-style=native *.c = svn:keywords=Author Date Id Rev URL When we add these three files what auto-props do we expect?"}, {"start_index": 423929, "end_index": 424115, "text": "You can avoid future appearances of this warning by setting the value of the &#39;store-plaintext-passwords&#39; option to either &#39;yes&#39; or &#39;no&#39; in &#39;/tmp/servers&#39;."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 480460, "end_index": 480507, "text": "$ svn up Updating &#39;.&#39;: At revision 361."}, {"start_index": 507173, "end_index": 507194, "text": "Yes, that&#39;s true."}, {"start_index": 514183, "end_index": 514250, "text": "$ svn up Updating &#39;.&#39;: A real.c Updated to revision 402."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1209142, "end_index": 1209187, "text": "Updating &#39;ziptastic&#39;: At revision 43."}, {"start_index": 1209188, "end_index": 1209241, "text": "Summary of updates: Updated &#39;calc&#39; to r394."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 236, "duplicates": [{"start_index": 286196, "end_index": 286746, "text": "calc/editor.py Let&#39;s check what svn:auto-props apply to calc : $ svn propget svn:auto-props -v --show-inherited-props calc Inherited properties on &#39;calc&#39;, from &#39;http://svn.example.com/repos&#39;: svn:auto-props *.py = svn:eol-style=native *.c = svn:eol-style=native *.h = svn:eol-style=native Inherited properties on &#39;calc&#39;, from &#39;.&#39;: svn:auto-props *.py = svn:eol-style=native *.c = svn:keywords=Author Date Id Rev URL When we add these three files what auto-props do we expect?"}, {"start_index": 423929, "end_index": 424115, "text": "You can avoid future appearances of this warning by setting the value of the &#39;store-plaintext-passwords&#39; option to either &#39;yes&#39; or &#39;no&#39; in &#39;/tmp/servers&#39;."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 480460, "end_index": 480507, "text": "$ svn up Updating &#39;.&#39;: At revision 361."}, {"start_index": 507173, "end_index": 507194, "text": "Yes, that&#39;s true."}, {"start_index": 514183, "end_index": 514250, "text": "$ svn up Updating &#39;.&#39;: A real.c Updated to revision 402."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1209142, "end_index": 1209187, "text": "Updating &#39;ziptastic&#39;: At revision 43."}, {"start_index": 1209188, "end_index": 1209241, "text": "Summary of updates: Updated &#39;calc&#39; to r394."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 237, "duplicates": [{"start_index": 286196, "end_index": 286746, "text": "calc/editor.py Let&#39;s check what svn:auto-props apply to calc : $ svn propget svn:auto-props -v --show-inherited-props calc Inherited properties on &#39;calc&#39;, from &#39;http://svn.example.com/repos&#39;: svn:auto-props *.py = svn:eol-style=native *.c = svn:eol-style=native *.h = svn:eol-style=native Inherited properties on &#39;calc&#39;, from &#39;.&#39;: svn:auto-props *.py = svn:eol-style=native *.c = svn:keywords=Author Date Id Rev URL When we add these three files what auto-props do we expect?"}, {"start_index": 423929, "end_index": 424115, "text": "You can avoid future appearances of this warning by setting the value of the &#39;store-plaintext-passwords&#39; option to either &#39;yes&#39; or &#39;no&#39; in &#39;/tmp/servers&#39;."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 480460, "end_index": 480507, "text": "$ svn up Updating &#39;.&#39;: At revision 361."}, {"start_index": 507173, "end_index": 507194, "text": "Yes, that&#39;s true."}, {"start_index": 514183, "end_index": 514250, "text": "$ svn up Updating &#39;.&#39;: A real.c Updated to revision 402."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1209142, "end_index": 1209187, "text": "Updating &#39;ziptastic&#39;: At revision 43."}, {"start_index": 1209188, "end_index": 1209241, "text": "Summary of updates: Updated &#39;calc&#39; to r394."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 238, "duplicates": [{"start_index": 289884, "end_index": 290035, "text": "Subversion&#39;s Reserved Properties In this section, we&#39;ll briefly summarize all the properties which Subversion reserves for its own use."}, {"start_index": 406167, "end_index": 406241, "text": "In this section, we&#39;ll look in detail at how to do these things."}]}, {"group_id": 239, "duplicates": [{"start_index": 290037, "end_index": 290226, "text": "We&#39;ll look at both types of properties those which are associated with individual versioned files and directories, and those which are associated with revisions."}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 240, "duplicates": [{"start_index": 291040, "end_index": 291229, "text": "svn:ignore If present on a directory, the value is a list of unversioned file patterns to be ignored by svn status and other subcommands."}, {"start_index": 291254, "end_index": 291451, "text": "svn:global-ignores If present on a directory, the value is a list of unversioned file patterns to be ignored by svn status and other subcommands."}]}, {"group_id": 241, "duplicates": [{"start_index": 294541, "end_index": 294823, "text": "This property is generally only observed when such an operation is active or when an svnrdump command failed to cleanly disconnect from the repository. (This property is only relevant when it appears on revision 0.)"}, {"start_index": 295996, "end_index": 296277, "text": "This property is generally only observed when such an operation is active or when an svnsync command failed to cleanly disconnect from the repository. (This property is only relevant when it appears on revision 0.)"}]}, {"group_id": 242, "duplicates": [{"start_index": 295009, "end_index": 295256, "text": "(This property is only relevant when it appears on revision 0.) svn:sync-from-uuid Contains the UUID of the repository of which this repository has been initialized as a mirror by the svnsync tool."}, {"start_index": 295258, "end_index": 295513, "text": "(This property is only relevant when it appears on revision 0.) svn:sync-from-url Contains the URL of the repository directory of which this repository has been initialized as a mirror by the svnsync tool."}]}, {"group_id": 243, "duplicates": [{"start_index": 295515, "end_index": 295594, "text": "(This property is only relevant when it appears on revision 0.)"}, {"start_index": 295762, "end_index": 295841, "text": "(This property is only relevant when it appears on revision 0.)"}, {"start_index": 296198, "end_index": 296277, "text": "(This property is only relevant when it appears on revision 0.)"}]}, {"group_id": 244, "duplicates": [{"start_index": 310083, "end_index": 310224, "text": "CRLF This causes the file to contain CRLF sequences for EOL markers, regardless of the operating system in use."}, {"start_index": 310225, "end_index": 310363, "text": "LF This causes the file to contain LF characters for EOL markers, regardless of the operating system in use."}, {"start_index": 310364, "end_index": 310502, "text": "CR This causes the file to contain CR characters for EOL markers, regardless of the operating system in use."}]}, {"group_id": 245, "duplicates": [{"start_index": 310850, "end_index": 310973, "text": "Software compilers generate intermediate or even final files that you typically wouldn&#39;t bother to version."}, {"start_index": 1113500, "end_index": 1113529, "text": "-Don&#39;t bother reading it."}, {"start_index": 1113557, "end_index": 1113586, "text": "+Don&#39;t bother reading it."}, {"start_index": 1114133, "end_index": 1114174, "text": "4 jess Don&#39;t bother reading it."}, {"start_index": 1115491, "end_index": 1115519, "text": "Don&#39;t bother reading it."}]}, {"group_id": 246, "duplicates": [{"start_index": 311113, "end_index": 311236, "text": "It&#39;s ludicrous to expect Subversion working copies to be somehow impervious to this kind of clutter and impurity."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 247, "duplicates": [{"start_index": 312188, "end_index": 312497, "text": "One of the ways involves the use of Subversion&#39;s runtime configuration system (see ), and therefore applies to all the Subversion operations that make use of that runtime configuration generally those performed on a particular computer or by a particular user of a computer."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}, {"start_index": 1021068, "end_index": 1021128, "text": "After all, Subversion uses Subversion&#39;s APIs, too."}]}, {"group_id": 248, "duplicates": [{"start_index": 312504, "end_index": 312720, "text": "Two other methods make use of Subversion&#39;s directory property support and are more tightly bound to the versioned tree itself, and therefore affects everyone who has a working copy of that tree."}, {"start_index": 1021068, "end_index": 1021128, "text": "After all, Subversion uses Subversion&#39;s APIs, too."}]}, {"group_id": 249, "duplicates": [{"start_index": 314473, "end_index": 314784, "text": "Matches any single character * Matches any string of characters, including the empty string [ Begins a character class definition terminated by ] , used for matching a subset of characters You can see this same pattern matching behavior at a Unix shell prompt."}, {"start_index": 1104076, "end_index": 1104105, "text": "Matches any single character."}, {"start_index": 1158555, "end_index": 1158584, "text": "Matches any single character."}]}, {"group_id": 250, "duplicates": [{"start_index": 319342, "end_index": 319498, "text": "property &#39;svn:ignore&#39; set on &#39;.&#39; $ There are, however, some differences in the ways that CVS and Subversion handle ignore patterns."}, {"start_index": 423929, "end_index": 424115, "text": "You can avoid future appearances of this warning by setting the value of the &#39;store-plaintext-passwords&#39; option to either &#39;yes&#39; or &#39;no&#39; in &#39;/tmp/servers&#39;."}, {"start_index": 507173, "end_index": 507194, "text": "Yes, that&#39;s true."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 251, "duplicates": [{"start_index": 320480, "end_index": 320581, "text": "Say you have the following output from svn status : $ svn status calc M calc/button.c ?"}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 252, "duplicates": [{"start_index": 321163, "end_index": 321218, "text": "Isn&#39;t that the whole point of a build system?"}, {"start_index": 1115491, "end_index": 1115519, "text": "Don&#39;t bother reading it."}]}, {"group_id": 253, "duplicates": [{"start_index": 321891, "end_index": 322013, "text": "But notice what else is different about your svn status output: $ svn status M calc M calc/button.c ?"}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 254, "duplicates": [{"start_index": 322607, "end_index": 322834, "text": "If you actually want to see the ignored files as part of the status report, you can pass the --no-ignore option to Subversion: $ svn status --no-ignore M calc M calc/button.c I calc/calculator ?"}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 255, "duplicates": [{"start_index": 322841, "end_index": 323110, "text": "calc/data.c I calc/debug_log I calc/debug_log.1 I calc/debug_log.2.gz I calc/debug_log.3.gz I calc/wip.1.diff All of your previously hidden unversioned paths are once again shown, but now with the &#39;I&#39; Ignored status."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 256, "duplicates": [{"start_index": 323290, "end_index": 323412, "text": "Let&#39;s assume that you don&#39;t have a matching pattern anywhere in your global-ignores runtime configuration."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 257, "duplicates": [{"start_index": 323571, "end_index": 324097, "text": "Using the svn propget subcommand with the --show-inherited-props option, you see that the svn:global-ignores property is set on the root of your working copy, and sure enough, it defines a matching ignore pattern: $ svn pg svn:global-ignores calc -v --show-inherited-props Inherited properties on &#39;calc&#39;, from &#39;.&#39;: svn:global-ignores *.diff *.patch As mentioned earlier, the list of file patterns to ignore is also used by svn add and svn import ."}, {"start_index": 423929, "end_index": 424115, "text": "You can avoid future appearances of this warning by setting the value of the &#39;store-plaintext-passwords&#39; option to either &#39;yes&#39; or &#39;no&#39; in &#39;/tmp/servers&#39;."}, {"start_index": 480460, "end_index": 480507, "text": "$ svn up Updating &#39;.&#39;: At revision 361."}, {"start_index": 507173, "end_index": 507194, "text": "Yes, that&#39;s true."}, {"start_index": 514183, "end_index": 514250, "text": "$ svn up Updating &#39;.&#39;: A real.c Updated to revision 402."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1209142, "end_index": 1209187, "text": "Updating &#39;ziptastic&#39;: At revision 43."}, {"start_index": 1209188, "end_index": 1209241, "text": "Summary of updates: Updated &#39;calc&#39; to r394."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 258, "duplicates": [{"start_index": 328391, "end_index": 328471, "text": "Now, let&#39;s enable substitution of the LastChangedDate keyword."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1038487, "end_index": 1038518, "text": "Now let&#39;s switch languages."}]}, {"group_id": 259, "duplicates": [{"start_index": 331468, "end_index": 331526, "text": "It may also be specified as LastChangedDate ."}, {"start_index": 332107, "end_index": 332164, "text": "It may also be specified as LastChangedBy ."}]}, {"group_id": 260, "duplicates": [{"start_index": 331666, "end_index": 331836, "text": "Revision This keyword describes the last known revision in which this file changed in the repository, and looks something like $Revision: 144 $ ."}, {"start_index": 335804, "end_index": 335886, "text": "%r The last known revision in which this file changed in the repository."}]}, {"group_id": 261, "duplicates": [{"start_index": 331851, "end_index": 331934, "text": "It may also be specified as LastChangedRevision or Rev ."}, {"start_index": 332107, "end_index": 332164, "text": "It may also be specified as LastChangedBy ."}]}, {"group_id": 262, "duplicates": [{"start_index": 335594, "end_index": 335664, "text": "%d Short format of the date of the revision given by %r ."}, {"start_index": 335665, "end_index": 335734, "text": "%D Long format of the date of the revision given by %r ."}]}, {"group_id": 263, "duplicates": [{"start_index": 336198, "end_index": 336232, "text": "%H Equivalent to %P%_%r%_%d%_%a ."}, {"start_index": 336233, "end_index": 336267, "text": "%I Equivalent to %b%_%r%_%d%_%a ."}]}, {"group_id": 264, "duplicates": [{"start_index": 336759, "end_index": 337090, "text": "To do so, you&#39;d first define your custom keyword: $ svn pset svn:keywords &quot;PathRev=%P,%_r%r&quot; calc/button.c property &#39;svn:keywords&#39; set on &#39;button.c&#39; $ Next, you&#39;d edit the file&#39;s contents to add the keyword anchor for your custom keyword, which in this case is $PathRev$ ."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 265, "duplicates": [{"start_index": 342979, "end_index": 343035, "text": "(It&#39;s an odd example, to be sure, but bear with us.)"}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 266, "duplicates": [{"start_index": 343474, "end_index": 343834, "text": "$ Now, let&#39;s check out the same tree again, but this time we&#39;ll ask Subversion to give us only the topmost directory with none of its children at all: $ svn checkout file:///var/svn/repos mom-empty --depth empty Checked out revision 1 $ Notice that we added to our original svn checkout command line a new --depth option."}, {"start_index": 349581, "end_index": 349684, "text": "$ rm -rf mom-empty $ svn checkout file:///var/svn/repos mom-empty --depth empty Checked out revision 1."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1038487, "end_index": 1038518, "text": "Now let&#39;s switch languages."}]}, {"group_id": 267, "duplicates": [{"start_index": 343836, "end_index": 343997, "text": "This option is present on many of Subversion&#39;s subcommands and is similar to the --non-recursive ( -N ) and --recursive ( -R ) options."}, {"start_index": 1099457, "end_index": 1099493, "text": "--non-recursive ( -N ) Deprecated ."}]}, {"group_id": 268, "duplicates": [{"start_index": 346295, "end_index": 346497, "text": "Let&#39;s look now at examples of the other depth values: $ svn checkout file:///var/svn/repos mom-files --depth files A mom-files/kitty1.txt A mom-files/doggie1.txt Checked out revision 1."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 269, "duplicates": [{"start_index": 346833, "end_index": 346983, "text": "We&#39;ve used svn checkout as an example here, but you&#39;ll find the --depth option present on many other Subversion commands, too."}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 270, "duplicates": [{"start_index": 346985, "end_index": 347212, "text": "In those other commands, depth specification is a way to limit the scope of an operation to some depth, much like the way the older --non-recursive ( -N ) and --recursive ( -R ) options behave."}, {"start_index": 1099457, "end_index": 1099493, "text": "--non-recursive ( -N ) Deprecated ."}]}, {"group_id": 271, "duplicates": [{"start_index": 348338, "end_index": 348922, "text": "$ svn update --set-depth immediates mom-empty Updating &#39;mom-empty&#39;: A mom-empty/son A mom-empty/daughter Updated to revision 1. $ svn update --set-depth infinity mom-empty Updating &#39;mom-empty&#39;: A mom-empty/son/grandson A mom-empty/daughter/granddaughter1 A mom-empty/daughter/granddaughter1/bunny1.txt A mom-empty/daughter/granddaughter1/bunny2.txt A mom-empty/daughter/granddaughter2 A mom-empty/daughter/fishie1.txt Updated to revision 1. $ As we gradually increased our depth selection, the repository gave us more pieces of our tree."}, {"start_index": 349806, "end_index": 350392, "text": "$ svn update --set-depth empty mom-empty/daughter Updating &#39;mom-empty/daughter&#39;: A mom-empty/daughter Updated to revision 1. $ svn update --set-depth infinity mom-empty/daughter/granddaughter1 Updating &#39;mom-empty/daughter/granddaughter1&#39;: A mom-empty/daughter/granddaughter1 A mom-empty/daughter/granddaughter1/bunny1.txt A mom-empty/daughter/granddaughter1/bunny2.txt Updated to revision 1. $ Fortunately, having a complex collection of ambient depths in a single working copy doesn&#39;t complicate the way you interact with that working copy."}]}, {"group_id": 272, "duplicates": [{"start_index": 349368, "end_index": 349579, "text": "Here&#39;s an example of how we might build out a portion of one branch of our family&#39;s tree, enable full recursion on another branch, and keep still other pieces pruned (absent from disk)."}, {"start_index": 359327, "end_index": 359367, "text": "Here&#39;s where the difficulty sets in."}]}, {"group_id": 273, "duplicates": [{"start_index": 349685, "end_index": 349805, "text": "$ svn update --set-depth empty mom-empty/son Updating &#39;mom-empty/son&#39;: A mom-empty/son Updated to revision 1."}, {"start_index": 349806, "end_index": 349941, "text": "$ svn update --set-depth empty mom-empty/daughter Updating &#39;mom-empty/daughter&#39;: A mom-empty/daughter Updated to revision 1."}, {"start_index": 480460, "end_index": 480507, "text": "$ svn up Updating &#39;.&#39;: At revision 361."}, {"start_index": 514183, "end_index": 514250, "text": "$ svn up Updating &#39;.&#39;: A real.c Updated to revision 402."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1209142, "end_index": 1209187, "text": "Updating &#39;ziptastic&#39;: At revision 43."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 274, "duplicates": [{"start_index": 351791, "end_index": 352016, "text": "You&#39;d start with an empty-depth checkout of the common parent directory of the projects, and then update with infinite depth only the items you wish to have, like we demonstrated in the previous example."}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 275, "duplicates": [{"start_index": 352904, "end_index": 353055, "text": "This is especially handy when there are more things that you&#39;d like to keep in a working copy than things you&#39;d like to not keep."}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 765255, "end_index": 765319, "text": "It&#39;s your data protect it as much as you&#39;d like."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 276, "duplicates": [{"start_index": 353469, "end_index": 353745, "text": "$ svn checkout http://svn.example.com/repos/many-dirs --depth empty $ svn update --set-depth infinity many-dirs/wanted-dir-1 $ svn update --set-depth infinity many-dirs/wanted-dir-2 $ svn update --set-depth infinity many-dirs/wanted-dir-3 ### and so on, and so on, ..."}, {"start_index": 391764, "end_index": 391812, "text": "$ svn checkout http://svn.example.com/projects ."}]}, {"group_id": 277, "duplicates": [{"start_index": 354370, "end_index": 354741, "text": "$ svn checkout http://svn.example.com/repos/many-dirs $ svn update --set-depth exclude many-dirs/unwanted-dir D many-dirs/unwanted-dir $ This approach leaves your working copy with the same stuff as in the first approach, but any new subdirectories which appear in the top-level directory would also show up when you update your working copy."}, {"start_index": 355969, "end_index": 356278, "text": "$ svn checkout http://svn.example.com/repos/many-dirs --depth immediates $ svn update --set-depth exclude many-dirs/unwanted-dir D many-dirs/unwanted-dir $ svn update --set-depth infinity many-dirs/* $ Once again, your working copy will have the same stuff as in the previous two scenarios."}, {"start_index": 391764, "end_index": 391812, "text": "$ svn checkout http://svn.example.com/projects ."}]}, {"group_id": 278, "duplicates": [{"start_index": 357723, "end_index": 357800, "text": "Let&#39;s look at a real-life example of where this model runs aground."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 279, "duplicates": [{"start_index": 359708, "end_index": 359769, "text": "But these aren&#39;t text files they are binary images."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 280, "duplicates": [{"start_index": 360865, "end_index": 361082, "text": "But as one&#39;s version control system is, in fact, one form of communication, it follows that having that software facilitate the serialization of nonparallelizable editing efforts is no bad thing."}, {"start_index": 580211, "end_index": 580253, "text": "Here&#39;s where version control can help."}]}, {"group_id": 281, "duplicates": [{"start_index": 362669, "end_index": 362758, "text": "In this section, we&#39;ll cover all of these facets of the larger locking feature."}, {"start_index": 406167, "end_index": 406241, "text": "In this section, we&#39;ll look in detail at how to do these things."}]}, {"group_id": 282, "duplicates": [{"start_index": 365039, "end_index": 365226, "text": "svn subcommands lock locks creation To demonstrate lock creation, let&#39;s refer back to our example of multiple graphic designers working on the same binary image files."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 283, "duplicates": [{"start_index": 365512, "end_index": 365642, "text": "$ svn lock banana.jpg -m &quot;Editing file for tomorrow&#39;s release.&quot; &#39;banana.jpg&#39; locked by user &#39;harry&#39;."}, {"start_index": 1148312, "end_index": 1148447, "text": "Options Examples Lock two files in your working copy: $ svn lock tree.jpg house.jpg &#39;tree.jpg&#39; locked by user &#39;harry&#39;."}, {"start_index": 1148448, "end_index": 1148499, "text": "&#39;house.jpg&#39; locked by user &#39;harry&#39;."}, {"start_index": 1148813, "end_index": 1148955, "text": "Lock a file without a working copy: $ svn lock http://svn.red-bean.com/repos/test/tree.jpg &#39;tree.jpg&#39; locked by user &#39;harry&#39;."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1205658, "end_index": 1205775, "text": "Options Examples Unlock two files in your working copy: $ svn unlock tree.jpg house.jpg &#39;tree.jpg&#39; unlocked."}, {"start_index": 1205776, "end_index": 1205805, "text": "&#39;house.jpg&#39; unlocked."}, {"start_index": 1205807, "end_index": 1206041, "text": "Unlock a file in your working copy that is currently locked by another user: $ svn unlock tree.jpg svn: E195013: &#39;tree.jpg&#39; is not locked in this working copy $ svn unlock --force tree.jpg &#39;tree.jpg&#39; unlocked."}, {"start_index": 1206043, "end_index": 1206162, "text": "Unlock a file without a working copy: $ svn unlock http://svn.red-bean.com/repos/test/tree.jpg &#39;tree.jpg unlocked."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 284, "duplicates": [{"start_index": 366936, "end_index": 367774, "text": "$ svn status K banana.jpg $ svn info banana.jpg Path: banana.jpg Name: banana.jpg Working Copy Root Path: /home/harry/project URL: http://svn.example.com/repos/project/banana.jpg Repository Root: http://svn.example.com/repos/project Repository UUID: edb2f264-5ef2-0310-a47a-87b0ce17a8ec Revision: 2198 Node Kind: file Schedule: normal Last Changed Author: frank Last Changed Rev: 1950 Last Changed Date: 2006-03-15 12:43:04 -0600 (Wed, 15 Mar 2006) Text Last Updated: 2006-06-08 19:23:07 -0500 (Thu, 08 Jun 2006) Properties Last Updated: 2006-06-08 19:23:07 -0500 (Thu, 08 Jun 2006) Checksum: 3b110d3b10638f5d1f4fe0f436a5a2a5 Lock Token: opaquelocktoken:0c0f600b-88f9-0310-9e48-355b44d4a58e Lock Owner: harry Lock Created: 2006-06-14 17:20:31 -0500 (Wed, 14 Jun 2006) Lock Comment (1 line): Editing file for tomorrow&#39;s release."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 285, "duplicates": [{"start_index": 368495, "end_index": 368601, "text": "In fact, a lock&#39;s unique token is discoverable by anyone who runs svn info URL ."}, {"start_index": 1232499, "end_index": 1232531, "text": "Removed lock on &#39;/house.jpg."}]}, {"group_id": 286, "duplicates": [{"start_index": 368680, "end_index": 368818, "text": "It&#39;s proof that the lock was created in that particular working copy, and not somewhere else by some other client."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 287, "duplicates": [{"start_index": 369097, "end_index": 369309, "text": "It should not be possible to accidentally commit changes to that same file from your home computer later that evening simply because you&#39;ve authenticated as the lock&#39;s owner."}, {"start_index": 1232499, "end_index": 1232531, "text": "Removed lock on &#39;/house.jpg."}]}, {"group_id": 288, "duplicates": [{"start_index": 370198, "end_index": 370467, "text": "That&#39;s because he authenticates as the lock owner and also because his working copy holds the correct lock token: $ svn status M K banana.jpg $ svn commit -m &quot;Make banana more yellow&quot; Sending banana.jpg Transmitting file data ."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 740547, "end_index": 740571, "text": "Transmitting file data ."}, {"start_index": 740630, "end_index": 740654, "text": "Transmitting file data ."}, {"start_index": 740717, "end_index": 740741, "text": "Transmitting file data ."}, {"start_index": 1125289, "end_index": 1125383, "text": "): $ svn commit -m &quot;added howto section.&quot; Sending a Transmitting file data ."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 289, "duplicates": [{"start_index": 370493, "end_index": 370647, "text": "$ svn status $ Notice that after the commit is finished, svn status shows that the lock token is no longer present in the working copy."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 290, "duplicates": [{"start_index": 371798, "end_index": 371931, "text": "You can also make this your default behavior by setting the no-unlock runtime configuration option (see )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 291, "duplicates": [{"start_index": 372055, "end_index": 372187, "text": "The lock can be released at any time with a simple svn unlock command: $ svn unlock banana.c &#39;banana.c&#39; unlocked."}, {"start_index": 1205776, "end_index": 1205805, "text": "&#39;house.jpg&#39; unlocked."}]}, {"group_id": 292, "duplicates": [{"start_index": 372189, "end_index": 372348, "text": "Discovering Locks svn subcommands status locks discovery When a commit fails due to someone else&#39;s locks, it&#39;s fairly easy to learn about them."}, {"start_index": 1232499, "end_index": 1232531, "text": "Removed lock on &#39;/house.jpg."}]}, {"group_id": 293, "duplicates": [{"start_index": 372350, "end_index": 372758, "text": "The easiest way is to run svn status -u : $ svn status -u M 23 bar.c M O 32 raisin.jpg * 72 foo.h Status against revision: 105 $ svn subcommands info In this example, Sally can see not only that her copy of foo.h is out of date, but also that one of the two modified files she plans to commit is locked in the repository."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 294, "duplicates": [{"start_index": 373045, "end_index": 373661, "text": "Once again, svn info has the answers: $ svn info ^/raisin.jpg Path: raisin.jpg Name: raisin.jpg URL: http://svn.example.com/repos/project/raisin.jpg Repository Root: http://svn.example.com/repos/project Repository UUID: edb2f264-5ef2-0310-a47a-87b0ce17a8ec Revision: 105 Node Kind: file Last Changed Author: sally Last Changed Rev: 32 Last Changed Date: 2006-01-25 12:43:04 -0600 (Sun, 25 Jan 2006) Lock Token: opaquelocktoken:fc2b4dee-98f9-0310-abf3-653ff3226e6b Lock Owner: harry Lock Created: 2006-02-16 13:29:18 -0500 (Thu, 16 Feb 2006) Lock Comment (1 line): Need to make a quick tweak to this image."}, {"start_index": 375713, "end_index": 375940, "text": "Path: /project/raisin.jpg UUID Token: opaquelocktoken:fc2b4dee-98f9-0310-abf3-653ff3226e6b Owner: harry Created: 2006-02-16 13:29:18 -0500 (Thu, 16 Feb 2006) Expires: Comment (1 line): Need to make a quick tweak to this image."}]}, {"group_id": 295, "duplicates": [{"start_index": 374706, "end_index": 374829, "text": "If he&#39;s unavailable, she might try to forcibly break the lock herself or ask an administrator to do so."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 296, "duplicates": [{"start_index": 374830, "end_index": 375050, "text": "Breaking and Stealing Locks locks breaking A repository lock isn&#39;t sacred in Subversion&#39;s default configuration state, locks can be released not only by the person who created them, but by anyone."}, {"start_index": 1232499, "end_index": 1232531, "text": "Removed lock on &#39;/house.jpg."}]}, {"group_id": 297, "duplicates": [{"start_index": 375942, "end_index": 376042, "text": "$ svnadmin rmlocks /var/svn/repos /project/raisin.jpg Removed lock on &#39;/project/raisin.jpg&#39;."}, {"start_index": 1232499, "end_index": 1232531, "text": "Removed lock on &#39;/house.jpg."}]}, {"group_id": 298, "duplicates": [{"start_index": 376151, "end_index": 376809, "text": "To do this, Sally simply needs to pass the --force option to the svn unlock command: $ svn status -u M 23 bar.c M O 32 raisin.jpg * 72 foo.h Status against revision: 105 $ svn unlock raisin.jpg svn: E195013: &#39;raisin.jpg&#39; is not locked in this working copy $ svn info raisin.jpg | grep URL URL: http://svn.example.com/repos/project/raisin.jpg $ svn unlock http://svn.example.com/repos/project/raisin.jpg svn: warning: W160039: Unlock failed on &#39;raisin.jpg&#39; (403 Forbidden) $ svn unlock --force http://svn.example.com/repos/project/raisin.jpg &#39;raisin.jpg&#39; unlocked."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}, {"start_index": 1205776, "end_index": 1205805, "text": "&#39;house.jpg&#39; unlocked."}, {"start_index": 1205807, "end_index": 1206041, "text": "Unlock a file in your working copy that is currently locked by another user: $ svn unlock tree.jpg svn: E195013: &#39;tree.jpg&#39; is not locked in this working copy $ svn unlock --force tree.jpg &#39;tree.jpg&#39; unlocked."}]}, {"group_id": 299, "duplicates": [{"start_index": 377948, "end_index": 378273, "text": "To do this, Sally passes the --force option to svn lock : $ svn lock raisin.jpg svn: warning: W160035: Path &#39;/project/raisin.jpg&#39; is already locked by user &#39;h arry&#39; in filesystem &#39;/var/svn/repos/db&#39; $ svn lock --force raisin.jpg &#39;raisin.jpg&#39; locked by user &#39;sally&#39;."}, {"start_index": 1148448, "end_index": 1148499, "text": "&#39;house.jpg&#39; locked by user &#39;harry&#39;."}, {"start_index": 1148501, "end_index": 1148811, "text": "Lock a file in your working copy that is currently locked by another user: $ svn lock tree.jpg svn: warning: W160035: Path &#39;/tree.jpg is already locked by user &#39;sally&#39; in fi lesystem &#39;/var/svn/repos/db&#39; $ svn lock --force tree.jpg &#39;tree.jpg&#39; locked by user &#39;harry&#39;."}, {"start_index": 1148813, "end_index": 1148955, "text": "Lock a file without a working copy: $ svn lock http://svn.red-bean.com/repos/test/tree.jpg &#39;tree.jpg&#39; locked by user &#39;harry&#39;."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1199050, "end_index": 1199100, "text": "&#39;C&#39; Item is the victim of a tree conflict."}, {"start_index": 1205658, "end_index": 1205775, "text": "Options Examples Unlock two files in your working copy: $ svn unlock tree.jpg house.jpg &#39;tree.jpg&#39; unlocked."}, {"start_index": 1205776, "end_index": 1205805, "text": "&#39;house.jpg&#39; unlocked."}, {"start_index": 1205807, "end_index": 1206041, "text": "Unlock a file in your working copy that is currently locked by another user: $ svn unlock tree.jpg svn: E195013: &#39;tree.jpg&#39; is not locked in this working copy $ svn unlock --force tree.jpg &#39;tree.jpg&#39; unlocked."}, {"start_index": 1206043, "end_index": 1206162, "text": "Unlock a file without a working copy: $ svn unlock http://svn.red-bean.com/repos/test/tree.jpg &#39;tree.jpg unlocked."}]}, {"group_id": 300, "duplicates": [{"start_index": 378706, "end_index": 378992, "text": "Either way, Harry can see this by asking svn status to contact the repository: $ svn status K raisin.jpg $ svn status -u B 32 raisin.jpg Status against revision: 105 $ svn update Updating &#39;.&#39;: B raisin.jpg Updated to revision 105."}, {"start_index": 423929, "end_index": 424115, "text": "You can avoid future appearances of this warning by setting the value of the &#39;store-plaintext-passwords&#39; option to either &#39;yes&#39; or &#39;no&#39; in &#39;/tmp/servers&#39;."}, {"start_index": 480460, "end_index": 480507, "text": "$ svn up Updating &#39;.&#39;: At revision 361."}, {"start_index": 507173, "end_index": 507194, "text": "Yes, that&#39;s true."}, {"start_index": 514183, "end_index": 514250, "text": "$ svn up Updating &#39;.&#39;: A real.c Updated to revision 402."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1209142, "end_index": 1209187, "text": "Updating &#39;ziptastic&#39;: At revision 43."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 301, "duplicates": [{"start_index": 378993, "end_index": 379156, "text": "$ svn status $ If the repository lock was broken, then svn status --show-updates ( -u ) displays a B (Broken) symbol next to the file."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 302, "duplicates": [{"start_index": 380742, "end_index": 380879, "text": "Lock Communication We&#39;ve seen how svn lock and svn unlock can be used to create, release, break, and steal locks."}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 303, "duplicates": [{"start_index": 381295, "end_index": 381462, "text": "She spends hours editing the file, and when she tries to commit her change, she discovers that either the file is locked or that she&#39;s out of date."}, {"start_index": 1232499, "end_index": 1232531, "text": "Removed lock on &#39;/house.jpg."}]}, {"group_id": 304, "duplicates": [{"start_index": 382850, "end_index": 383352, "text": "$ ls -l raisin.jpg -r--r--r-- 1 sally sally 215589 Jun 8 19:23 raisin.jpg $ svn lock raisin.jpg svn: warning: W160035: Path &#39;/project/raisin.jpg&#39; is already locked by user &#39;h arry&#39; in filesystem &#39;/var/svn/repos/db&#39; $ svn info http://svn.example.com/repos/project/raisin.jpg | grep Lock Lock Token: opaquelocktoken:fc2b4dee-98f9-0310-abf3-653ff3226e6b Lock Owner: harry Lock Created: 2006-06-08 07:29:18 -0500 (Thu, 08 June 2006) Lock Comment (1 line): Making some tweaks."}, {"start_index": 1148448, "end_index": 1148499, "text": "&#39;house.jpg&#39; locked by user &#39;harry&#39;."}, {"start_index": 1148501, "end_index": 1148811, "text": "Lock a file in your working copy that is currently locked by another user: $ svn lock tree.jpg svn: warning: W160035: Path &#39;/tree.jpg is already locked by user &#39;sally&#39; in fi lesystem &#39;/var/svn/repos/db&#39; $ svn lock --force tree.jpg &#39;tree.jpg&#39; locked by user &#39;harry&#39;."}, {"start_index": 1148813, "end_index": 1148955, "text": "Lock a file without a working copy: $ svn lock http://svn.red-bean.com/repos/test/tree.jpg &#39;tree.jpg&#39; locked by user &#39;harry&#39;."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1199050, "end_index": 1199100, "text": "&#39;C&#39; Item is the victim of a tree conflict."}, {"start_index": 1205658, "end_index": 1205775, "text": "Options Examples Unlock two files in your working copy: $ svn unlock tree.jpg house.jpg &#39;tree.jpg&#39; unlocked."}, {"start_index": 1205776, "end_index": 1205805, "text": "&#39;house.jpg&#39; unlocked."}, {"start_index": 1205807, "end_index": 1206041, "text": "Unlock a file in your working copy that is currently locked by another user: $ svn unlock tree.jpg svn: E195013: &#39;tree.jpg&#39; is not locked in this working copy $ svn unlock --force tree.jpg &#39;tree.jpg&#39; unlocked."}, {"start_index": 1206043, "end_index": 1206162, "text": "Unlock a file without a working copy: $ svn unlock http://svn.red-bean.com/repos/test/tree.jpg &#39;tree.jpg unlocked."}]}, {"group_id": 305, "duplicates": [{"start_index": 384038, "end_index": 384157, "text": "It&#39;s possible that even when a file has the property, the read-only reminder won&#39;t always work."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 306, "duplicates": [{"start_index": 385578, "end_index": 385675, "text": "You can create or modify this property using svn propset or svn propedit (see )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 307, "duplicates": [{"start_index": 389183, "end_index": 389280, "text": "That&#39;s because the new format supports relative URLs and URLs that carry peg revisions."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 308, "duplicates": [{"start_index": 392550, "end_index": 393022, "text": "$ svn update Updating &#39;.&#39;: svn: warning: W200000: Error handling externals definition for &#39;renamed-projec t/some-dir/subdir&#39;: svn: warning: W170000: URL &#39;http://svn.example.com/projects/my-project/externa l-dir&#39; at revision 12 doesn&#39;t exist At revision 12. svn: E205011: Failure occurred processing one or more externals definitions $ Also, absolute URLs can cause problems with repositories that are available via multiple URL schemes."}, {"start_index": 423929, "end_index": 424115, "text": "You can avoid future appearances of this warning by setting the value of the &#39;store-plaintext-passwords&#39; option to either &#39;yes&#39; or &#39;no&#39; in &#39;/tmp/servers&#39;."}, {"start_index": 480460, "end_index": 480507, "text": "$ svn up Updating &#39;.&#39;: At revision 361."}, {"start_index": 507173, "end_index": 507194, "text": "Yes, that&#39;s true."}, {"start_index": 514183, "end_index": 514250, "text": "$ svn up Updating &#39;.&#39;: A real.c Updated to revision 402."}, {"start_index": 551985, "end_index": 552067, "text": "--- Recording mergeinfo for merge between repository URLs into &#39;.&#39;: U ."}, {"start_index": 553263, "end_index": 553506, "text": "$ svn merge ^/calc/branches/my-calc-branch --- Merging differences between repository URLs into &#39;.&#39;: C src/integer.c U src/real.c A src/whole.c --- Recording mergeinfo for merge between repository URLs into &#39;.&#39;: U ."}, {"start_index": 585529, "end_index": 585709, "text": "$ svn merge ^/calc/branches/mybranch --- Merging differences between repository URLs into &#39;.&#39;: U real.c U integer.c A newdirectory A newdirectory/newfile U ."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1209142, "end_index": 1209187, "text": "Updating &#39;ziptastic&#39;: At revision 43."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 309, "duplicates": [{"start_index": 396212, "end_index": 396449, "text": "For example, let&#39;s say you had the file /trunk/bikeshed/blue.html in your repository, and you wanted this file, as it appeared in revision 40, to appear in your working copy of /trunk/www/ as green.html ."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 310, "duplicates": [{"start_index": 396450, "end_index": 396740, "text": "The externals definition required to achieve this should look familiar by now: $ svn propget svn:externals www/ ^/trunk/bikeshed/blue.html@40 green.html $ svn update Updating &#39;.&#39;: Fetching external item into &#39;www&#39; E www/green.html Updated external to revision 40."}, {"start_index": 423929, "end_index": 424115, "text": "You can avoid future appearances of this warning by setting the value of the &#39;store-plaintext-passwords&#39; option to either &#39;yes&#39; or &#39;no&#39; in &#39;/tmp/servers&#39;."}, {"start_index": 480460, "end_index": 480507, "text": "$ svn up Updating &#39;.&#39;: At revision 361."}, {"start_index": 507173, "end_index": 507194, "text": "Yes, that&#39;s true."}, {"start_index": 514183, "end_index": 514250, "text": "$ svn up Updating &#39;.&#39;: A real.c Updated to revision 402."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1209142, "end_index": 1209187, "text": "Updating &#39;ziptastic&#39;: At revision 43."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 311, "duplicates": [{"start_index": 396766, "end_index": 397022, "text": "$ svn status X www/green.html $ As you can see in the previous output, Subversion denotes file externals with the letter E when they are fetched into the working copy, and with the letter X when showing the working copy status."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 312, "duplicates": [{"start_index": 398242, "end_index": 398661, "text": "However, in our example, we pinned the external to an older revision, so attempting to commit the external fails: $ svn status M X www/green.html $ svn commit -m &quot;change the color&quot; www/green.html Sending www/green.html svn: E155011: Commit failed (details follow): svn: E155011: File &#39;/trunk/bikeshed/blue.html&#39; is out of date $ Keep this in mind when defining file externals."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 313, "duplicates": [{"start_index": 400271, "end_index": 400438, "text": "We&#39;ve already mentioned some of the additional shortcomings of the old svn:externals format and how the newer Subversion 1.5 format improves upon it."}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 314, "duplicates": [{"start_index": 401702, "end_index": 401840, "text": "Be careful, though, that you don&#39;t inadvertently modify your external working copy in subtle ways that cause problems."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 315, "duplicates": [{"start_index": 403297, "end_index": 403385, "text": "This isn&#39;t necessarily due to poor planning or some form of digital masochism."}, {"start_index": 419118, "end_index": 419138, "text": "That&#39;s terrible!"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 316, "duplicates": [{"start_index": 406738, "end_index": 406814, "text": "Let&#39;s examine a usage scenario that demonstrates these concepts."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 317, "duplicates": [{"start_index": 406905, "end_index": 407178, "text": "His work leads him to change a couple of files: $ svn status M integer.c M mathops.c $ While testing his bug fix, Harry notices that his changes bring to light a tangentially related bug in the user interface logic found in button.c ."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 318, "duplicates": [{"start_index": 407505, "end_index": 407637, "text": "But today he&#39;s going to use Subversion&#39;s changelists feature as a special favor to the authors of this book."}, {"start_index": 1021068, "end_index": 1021128, "text": "After all, Subversion uses Subversion&#39;s APIs, too."}]}, {"group_id": 319, "duplicates": [{"start_index": 407743, "end_index": 408138, "text": "He does this by using the svn changelist command to assign the same arbitrary changelist name to those files: $ svn changelist math-fixes integer.c mathops.c A [math-fixes] integer.c A [math-fixes] mathops.c $ svn status --- Changelist &#39;math-fixes&#39;: M integer.c M mathops.c $ As you can see, the output of svn status reflects this new grouping."}, {"start_index": 409996, "end_index": 410318, "text": "$ svn status --- Changelist &#39;ui-fix&#39;: M button.c --- Changelist &#39;math-fixes&#39;: M integer.c M mathops.c $ Changelists As Operation Filters The visual grouping that Harry sees in the output of svn status as shown in our previous section is nice, but not entirely useful."}, {"start_index": 412994, "end_index": 413225, "text": "$ svn status --- Changelist &#39;math-fixes&#39;: M integer.c M mathops.c $ The --changelist option acts only as a filter for Subversion command targets, and will not add targets to an operation."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 320, "duplicates": [{"start_index": 408301, "end_index": 408671, "text": "Unfortunately, Harry carelessly assigns this third file to the same changelist as the previous two files: $ svn changelist math-fixes button.c A [math-fixes] button.c $ svn status --- Changelist &#39;math-fixes&#39;: button.c M integer.c M mathops.c $ svn subcommands changelist changelists removing Fortunately, Harry catches his mistake."}, {"start_index": 412994, "end_index": 413225, "text": "$ svn status --- Changelist &#39;math-fixes&#39;: M integer.c M mathops.c $ The --changelist option acts only as a filter for Subversion command targets, and will not add targets to an operation."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 321, "duplicates": [{"start_index": 409079, "end_index": 409791, "text": "In this case, Subversion will first warn Harry that button.c is being removed from the first changelist: $ svn changelist ui-fix button.c D [math-fixes] button.c A [ui-fix] button.c $ svn status --- Changelist &#39;ui-fix&#39;: button.c --- Changelist &#39;math-fixes&#39;: M integer.c M mathops.c $ Harry now has two distinct changelists present in his working copy, and svn status will group its output according to these changelist determinations. Notice that even though Harry hasn&#39;t yet modified button.c , it still shows up in the output of svn status as interesting because it has a changelist assignment."}, {"start_index": 409996, "end_index": 410437, "text": "$ svn status --- Changelist &#39;ui-fix&#39;: M button.c --- Changelist &#39;math-fixes&#39;: M integer.c M mathops.c $ Changelists As Operation Filters The visual grouping that Harry sees in the output of svn status as shown in our previous section is nice, but not entirely useful. The status command is but one of many operations that he might wish to perform on his working copy."}]}, {"group_id": 322, "duplicates": [{"start_index": 411040, "end_index": 411473, "text": "$ svn diff integer.c mathops.c Index: integer.c =================================================================== --- integer.c (revision 1157) +++ integer.c (working copy) Index: mathops.c =================================================================== --- mathops.c (revision 1157) +++ mathops.c (working copy) $ That works okay for a few files, but what if Harry&#39;s change touched 20 or 30 files?"}, {"start_index": 475322, "end_index": 475395, "text": "=================================================================== --- ."}, {"start_index": 538297, "end_index": 538370, "text": "=================================================================== --- ."}, {"start_index": 539346, "end_index": 539419, "text": "=================================================================== --- ."}]}, {"group_id": 323, "duplicates": [{"start_index": 411549, "end_index": 412252, "text": "Now that he&#39;s using changelists, though, Harry can avoid explicitly listing the set of files in his changelist from now on, and instead provide just the changelist name: $ svn diff --changelist math-fixes Index: integer.c =================================================================== --- integer.c (revision 1157) +++ integer.c (working copy) Index: mathops.c =================================================================== --- mathops.c (revision 1157) +++ mathops.c (working copy) $ And when it&#39;s time to commit, Harry can again use the --changelist option to limit the scope of the commit to files in a certain changelist."}, {"start_index": 475322, "end_index": 475395, "text": "=================================================================== --- ."}, {"start_index": 538297, "end_index": 538370, "text": "=================================================================== --- ."}, {"start_index": 539346, "end_index": 539419, "text": "=================================================================== --- ."}]}, {"group_id": 324, "duplicates": [{"start_index": 412254, "end_index": 412485, "text": "He might commit his user interface fix by doing the following: $ svn commit -m &quot;Fix a UI bug found while working on math logic.&quot; \\ --changelist ui-fix Sending button.c Transmitting file data ."}, {"start_index": 740547, "end_index": 740571, "text": "Transmitting file data ."}, {"start_index": 740630, "end_index": 740654, "text": "Transmitting file data ."}, {"start_index": 740717, "end_index": 740741, "text": "Transmitting file data ."}]}, {"group_id": 325, "duplicates": [{"start_index": 412994, "end_index": 413225, "text": "$ svn status --- Changelist &#39;math-fixes&#39;: M integer.c M mathops.c $ The --changelist option acts only as a filter for Subversion command targets, and will not add targets to an operation."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 326, "duplicates": [{"start_index": 416306, "end_index": 416521, "text": "The details of the network protocol are hidden from the user the client attempts to access a URL, and depending on the URL scheme, a particular protocol is used to contact the server (see )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 327, "duplicates": [{"start_index": 417918, "end_index": 418065, "text": "That is, the authenticated user&#39;s name is stored as the value of the svn:author property on the new revision (see )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 328, "duplicates": [{"start_index": 418519, "end_index": 418734, "text": "Subversion&#39;s different server options understand different authentication protocols, but from the user&#39;s point of view, authentication typically boils down to usernames and passwords."}, {"start_index": 568585, "end_index": 568661, "text": "In Subversion, there&#39;s no difference between a tag and a branch."}]}, {"group_id": 329, "duplicates": [{"start_index": 419176, "end_index": 419225, "text": "Don&#39;t worry it&#39;s not as bad as it sounds."}, {"start_index": 1115491, "end_index": 1115519, "text": "Don&#39;t bother reading it."}]}, {"group_id": 330, "duplicates": [{"start_index": 421229, "end_index": 421362, "text": "The Subversion client will behave as though they don&#39;t exist, prompting for passwords when required.)"}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 331, "duplicates": [{"start_index": 424657, "end_index": 424998, "text": "When considering how to use Subversion&#39;s password caching system, you&#39;ll want to consult any governing policies that are in place for your client computer many companies have strict rules about the ways that their employees&#39; authentication credentials should be stored."}, {"start_index": 1021068, "end_index": 1021128, "text": "After all, Subversion uses Subversion&#39;s APIs, too."}]}, {"group_id": 332, "duplicates": [{"start_index": 432862, "end_index": 433025, "text": "If there&#39;s no problem or conflict detected with the requested operation, the server commits the additions or removals in a single new revision."}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 333, "duplicates": [{"start_index": 434995, "end_index": 435379, "text": "You can&#39;t really do the same thing as remote operations using the command-line client while still preserving the it-happened-in-a-single-revision-ness of the change svn delete URL would create a new revision that removed the directory; svn mkdir URL would generate a second revision for the directory&#39;s re-creation."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 334, "duplicates": [{"start_index": 435565, "end_index": 435738, "text": "That tool is the svnmucc tool the Subversion Multiple URL Command Client: $ svnmucc --help Subversion multiple URL command client usage: svnmucc ACTION..."}, {"start_index": 1263772, "end_index": 1263789, "text": "svnmucc ACTION..."}]}, {"group_id": 335, "duplicates": [{"start_index": 435742, "end_index": 435854, "text": "Perform one or more Subversion repository URL-based ACTIONs, committing the result as a (single) new revision."}, {"start_index": 1263629, "end_index": 1263771, "text": "svnmucc svnmucc Perform one or more Subversion repository URL-based ACTIONs, committing the result as a (single) new revision."}]}, {"group_id": 336, "duplicates": [{"start_index": 437162, "end_index": 437362, "text": "You&#39;ll notice in the previous command output actions such as cp , mkdir , mv , and rm , all of which are very similar to the commands we mentioned in ."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 337, "duplicates": [{"start_index": 437583, "end_index": 437674, "text": "Let&#39;s take our previous example of trying to simply replace a remote directory."}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 338, "duplicates": [{"start_index": 440249, "end_index": 440482, "text": "That&#39;s all the information the server needs to deny your commit when it would clobber someone else&#39;s change, forcing you to integrate their change into your working copy and reconsider your own change."}, {"start_index": 445607, "end_index": 445637, "text": "But don&#39;t stop here!"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 339, "duplicates": [{"start_index": 441775, "end_index": 442006, "text": "(We&#39;ll assume that there is no other value in using a working copy for this operation, such as the presence of scripts Harry should run in advance of his commit to verify that it&#39;s a reasonable one.)"}, {"start_index": 446703, "end_index": 446723, "text": "What&#39;s a Branch?"}, {"start_index": 448617, "end_index": 448660, "text": "Let&#39;s revisit the example from ."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 340, "duplicates": [{"start_index": 446547, "end_index": 446702, "text": "If you&#39;ve not familiarized yourself with Subversion&#39;s basic concepts (found in ), we recommend that you do so before reading this chapter."}, {"start_index": 492375, "end_index": 492446, "text": "(If you&#39;re not familiar with Subversion properties, see .)"}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 341, "duplicates": [{"start_index": 447763, "end_index": 447887, "text": "A branch always begins life as a copy of something, and moves on from there, generating its own history (see )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 342, "duplicates": [{"start_index": 449387, "end_index": 449484, "text": "Let&#39;s say that you&#39;ve been given the task of implementing a large software feature."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 343, "duplicates": [{"start_index": 449977, "end_index": 450236, "text": "One strategy is to crawl into a hole: you can stop sharing information for a week or two, gutting and reorganizing all the files in your private working copy but not committing or updating until you&#39;re completely finished with your task."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}]}, {"group_id": 344, "duplicates": [{"start_index": 452496, "end_index": 452728, "text": "Let&#39;s assume that your team (like most) has a policy of creating branches in the branches directory that is a sibling of the project&#39;s trunk (the /calc/branches directory in our scenario)."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 345, "duplicates": [{"start_index": 454624, "end_index": 454738, "text": "This isn&#39;t inherently dangerous, but can cause unnecessary complications later during merging."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 346, "duplicates": [{"start_index": 455280, "end_index": 455395, "text": "If you&#39;re an experienced Unix user, you&#39;ll recognize this as the same concept behind a hard link."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 347, "duplicates": [{"start_index": 455681, "end_index": 455767, "text": "This is why you&#39;ll often hear Subversion users talk about cheap copies."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 348, "duplicates": [{"start_index": 455770, "end_index": 455916, "text": "It doesn&#39;t matter how large the directory is it takes a very tiny, constant amount of time and space to make a copy of it."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 349, "duplicates": [{"start_index": 457648, "end_index": 457847, "text": "Let&#39;s pretend that a week goes by, and the following commits happen: You make a change to /calc/branches/my-calc-branch/src/button.c , which creates revision 342."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 350, "duplicates": [{"start_index": 516495, "end_index": 517590, "text": "$ svn log ^/calc/trunk -r413 -v ------------------------------------------------------------------------ r413 | sally | 2013-02-21 01:57:51 -0500 (Thu, 21 Feb 2013) | 3 lines Changed paths: M /calc/trunk/src/main.c Fix issue #22 &#39;Passing a null value in the foo argument of bar() should be a tolerated, but causes a segfault&#39;. ------------------------------------------------------------------------ $ svn diff ^/calc/trunk -c413 Index: src/main.c =================================================================== --- src/main.c (revision 412) +++ src/main.c (revision 413) @@ -34,6 +34,7 @@ # Details of the fix Just as you used svn diff in the prior example to examine revision 413, you can pass the same option to svn merge : $ cd new-calc-feature-branch $ svn merge ^/calc/trunk -c413 --- Merging r413 into &#39;.&#39;: U src/main.c --- Recording mergeinfo for merge of r413 into &#39;.&#39;: U . $ svn st M . M src/main.c You can now go through the usual testing procedures before committing this change to your branch."}, {"start_index": 1151966, "end_index": 1153306, "text": "------------------------------------------------------------------------ r31 | harry | 2003-01-10 12:25:08 -0600 (Fri, 10 Jan 2003) | 1 line Added new file bar.c ------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines The --verbose ( -v ) option causes svn log to include information about the paths that were changed in each displayed revision. These paths appear, one path per line of output, with action codes that indicate what type of change was made to the path. $ svn log -v http://svn.red-bean.com/repos/test/ foo.c bar.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Changed paths: M /foo.c Added defines. ------------------------------------------------------------------------ r31 | harry | 2003-01-10 12:25:08 -0600 (Fri, 10 Jan 2003) | 1 line Changed paths: A /bar.c Added new file bar.c ------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines svn log uses just a handful of action codes, and they are similar to the ones the svn update command uses: A The item was added."}]}, {"group_id": 351, "duplicates": [{"start_index": 458620, "end_index": 458876, "text": "------------------------------------------------------------------------ r341 | user | 2013-02-15 07:41:25 -0500 (Fri, 15 Feb 2013) | 1 line Changed paths: A /calc/branches/my-calc-branch (from /calc/trunk:340) Creating a private branch of /calc/trunk."}, {"start_index": 458877, "end_index": 459101, "text": "------------------------------------------------------------------------ r154 | sally | 2013-01-30 04:20:03 -0500 (Wed, 30 Jan 2013) | 2 lines Changed paths: M /calc/trunk/src/integer.c * integer.c: changed a docstring."}, {"start_index": 459102, "end_index": 459403, "text": "------------------------------------------------------------------------ ------------------------------------------------------------------------ r113 | sally | 2013-01-26 15:50:21 -0500 (Sat, 26 Jan 2013) | 2 lines Changed paths: M /calc/trunk/src/integer.c * integer.c: Revise the fooplus API."}, {"start_index": 459404, "end_index": 459799, "text": "------------------------------------------------------------------------ r8 | sally | 2013-01-17 16:55:36 -0500 (Thu, 17 Jan 2013) | 1 line Changed paths: A /calc/trunk/Makefile A /calc/trunk/README A /calc/trunk/doc/INSTALL A /calc/trunk/src/button.c A /calc/trunk/src/integer.c A /calc/trunk/src/main.c A /calc/trunk/src/real.c Initial trunk code import for calc project."}, {"start_index": 459800, "end_index": 460046, "text": "------------------------------------------------------------------------ Notice that Subversion is tracing the history of your branch&#39;s integer.c all the way back through time, even traversing the point where it was copied."}, {"start_index": 460225, "end_index": 460587, "text": "Now look at what happens when Sally runs the same command on her copy of the file: $ pwd /home/sally/calc $ svn log -v src/integer.c ------------------------------------------------------------------------ r344 | sally | 2013-02-15 16:44:44 -0500 (Fri, 15 Feb 2013) | 1 line Changed paths: M /calc/trunk/src/integer.c Refactor the bazzle functions."}, {"start_index": 460588, "end_index": 460812, "text": "------------------------------------------------------------------------ r154 | sally | 2013-01-30 04:20:03 -0500 (Wed, 30 Jan 2013) | 2 lines Changed paths: M /calc/trunk/src/integer.c * integer.c: changed a docstring."}, {"start_index": 460813, "end_index": 461114, "text": "------------------------------------------------------------------------ ------------------------------------------------------------------------ r113 | sally | 2013-01-26 15:50:21 -0500 (Sat, 26 Jan 2013) | 2 lines Changed paths: M /calc/trunk/src/integer.c * integer.c: Revise the fooplus API."}, {"start_index": 461115, "end_index": 461510, "text": "------------------------------------------------------------------------ r8 | sally | 2013-01-17 16:55:36 -0500 (Thu, 17 Jan 2013) | 1 line Changed paths: A /calc/trunk/Makefile A /calc/trunk/README A /calc/trunk/doc/INSTALL A /calc/trunk/src/button.c A /calc/trunk/src/integer.c A /calc/trunk/src/main.c A /calc/trunk/src/real.c Initial trunk code import for calc project."}, {"start_index": 461511, "end_index": 461677, "text": "------------------------------------------------------------------------ Sally sees her own revision 344 change, but not the change you made in revision 343."}, {"start_index": 471864, "end_index": 472291, "text": "Using the ongoing example, you know that you branched /calc/trunk to /calc/branches/my-calc-branch in revision 341: $ svn log -v -r341 ------------------------------------------------------------------------ r341 | user | 2013-02-15 07:41:25 -0500 (Fri, 15 Feb 2013) | 1 line Changed paths: A /calc/branches/my-calc-branch (from /calc/trunk:340) Creating a private branch of /calc/trunk."}, {"start_index": 472292, "end_index": 472653, "text": "------------------------------------------------------------------------ When you are ready to synchronize your branch with the ongoing changes from trunk, you specify the starting revision as the revision of /calc/trunk which the branch was copied from and the ending revision as the youngest change on /calc/trunk ."}, {"start_index": 472655, "end_index": 473250, "text": "You can find the latter with the svn log command with the -r set to HEAD : $ svn log -q -rHEAD http://svn.example.com/repos/calc/trunk ------------------------------------------------------------------------ r351 | sally | 2013-02-16 08:04:22 -0500 (Sat, 16 Feb 2013) ------------------------------------------------------------------------ $ svn merge http://svn.example.com/repos/calc/trunk -r340:351 U doc/INSTALL U src/real.c U src/button.c U Makefile After any conflicts have been resolved, you can commit the merged changes to your branch."}, {"start_index": 474210, "end_index": 474892, "text": "Once you know your starting revision, you can perform another sync merge: $ svn log -q -rHEAD http://svn.example.com/repos/calc/trunk ------------------------------------------------------------------------ r959 | sally | 2013-03-5 7:30:21 -0500 (Tue, 05 Mar 2013) ------------------------------------------------------------------------ $ svn merge http://svn.example.com/repos/calc/trunk -r351:959 After running the prior example, your branch working copy now contains new local modifications, and these edits are duplications of all of the changes that have happened on the trunk since you first created your branch: $ svn status M ."}, {"start_index": 510035, "end_index": 510303, "text": "$ cd calc/trunk $ svn log -v --limit 3 ------------------------------------------------------------------------ r401 | sally | 2013-02-19 23:15:44 -0500 (Tue, 19 Feb 2013) | 1 line Changed paths: M /calc/trunk/src/main.c Follow-up to r400: Fix typos in help text."}, {"start_index": 510304, "end_index": 510560, "text": "------------------------------------------------------------------------ r400 | bill | 2013-02-19 20:55:08 -0500 (Tue, 19 Feb 2013) | 4 lines Changed paths: M /calc/trunk/src/main.c D /calc/trunk/src/real.c * calc/trunk/src/main.c: Update help text."}, {"start_index": 510659, "end_index": 510977, "text": "------------------------------------------------------------------------ r399 | sally | 2013-02-19 20:05:14 -0500 (Tue, 19 Feb 2013) | 1 line Changed paths: M /calc/trunk/src/button.c M /calc/trunk/src/integer.c M /calc/trunk/src/main.c M /calc/trunk/src/real.c Undoing erroneous change committed in r392."}, {"start_index": 510978, "end_index": 511147, "text": "------------------------------------------------------------------------ In the example, we&#39;re assuming that you&#39;re looking for a deleted file real.c ."}, {"start_index": 515450, "end_index": 515945, "text": "For example, let&#39;s assume you&#39;ve created a new feature branch /calc/branches/my-calc-feature-branch copied from /calc/trunk : $ svn log ^/calc/branches/new-calc-feature-branch -v -r403 ------------------------------------------------------------------------ r403 | user | 2013-02-20 03:26:12 -0500 (Wed, 20 Feb 2013) | 1 line Changed paths: A /calc/branches/new-calc-feature-branch (from /calc/trunk:402) Create a new calc branch for Feature &#39;X&#39;."}, {"start_index": 515946, "end_index": 516125, "text": "------------------------------------------------------------------------ At the water cooler, you get word that Sally made an interesting change to main.c on the trunk."}, {"start_index": 516495, "end_index": 516833, "text": "$ svn log ^/calc/trunk -r413 -v ------------------------------------------------------------------------ r413 | sally | 2013-02-21 01:57:51 -0500 (Thu, 21 Feb 2013) | 3 lines Changed paths: M /calc/trunk/src/main.c Fix issue #22 &#39;Passing a null value in the foo argument of bar() should be a tolerated, but causes a segfault&#39;."}, {"start_index": 537592, "end_index": 538056, "text": "We know the work on this feature was done on its own branch, which was reintegrated to /paint/trunk in revision 465: $ svn log -v -r465 ^/paint/trunk ------------------------------------------------------------------------ r465 | joe | 2013-02-25 14:05:12 -0500 (Mon, 25 Feb 2013) | 1 line Changed paths: M /paint/trunk A /paint/trunk/python (from /paint/branches/paint-python-wrapper/python:464) Reintegrate Paint Python wrapper."}, {"start_index": 538057, "end_index": 538296, "text": "------------------------------------------------------------------------ Because revision 465 was a reintegrate merge we know that mergeinfo was recorded describing the merge: $ svn diff ^/paint/trunk --depth empty -c465 Index: ."}, {"start_index": 542289, "end_index": 543530, "text": "For example, if you were to ask svn log about the history of your feature branch, it would show exactly every revision that ever affected the branch: $ cd my-calc-branch $ svn log -q ------------------------------------------------------------------------ r461 | user | 2013-02-25 05:57:48 -0500 (Mon, 25 Feb 2013) ------------------------------------------------------------------------ r379 | user | 2013-02-18 10:56:35 -0500 (Mon, 18 Feb 2013) ------------------------------------------------------------------------ r378 | user | 2013-02-18 09:48:28 -0500 (Mon, 18 Feb 2013) ------------------------------------------------------------------------ ------------------------------------------------------------------------ r8 | sally | 2013-01-17 16:55:36 -0500 (Thu, 17 Jan 2013) ------------------------------------------------------------------------ r7 | bill | 2013-01-17 16:49:36 -0500 (Thu, 17 Jan 2013) ------------------------------------------------------------------------ r3 | bill | 2013-01-17 09:07:04 -0500 (Thu, 17 Jan 2013) ------------------------------------------------------------------------ But is this really an accurate picture of all the changes that happened on the branch?"}, {"start_index": 543684, "end_index": 544303, "text": "If you look at one of these logs in detail, the multiple trunk changesets that comprised the branch change are nowhere to be seen: $ svn log ^/calc/branches/my-calc-branch -r352 -v ------------------------------------------------------------------------ r352 | user | 2013-02-16 09:35:18 -0500 (Sat, 16 Feb 2013) | 1 line Changed paths: M /calc/branches/my-calc-branch M /calc/branches/my-calc-branch/Makefile M /calc/branches/my-calc-branch/doc/INSTALL M /calc/branches/my-calc-branch/src/button.c M /calc/branches/my-calc-branch/src/real.c Sync latest trunk changes to my-calc-branch."}, {"start_index": 544304, "end_index": 544475, "text": "------------------------------------------------------------------------ We happen to know that this merge to the branch was nothing but a merge of trunk changes."}, {"start_index": 544689, "end_index": 545163, "text": "$ svn log ^/calc/branches/my-calc-branch -r352 -v -g ------------------------------------------------------------------------ r352 | user | 2013-02-16 09:35:18 -0500 (Sat, 16 Feb 2013) | 1 line Changed paths: M /calc/branches/my-calc-branch M /calc/branches/my-calc-branch/Makefile M /calc/branches/my-calc-branch/doc/INSTALL M /calc/branches/my-calc-branch/src/button.c M /calc/branches/my-calc-branch/src/real.c Sync latest trunk changes to my-calc-branch."}, {"start_index": 545164, "end_index": 545395, "text": "------------------------------------------------------------------------ r351 | sally | 2013-02-16 08:04:22 -0500 (Sat, 16 Feb 2013) | 2 lines Changed paths: M /calc/trunk/src/real.c Merged via: r352 Trunk work on calc project."}, {"start_index": 545396, "end_index": 545731, "text": "------------------------------------------------------------------------ ------------------------------------------------------------------------ r345 | sally | 2013-02-15 16:51:17 -0500 (Fri, 15 Feb 2013) | 2 lines Changed paths: M /calc/trunk/Makefile M /calc/trunk/src/integer.c Merged via: r352 Trunk work on calc project."}, {"start_index": 545732, "end_index": 545968, "text": "------------------------------------------------------------------------ r344 | sally | 2013-02-15 16:44:44 -0500 (Fri, 15 Feb 2013) | 1 line Changed paths: M /calc/trunk/src/integer.c Merged via: r352 Refactor the bazzle functions."}, {"start_index": 545969, "end_index": 546245, "text": "------------------------------------------------------------------------ By making the log operation use merge history, we see not just the revision we queried (r352), but also the other revisions that came along on the ride with it Sally&#39;s work on trunk."}, {"start_index": 552664, "end_index": 553034, "text": "Meanwhile, back on /calc/trunk , Sally has committed some improvements of her own to integer.c in r472: $ svn log -v -r472 ^/calc/trunk ------------------------------------------------------------------------ r472 | sally | 2013-02-26 07:05:18 -0500 (Tue, 26 Feb 2013) | 1 line Changed paths: M /calc/trunk/src/integer.c Trunk work on integer.c."}, {"start_index": 553035, "end_index": 553163, "text": "------------------------------------------------------------------------ Now you decide to merge your branch back to the trunk."}, {"start_index": 594612, "end_index": 594650, "text": "So let&#39;s create our vendor branch."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 754228, "end_index": 754296, "text": "So let&#39;s look now at the user end of these operations."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1112807, "end_index": 1113070, "text": "$ svn log -c 5 http://svn.red-bean.com/repos/test/readme.txt ------------------------------------------------------------------------ r5 | harry | 2008-05-29 07:26:12 -0600 (Thu, 29 May 2008) | 1 line Commit the results of &#39;double-space-after-period.sh&#39;."}, {"start_index": 1113072, "end_index": 1113499, "text": "------------------------------------------------------------------------ $ svn diff -c 5 http://svn.red-bean.com/repos/test/readme.txt Index: http://svn.red-bean.com/repos/test/readme.txt =================================================================== --- http://svn.red-bean.com/repos/test/readme.txt (revision 4) +++ http://svn.red-bean.com/repos/test/readme.txt (revision 5) @@ -1,5 +1,5 @@ This is a README file."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}, {"start_index": 1150359, "end_index": 1150667, "text": "Options Examples You can see the log messages for all the paths that changed in your working copy by running svn log from the top: $ svn log ------------------------------------------------------------------------ r20 | harry | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line Tweak."}, {"start_index": 1150668, "end_index": 1151063, "text": "------------------------------------------------------------------------ r17 | sally | 2003-01-16 23:21:19 -0600 (Thu, 16 Jan 2003) | 2 lines Examine all log messages for a particular file in your working copy: $ svn log foo.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Added defines."}, {"start_index": 1151064, "end_index": 1151488, "text": "------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines If you don&#39;t have a working copy handy, you can log a URL: $ svn log http://svn.red-bean.com/repos/test/foo.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Added defines."}, {"start_index": 1151489, "end_index": 1151965, "text": "------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines If you want several distinct paths underneath the same URL, you can use the URL [PATH...] syntax: $ svn log http://svn.red-bean.com/repos/test/ foo.c bar.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Added defines."}, {"start_index": 1151966, "end_index": 1152429, "text": "------------------------------------------------------------------------ r31 | harry | 2003-01-10 12:25:08 -0600 (Fri, 10 Jan 2003) | 1 line Added new file bar.c ------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines The --verbose ( -v ) option causes svn log to include information about the paths that were changed in each displayed revision."}, {"start_index": 1152571, "end_index": 1152815, "text": "$ svn log -v http://svn.red-bean.com/repos/test/ foo.c bar.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Changed paths: M /foo.c Added defines."}, {"start_index": 1152816, "end_index": 1153306, "text": "------------------------------------------------------------------------ r31 | harry | 2003-01-10 12:25:08 -0600 (Fri, 10 Jan 2003) | 1 line Changed paths: A /bar.c Added new file bar.c ------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines svn log uses just a handful of action codes, and they are similar to the ones the svn update command uses: A The item was added."}, {"start_index": 1154131, "end_index": 1156386, "text": "If you ran svn log on a range of two revisions, you would get this: $ svn log -r 14:15 ------------------------------------------------------------------------ r14 | ------------------------------------------------------------------------ r15 | ------------------------------------------------------------------------ However, if you wanted to gather two nonsequential log messages into a file, you might do something like this: $ svn log -r 14 &gt; mylog $ svn log -r 19 &gt;&gt; mylog $ svn log -r 27 &gt;&gt; mylog $ cat mylog ------------------------------------------------------------------------ r14 | ------------------------------------------------------------------------ ------------------------------------------------------------------------ r19 | ------------------------------------------------------------------------ ------------------------------------------------------------------------ r27 | ------------------------------------------------------------------------ You can avoid the clutter of the double dashed lines in your output by using the --incremental option: $ svn log --incremental -r 14 &gt; mylog $ svn log --incremental -r 19 &gt;&gt; mylog $ svn log --incremental -r 27 &gt;&gt; mylog $ cat mylog ------------------------------------------------------------------------ r14 | ------------------------------------------------------------------------ r19 | ------------------------------------------------------------------------ r27 | The --incremental option provides similar output control when using the --xml option: $ svn log --xml --incremental -r 1 sandwich.txt &lt;logentry revision=&quot;1&quot;&gt; &lt;author&gt;harry&lt;/author&gt; &lt;date&gt;2008-06-03T06:35:53.048870Z&lt;/date&gt; &lt;msg&gt;Initial Import.&lt;/msg&gt; &lt;/logentry&gt; Sometimes when you run svn log on a specific path and a specific revision, you see no log information output at all, as in the following: $ svn log -r 20 http://svn.red-bean.com/untouched.txt ------------------------------------------------------------------------ That just means the path wasn&#39;t modified in that revision."}, {"start_index": 1156388, "end_index": 1156786, "text": "To get log information for that revision, either run the log operation against the repository&#39;s root URL, or specify a path that you happen to know was changed in that revision: $ svn log -r 20 touched.txt ------------------------------------------------------------------------ r20 | sally | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line Made a change."}, {"start_index": 1156787, "end_index": 1157117, "text": "------------------------------------------------------------------------ Beginning with Subversion 1.7, users can take advantage of a special output mode which combines the information from svn log with what you would see when running svn diff on the same targets for each revision of the log."}, {"start_index": 1157222, "end_index": 1157413, "text": "$ svn log -r 20 touched.txt --diff ------------------------------------------------------------------------ r20 | sally | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line Made a change."}, {"start_index": 1157672, "end_index": 1157973, "text": "------------------------------------------------------------------------ $ As with svn diff , you may also make use of many of the various options which control the way the difference is generated, including --depth , --diff-cmd , and --extensions ( -x )."}, {"start_index": 1158921, "end_index": 1159177, "text": "For example: $ svn log --search sally --search harry https://svn.red-bean.com/repos/test ------------------------------------------------------------------------ r1701 | sally | 2011-10-12 22:35:30 -0600 (Wed, 12 Oct 2011) | 1 line Add a reminder."}, {"start_index": 1159178, "end_index": 1159354, "text": "------------------------------------------------------------------------ r1564 | harry | 2011-10-09 22:35:30 -0600 (Sun, 09 Oct 2011) | 1 line Merge r1560 to the 1.0.x branch."}, {"start_index": 1159355, "end_index": 1159574, "text": "------------------------------------------------------------------------ $ Using --search with --search-and options will show log messages that match the combined pattern from both options."}, {"start_index": 1159575, "end_index": 1159873, "text": "For example: $ svn log --verbose --search sally --search-and /foo/bar https://svn.red-bean.com/repos/test ------------------------------------------------------------------------ r1555 | sally | 2011-07-15 22:33:14 -0600 (Fri, 15 Jul 2011) | 1 line Changed paths: M /foo/bar/src.c Typofix."}, {"start_index": 1159874, "end_index": 1160091, "text": "------------------------------------------------------------------------ r1530 | sally | 2011-07-13 07:24:11 -0600 (Wed, 13 Jul 2011) | 1 line Changed paths: M /foo/bar M /foo/build Fix up some svn:ignore properties."}, {"start_index": 1160092, "end_index": 1160250, "text": "------------------------------------------------------------------------ $ --search and --search-and options does not actually perform a search."}, {"start_index": 1184335, "end_index": 1184432, "text": "The content of the repository doesn&#39;t change, but the repository&#39;s root URL does."}, {"start_index": 1196451, "end_index": 1196514, "text": "&#39;X&#39; Item is present because of an externals definition."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}, {"start_index": 1247505, "end_index": 1247534, "text": "--verbose ( -v ) Be verbose."}]}, {"group_id": 352, "duplicates": [{"start_index": 464246, "end_index": 464400, "text": "It&#39;s up to you to decide which changes are worth sharing; Subversion gives you the ability to selectively copy changes between branches."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 353, "duplicates": [{"start_index": 465123, "end_index": 465517, "text": "That is, you&#39;ll always need to use the detailed merge syntax to specify specific ranges of revisions to replicate (see later in this chapter), and take special care to keep track of what&#39;s already been merged and what hasn&#39;t. For this reason, we strongly recommend that you make sure your client and server are at least at version 1.5."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 754812, "end_index": 754870, "text": "See later in this chapter for more about this."}, {"start_index": 1176726, "end_index": 1176754, "text": "See later in this chapter."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 354, "duplicates": [{"start_index": 466799, "end_index": 466907, "text": "For our purposes, let&#39;s say that a changeset is just a collection of changes with a unique name."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 355, "duplicates": [{"start_index": 467292, "end_index": 467464, "text": "It&#39;s also the name of an implicit changeset: if you compare tree N with tree N -1, you can derive the exact patch that was committed."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 356, "duplicates": [{"start_index": 468073, "end_index": 468289, "text": "You can merge specific changesets from one branch to another by naming them in the merge arguments: passing -c 9238 to svn merge would merge changeset r9238 into your working copy."}, {"start_index": 515136, "end_index": 515182, "text": "changesets from one branch to another."}]}, {"group_id": 357, "duplicates": [{"start_index": 468290, "end_index": 468500, "text": "Keeping a Branch in Sync merging sync merges svn subcommands merge Continuing with our running example, let&#39;s suppose that a week has passed since you started working on your private branch."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 358, "duplicates": [{"start_index": 468695, "end_index": 468840, "text": "It&#39;s in your best interest to replicate those changes to your own branch, just to make sure they mesh well with your changes."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 359, "duplicates": [{"start_index": 469935, "end_index": 470479, "text": "Then simply run: $ pwd /home/user/my-calc-branch $ svn merge ^/calc/trunk --- Merging r341 through r351 into &#39;.&#39;: U doc/INSTALL U src/real.c U src/button.c U Makefile --- Recording mergeinfo for merge of r341 through r351 into &#39;.&#39;: U . $ properties svn:mergeinfo This basic syntax svn merge URL tells Subversion to merge all changes which have not been previously merged from the URL to the current working directory (which is typically the root of your working copy)."}, {"start_index": 480509, "end_index": 480859, "text": "$ svn merge ^/calc/trunk --- Merging r352 through r361 into &#39;.&#39;: U src/real.c U src/main.c --- Recording mergeinfo for merge of r352 through r361 into &#39;.&#39;: U . Subversion knows which trunk changes you previously replicated to your branch, so it carefully replicates only those changes you don&#39;t yet have."}]}, {"group_id": 360, "duplicates": [{"start_index": 470808, "end_index": 470921, "text": "We&#39;ll discuss both this property and these notifications later in this chapter, in ."}, {"start_index": 578661, "end_index": 578717, "text": "We&#39;ll discuss this more in the next section."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 361, "duplicates": [{"start_index": 471173, "end_index": 471413, "text": "Keeping a Branch in Sync Without Merge Tracking You may not always be able to use Subversion&#39;s merge tracking feature, perhaps because your server is running Subversion 1.4 or earlier or you must use an older client."}, {"start_index": 1021068, "end_index": 1021128, "text": "After all, Subversion uses Subversion&#39;s APIs, too."}]}, {"group_id": 362, "duplicates": [{"start_index": 475322, "end_index": 475395, "text": "=================================================================== --- ."}, {"start_index": 538297, "end_index": 538370, "text": "=================================================================== --- ."}, {"start_index": 539346, "end_index": 539419, "text": "=================================================================== --- ."}]}, {"group_id": 363, "duplicates": [{"start_index": 475421, "end_index": 475459, "text": "(working copy) Property changes on: ."}, {"start_index": 539445, "end_index": 539483, "text": "(working copy) Property changes on: ."}]}, {"group_id": 364, "duplicates": [{"start_index": 475748, "end_index": 475820, "text": "(We&#39;ll learn more about this metadata later in the chapter.)"}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 365, "duplicates": [{"start_index": 476420, "end_index": 476598, "text": "If things look good, however, you can submit these changes into the repository: $ svn commit -m &quot;Sync latest trunk changes to my-calc-branch.&quot; Sending ."}, {"start_index": 486384, "end_index": 486498, "text": "$ # build, test, ... $ svn commit -m &quot;Final merge of trunk changes to my-calc-branch.&quot; Sending ."}, {"start_index": 488047, "end_index": 488159, "text": "$ # build, test, verify, ... $ svn commit -m &quot;Merge my-calc-branch back into trunk!&quot; Sending ."}]}, {"group_id": 366, "duplicates": [{"start_index": 476599, "end_index": 476755, "text": "Sending Makefile Sending doc/INSTALL Sending src/button.c Sending src/real.c Transmitting file data .... Committed revision 352."}, {"start_index": 488160, "end_index": 488286, "text": "Sending Makefile Sending src/main.c Sending src/real.c Transmitting file data ... Committed revision 380."}, {"start_index": 740804, "end_index": 740856, "text": "Transmitting file data .... Committed revision 4065."}]}, {"group_id": 367, "duplicates": [{"start_index": 477651, "end_index": 477753, "text": "The file format used by patch is quite limited; it&#39;s able to tweak file contents only."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 368, "duplicates": [{"start_index": 478551, "end_index": 478770, "text": "Even more important, this command records the changes that have been duplicated to your branch so that Subversion is aware of exactly which changes exist in each location (see )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 369, "duplicates": [{"start_index": 479028, "end_index": 479156, "text": "You&#39;ve committed more changes to your branch, and your comrades have continued to improve the trunk as well."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 370, "duplicates": [{"start_index": 479325, "end_index": 479470, "text": "$ svn merge ^/calc/trunk svn: E195020: Cannot merge into mixed-revision working copy [352:357]; try up\\ dating first $ Well that was unexpected!"}, {"start_index": 505463, "end_index": 505489, "text": "$ svn merge ^/calc/trunk ."}]}, {"group_id": 371, "duplicates": [{"start_index": 479472, "end_index": 479638, "text": "After making changes to your branch over the past week you now find yourself with a working copy that contains a mixture of revisions (see )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 372, "duplicates": [{"start_index": 480341, "end_index": 480458, "text": "We don&#39;t want any needless conflicts, so we update the working copy and then reattempt the merge."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 373, "duplicates": [{"start_index": 480460, "end_index": 480507, "text": "$ svn up Updating &#39;.&#39;: At revision 361."}, {"start_index": 514183, "end_index": 514250, "text": "$ svn up Updating &#39;.&#39;: A real.c Updated to revision 402."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1209142, "end_index": 1209187, "text": "Updating &#39;ziptastic&#39;: At revision 43."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 374, "duplicates": [{"start_index": 480967, "end_index": 481173, "text": "Subtree Merges and Subtree Mergeinfo merging subtree merge mergeinfo subtree mergeinfo In most of the examples in this chapter the merge target is the root directory of a branch (see )."}, {"start_index": 558911, "end_index": 558954, "text": "Avoid subtree merges and subtree mergeinfo."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 375, "duplicates": [{"start_index": 481453, "end_index": 481530, "text": "There is nothing special about subtree merges or subtree mergeinfo."}, {"start_index": 558911, "end_index": 558954, "text": "Avoid subtree merges and subtree mergeinfo."}]}, {"group_id": 376, "duplicates": [{"start_index": 481963, "end_index": 483616, "text": "A brief example will help explain: # We need to merge r958 from trunk to branches/proj-X/doc/INSTALL, # but that revision also affects main.c, which we don&#39;t want to merge: $ svn log --verbose --quiet -r 958 ^/ ------------------------------------------------------------------------ r958 | bruce | 2011-10-20 13:28:11 -0400 (Thu, 20 Oct 2011) Changed paths: M /trunk/doc/INSTALL M /trunk/src/main.c ------------------------------------------------------------------------ # No problem, we&#39;ll do a subtree merge targeting the INSTALL file # directly, but first take a note of what mergeinfo exists on the # root of the branch: $ cd branches/proj-X $ svn propget svn:mergeinfo --recursive Properties on &#39;.&#39;: svn:mergeinfo /trunk:651-652 # Now we perform the subtree merge, note that merge source # and target both point to INSTALL: $ svn merge ^/trunk/doc/INSTALL doc/INSTALL -c 958 --- Merging r958 into &#39;doc/INSTALL&#39;: U doc/INSTALL --- Recording mergeinfo for merge of r958 into &#39;doc/INSTALL&#39;: G doc/INSTALL # Once the merge is complete there is now subtree mergeinfo on INSTALL: $ svn propget svn:mergeinfo --recursive Properties on &#39;.&#39;: svn:mergeinfo /trunk:651-652 Properties on &#39;doc/INSTALL&#39;: svn:mergeinfo /trunk/doc/INSTALL:651-652,958 # What if we then decide we do want all of r958? Easy, all we need do is # repeat the merge of that revision, but this time to the root of the # branch, Subversion notices the subtree mergeinfo on INSTALL and doesn&#39;t # try to merge any changes to it, only the changes to main.c are merged: $ svn merge ^/subversion/trunk ."}, {"start_index": 483617, "end_index": 483959, "text": "-c 958 --- Merging r958 into &#39;.&#39;: U src/main.c --- Recording mergeinfo for merge of r958 into &#39;.&#39;: U . --- Eliding mergeinfo from &#39;doc/INSTALL&#39;: U doc/INSTALL mergeinfo elision You might be wondering why INSTALL in the above example has mergeinfo for r651-652, when we only merged r958."}]}, {"group_id": 377, "duplicates": [{"start_index": 486117, "end_index": 486212, "text": ": $ svn up # (make sure the working copy is up to date) Updating &#39;.&#39;: At revision 378."}, {"start_index": 514183, "end_index": 514250, "text": "$ svn up Updating &#39;.&#39;: A real.c Updated to revision 402."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1209142, "end_index": 1209187, "text": "Updating &#39;ziptastic&#39;: At revision 43."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 378, "duplicates": [{"start_index": 505490, "end_index": 506036, "text": "-c-392 --- Reverse-merging r392 into &#39;.&#39;: U src/real.c U src/main.c U src/button.c U src/integer.c --- Recording mergeinfo for reverse merge of r392 into &#39;.&#39;: U . $ svn st M src/button.c M src/integer.c M src/main.c M src/real.c $ svn diff # verify that the change is removed $ svn commit -m &quot;Undoing erroneous change committed in r392.&quot; Sending src/button.c Sending src/integer.c Sending src/main.c Sending src/real.c Transmitting file data ...."}, {"start_index": 551985, "end_index": 552158, "text": "--- Recording mergeinfo for merge between repository URLs into &#39;.&#39;: U . $ svn ci -m &quot;Sync all changes from ^/calc/trunk through r469.&quot; Sending ."}]}, {"group_id": 379, "duplicates": [{"start_index": 486499, "end_index": 486549, "text": "Sending src/main.c Transmitting file data ."}, {"start_index": 740547, "end_index": 740571, "text": "Transmitting file data ."}, {"start_index": 740630, "end_index": 740654, "text": "Transmitting file data ."}, {"start_index": 740717, "end_index": 740741, "text": "Transmitting file data ."}]}, {"group_id": 380, "duplicates": [{"start_index": 486851, "end_index": 487024, "text": "You can get one by doing an svn checkout , dredging up an old trunk working copy from somewhere on your disk, or using svn switch (see )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 381, "duplicates": [{"start_index": 487348, "end_index": 487475, "text": "Your trunk working copy cannot have any local edits, switched paths, or contain a mixture of revisions (see )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 382, "duplicates": [{"start_index": 487616, "end_index": 488045, "text": "Once you have a clean working copy of the trunk, you&#39;re ready to merge your branch back into it: $ pwd /home/user/calc-trunk $ svn update Updating &#39;.&#39;: At revision 379. $ svn merge ^/calc/branches/my-calc-branch --- Merging differences between repository URLs into &#39;.&#39;: U src/real.c U src/main.c U Makefile --- Recording mergeinfo for merge between repository URLs into &#39;.&#39;: U ."}, {"start_index": 585358, "end_index": 585709, "text": "You can then run an automatic reintegrate merge from the branch back to the trunk: $ cd trunk-working-copy $ svn update Updating &#39;.&#39;: At revision 1910. $ svn merge ^/calc/branches/mybranch --- Merging differences between repository URLs into &#39;.&#39;: U real.c U integer.c A newdirectory A newdirectory/newfile U ."}]}, {"group_id": 383, "duplicates": [{"start_index": 489907, "end_index": 490300, "text": "Because of this narrow focus, in addition to the requirements previously mentioned (up-to-date working copy Automatic reintegrate merges are allowed if the target is a shallow checkout (see ) but any paths affected by the diff which are missing due to the sparse working copy will be skipped this is probably not what you intended!"}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 384, "duplicates": [{"start_index": 490464, "end_index": 490626, "text": "You&#39;ll get an error if you use any non-global options but these: --accept , --dry-run , --diff3-cmd , --extensions , or --quiet ."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 385, "duplicates": [{"start_index": 490876, "end_index": 490922, "text": "Isn&#39;t the history of that branch valuable?"}, {"start_index": 1115491, "end_index": 1115519, "text": "Don&#39;t bother reading it."}]}, {"group_id": 386, "duplicates": [{"start_index": 491387, "end_index": 491480, "text": "Your branch can even be resurrected at some point, should you desire (see )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 387, "duplicates": [{"start_index": 492447, "end_index": 492865, "text": "You can examine the mergeinfo property, just like any other versioned property: $ cd my-calc-branch $ svn pg svn:mergeinfo -v Properties on &#39;.&#39;: svn:mergeinfo /calc/trunk:341-378 While it is possible to modify svn:mergeinfo just as you might any other versioned property, we strongly discourage doing so unless you really know what you&#39;re doing."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 388, "duplicates": [{"start_index": 494352, "end_index": 494602, "text": "Unlike other merge notifications, these don&#39;t describe the application of a difference to a working copy (see ), but instead describe &quot;housekeeping&quot; changes made to keep track of what was merged."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 389, "duplicates": [{"start_index": 495125, "end_index": 496072, "text": "Returning to our earlier example, we use the subcommand to analyze the relationship between /calc/trunk and /calc/branches/my-calc-branch : $ cd my-calc-branch $ svn mergeinfo ^/calc/trunk youngest common ancestor | last full merge | | tip of branch | | | repository path 340 382 | | -------| |------------ calc/trunk \\ / \\ / --| |------------ calc/branches/my-calc-branch | | 379 382 The diagram shows that /calc/branches/my-calc-branch was copied from /calc/trunk@340 and that most recent automatic merge was the reintegrate merge we made from the branch to the trunk in r380. Notice that the diagram does not show the four automatic sync merges we made in revisions 352, 362, 372, and 379."}, {"start_index": 538057, "end_index": 538370, "text": "------------------------------------------------------------------------ Because revision 465 was a reintegrate merge we know that mergeinfo was recorded describing the merge: $ svn diff ^/paint/trunk --depth empty -c465 Index: . =================================================================== --- ."}]}, {"group_id": 390, "duplicates": [{"start_index": 500520, "end_index": 500745, "text": "For example: # The &#39;*&#39; decorator indicates non-inheritable mergeinfo $ svn propget svn:mergeinfo ^/branches/proj-X /trunk:651-652,758* # Revision 758 is non-inheritable, but still applies to the path it is # set on."}, {"start_index": 500746, "end_index": 500833, "text": "Here the &#39;*&#39; decorator signals that r758 is only partially # merged from trunk."}, {"start_index": 1199328, "end_index": 1199404, "text": "&#39;*&#39; A newer revision of the item exists on the server."}]}, {"group_id": 391, "duplicates": [{"start_index": 501372, "end_index": 501937, "text": "If you have more questions check out some of the references mentioned in Let&#39;s say we have a branch with both subtree and non-inheritable mergeinfo: $ svn pg svn:mergeinfo -vR # Non-inheritable mergeinfo Properties on &#39;.&#39;: svn:mergeinfo /calc/trunk:354,385-388* # Subtree mergeinfo Properties on &#39;Makefile&#39;: svn:mergeinfo /calc/trunk/Makefile:354,380 From the above mergeinfo we see that r385-388 has only been merged into the root of the branch, but not any of the root&#39;s children."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 392, "duplicates": [{"start_index": 502845, "end_index": 503265, "text": "Another way to get a more precise preview of a merge operation is to use the --dry-run option: $ svn merge ^/paint/trunk paint-feature-branch --dry-run --- Merging r290 through r383 into &#39;paint-feature-branch&#39;: U paint-feature-branch/src/palettes.c U paint-feature-branch/src/brushes.c U paint-feature-branch/Makefile $ svn status # nothing printed, working copy is still unchanged."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 393, "duplicates": [{"start_index": 503450, "end_index": 503611, "text": "It&#39;s useful for getting a high-level preview of the potential merge, for those times when running svn diff gives too much detail."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 394, "duplicates": [{"start_index": 504231, "end_index": 504473, "text": "Remember, running svn merge isn&#39;t an inherently risky thing (unless you&#39;ve made local modifications to your working copy but we already stressed that you shouldn&#39;t merge into such an environment)."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 395, "duplicates": [{"start_index": 504475, "end_index": 504555, "text": "If you don&#39;t like the results of the merge, simply run svn revert ."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 524562, "end_index": 524660, "text": "If you don&#39;t like the results, you can simply svn revert all of the changes."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 765255, "end_index": 765319, "text": "It&#39;s your data protect it as much as you&#39;d like."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 396, "duplicates": [{"start_index": 507734, "end_index": 507859, "text": "This isn&#39;t so easy, it turns out, because Subversion was deliberately designed to never lose information."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 397, "duplicates": [{"start_index": 509496, "end_index": 509693, "text": "The --verbose ( -v ) option shows a list of all changed items in each revision; all you need to do is find the revision in which you deleted the file or directory."}, {"start_index": 1247505, "end_index": 1247534, "text": "--verbose ( -v ) Be verbose."}]}, {"group_id": 398, "duplicates": [{"start_index": 510035, "end_index": 510303, "text": "$ cd calc/trunk $ svn log -v --limit 3 ------------------------------------------------------------------------ r401 | sally | 2013-02-19 23:15:44 -0500 (Tue, 19 Feb 2013) | 1 line Changed paths: M /calc/trunk/src/main.c Follow-up to r400: Fix typos in help text."}, {"start_index": 510304, "end_index": 510560, "text": "------------------------------------------------------------------------ r400 | bill | 2013-02-19 20:55:08 -0500 (Tue, 19 Feb 2013) | 4 lines Changed paths: M /calc/trunk/src/main.c D /calc/trunk/src/real.c * calc/trunk/src/main.c: Update help text."}, {"start_index": 510659, "end_index": 510977, "text": "------------------------------------------------------------------------ r399 | sally | 2013-02-19 20:05:14 -0500 (Tue, 19 Feb 2013) | 1 line Changed paths: M /calc/trunk/src/button.c M /calc/trunk/src/integer.c M /calc/trunk/src/main.c M /calc/trunk/src/real.c Undoing erroneous change committed in r392."}, {"start_index": 510978, "end_index": 511147, "text": "------------------------------------------------------------------------ In the example, we&#39;re assuming that you&#39;re looking for a deleted file real.c ."}, {"start_index": 515450, "end_index": 515945, "text": "For example, let&#39;s assume you&#39;ve created a new feature branch /calc/branches/my-calc-feature-branch copied from /calc/trunk : $ svn log ^/calc/branches/new-calc-feature-branch -v -r403 ------------------------------------------------------------------------ r403 | user | 2013-02-20 03:26:12 -0500 (Wed, 20 Feb 2013) | 1 line Changed paths: A /calc/branches/new-calc-feature-branch (from /calc/trunk:402) Create a new calc branch for Feature &#39;X&#39;."}, {"start_index": 515946, "end_index": 516125, "text": "------------------------------------------------------------------------ At the water cooler, you get word that Sally made an interesting change to main.c on the trunk."}, {"start_index": 516495, "end_index": 516833, "text": "$ svn log ^/calc/trunk -r413 -v ------------------------------------------------------------------------ r413 | sally | 2013-02-21 01:57:51 -0500 (Thu, 21 Feb 2013) | 3 lines Changed paths: M /calc/trunk/src/main.c Fix issue #22 &#39;Passing a null value in the foo argument of bar() should be a tolerated, but causes a segfault&#39;."}, {"start_index": 537592, "end_index": 538056, "text": "We know the work on this feature was done on its own branch, which was reintegrated to /paint/trunk in revision 465: $ svn log -v -r465 ^/paint/trunk ------------------------------------------------------------------------ r465 | joe | 2013-02-25 14:05:12 -0500 (Mon, 25 Feb 2013) | 1 line Changed paths: M /paint/trunk A /paint/trunk/python (from /paint/branches/paint-python-wrapper/python:464) Reintegrate Paint Python wrapper."}, {"start_index": 538057, "end_index": 538296, "text": "------------------------------------------------------------------------ Because revision 465 was a reintegrate merge we know that mergeinfo was recorded describing the merge: $ svn diff ^/paint/trunk --depth empty -c465 Index: ."}, {"start_index": 542289, "end_index": 543530, "text": "For example, if you were to ask svn log about the history of your feature branch, it would show exactly every revision that ever affected the branch: $ cd my-calc-branch $ svn log -q ------------------------------------------------------------------------ r461 | user | 2013-02-25 05:57:48 -0500 (Mon, 25 Feb 2013) ------------------------------------------------------------------------ r379 | user | 2013-02-18 10:56:35 -0500 (Mon, 18 Feb 2013) ------------------------------------------------------------------------ r378 | user | 2013-02-18 09:48:28 -0500 (Mon, 18 Feb 2013) ------------------------------------------------------------------------ ------------------------------------------------------------------------ r8 | sally | 2013-01-17 16:55:36 -0500 (Thu, 17 Jan 2013) ------------------------------------------------------------------------ r7 | bill | 2013-01-17 16:49:36 -0500 (Thu, 17 Jan 2013) ------------------------------------------------------------------------ r3 | bill | 2013-01-17 09:07:04 -0500 (Thu, 17 Jan 2013) ------------------------------------------------------------------------ But is this really an accurate picture of all the changes that happened on the branch?"}, {"start_index": 543684, "end_index": 544303, "text": "If you look at one of these logs in detail, the multiple trunk changesets that comprised the branch change are nowhere to be seen: $ svn log ^/calc/branches/my-calc-branch -r352 -v ------------------------------------------------------------------------ r352 | user | 2013-02-16 09:35:18 -0500 (Sat, 16 Feb 2013) | 1 line Changed paths: M /calc/branches/my-calc-branch M /calc/branches/my-calc-branch/Makefile M /calc/branches/my-calc-branch/doc/INSTALL M /calc/branches/my-calc-branch/src/button.c M /calc/branches/my-calc-branch/src/real.c Sync latest trunk changes to my-calc-branch."}, {"start_index": 544304, "end_index": 544475, "text": "------------------------------------------------------------------------ We happen to know that this merge to the branch was nothing but a merge of trunk changes."}, {"start_index": 544689, "end_index": 545163, "text": "$ svn log ^/calc/branches/my-calc-branch -r352 -v -g ------------------------------------------------------------------------ r352 | user | 2013-02-16 09:35:18 -0500 (Sat, 16 Feb 2013) | 1 line Changed paths: M /calc/branches/my-calc-branch M /calc/branches/my-calc-branch/Makefile M /calc/branches/my-calc-branch/doc/INSTALL M /calc/branches/my-calc-branch/src/button.c M /calc/branches/my-calc-branch/src/real.c Sync latest trunk changes to my-calc-branch."}, {"start_index": 545164, "end_index": 545395, "text": "------------------------------------------------------------------------ r351 | sally | 2013-02-16 08:04:22 -0500 (Sat, 16 Feb 2013) | 2 lines Changed paths: M /calc/trunk/src/real.c Merged via: r352 Trunk work on calc project."}, {"start_index": 545396, "end_index": 545731, "text": "------------------------------------------------------------------------ ------------------------------------------------------------------------ r345 | sally | 2013-02-15 16:51:17 -0500 (Fri, 15 Feb 2013) | 2 lines Changed paths: M /calc/trunk/Makefile M /calc/trunk/src/integer.c Merged via: r352 Trunk work on calc project."}, {"start_index": 545732, "end_index": 545968, "text": "------------------------------------------------------------------------ r344 | sally | 2013-02-15 16:44:44 -0500 (Fri, 15 Feb 2013) | 1 line Changed paths: M /calc/trunk/src/integer.c Merged via: r352 Refactor the bazzle functions."}, {"start_index": 545969, "end_index": 546245, "text": "------------------------------------------------------------------------ By making the log operation use merge history, we see not just the revision we queried (r352), but also the other revisions that came along on the ride with it Sally&#39;s work on trunk."}, {"start_index": 552664, "end_index": 553034, "text": "Meanwhile, back on /calc/trunk , Sally has committed some improvements of her own to integer.c in r472: $ svn log -v -r472 ^/calc/trunk ------------------------------------------------------------------------ r472 | sally | 2013-02-26 07:05:18 -0500 (Tue, 26 Feb 2013) | 1 line Changed paths: M /calc/trunk/src/integer.c Trunk work on integer.c."}, {"start_index": 553035, "end_index": 553163, "text": "------------------------------------------------------------------------ Now you decide to merge your branch back to the trunk."}, {"start_index": 594612, "end_index": 594650, "text": "So let&#39;s create our vendor branch."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 754228, "end_index": 754296, "text": "So let&#39;s look now at the user end of these operations."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1112807, "end_index": 1113070, "text": "$ svn log -c 5 http://svn.red-bean.com/repos/test/readme.txt ------------------------------------------------------------------------ r5 | harry | 2008-05-29 07:26:12 -0600 (Thu, 29 May 2008) | 1 line Commit the results of &#39;double-space-after-period.sh&#39;."}, {"start_index": 1113072, "end_index": 1113499, "text": "------------------------------------------------------------------------ $ svn diff -c 5 http://svn.red-bean.com/repos/test/readme.txt Index: http://svn.red-bean.com/repos/test/readme.txt =================================================================== --- http://svn.red-bean.com/repos/test/readme.txt (revision 4) +++ http://svn.red-bean.com/repos/test/readme.txt (revision 5) @@ -1,5 +1,5 @@ This is a README file."}, {"start_index": 1150359, "end_index": 1150667, "text": "Options Examples You can see the log messages for all the paths that changed in your working copy by running svn log from the top: $ svn log ------------------------------------------------------------------------ r20 | harry | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line Tweak."}, {"start_index": 1150668, "end_index": 1151063, "text": "------------------------------------------------------------------------ r17 | sally | 2003-01-16 23:21:19 -0600 (Thu, 16 Jan 2003) | 2 lines Examine all log messages for a particular file in your working copy: $ svn log foo.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Added defines."}, {"start_index": 1151064, "end_index": 1151488, "text": "------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines If you don&#39;t have a working copy handy, you can log a URL: $ svn log http://svn.red-bean.com/repos/test/foo.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Added defines."}, {"start_index": 1151489, "end_index": 1151965, "text": "------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines If you want several distinct paths underneath the same URL, you can use the URL [PATH...] syntax: $ svn log http://svn.red-bean.com/repos/test/ foo.c bar.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Added defines."}, {"start_index": 1151966, "end_index": 1152429, "text": "------------------------------------------------------------------------ r31 | harry | 2003-01-10 12:25:08 -0600 (Fri, 10 Jan 2003) | 1 line Added new file bar.c ------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines The --verbose ( -v ) option causes svn log to include information about the paths that were changed in each displayed revision."}, {"start_index": 1152571, "end_index": 1152815, "text": "$ svn log -v http://svn.red-bean.com/repos/test/ foo.c bar.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Changed paths: M /foo.c Added defines."}, {"start_index": 1152816, "end_index": 1153306, "text": "------------------------------------------------------------------------ r31 | harry | 2003-01-10 12:25:08 -0600 (Fri, 10 Jan 2003) | 1 line Changed paths: A /bar.c Added new file bar.c ------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines svn log uses just a handful of action codes, and they are similar to the ones the svn update command uses: A The item was added."}, {"start_index": 1154131, "end_index": 1156386, "text": "If you ran svn log on a range of two revisions, you would get this: $ svn log -r 14:15 ------------------------------------------------------------------------ r14 | ------------------------------------------------------------------------ r15 | ------------------------------------------------------------------------ However, if you wanted to gather two nonsequential log messages into a file, you might do something like this: $ svn log -r 14 &gt; mylog $ svn log -r 19 &gt;&gt; mylog $ svn log -r 27 &gt;&gt; mylog $ cat mylog ------------------------------------------------------------------------ r14 | ------------------------------------------------------------------------ ------------------------------------------------------------------------ r19 | ------------------------------------------------------------------------ ------------------------------------------------------------------------ r27 | ------------------------------------------------------------------------ You can avoid the clutter of the double dashed lines in your output by using the --incremental option: $ svn log --incremental -r 14 &gt; mylog $ svn log --incremental -r 19 &gt;&gt; mylog $ svn log --incremental -r 27 &gt;&gt; mylog $ cat mylog ------------------------------------------------------------------------ r14 | ------------------------------------------------------------------------ r19 | ------------------------------------------------------------------------ r27 | The --incremental option provides similar output control when using the --xml option: $ svn log --xml --incremental -r 1 sandwich.txt &lt;logentry revision=&quot;1&quot;&gt; &lt;author&gt;harry&lt;/author&gt; &lt;date&gt;2008-06-03T06:35:53.048870Z&lt;/date&gt; &lt;msg&gt;Initial Import.&lt;/msg&gt; &lt;/logentry&gt; Sometimes when you run svn log on a specific path and a specific revision, you see no log information output at all, as in the following: $ svn log -r 20 http://svn.red-bean.com/untouched.txt ------------------------------------------------------------------------ That just means the path wasn&#39;t modified in that revision."}, {"start_index": 1156388, "end_index": 1156786, "text": "To get log information for that revision, either run the log operation against the repository&#39;s root URL, or specify a path that you happen to know was changed in that revision: $ svn log -r 20 touched.txt ------------------------------------------------------------------------ r20 | sally | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line Made a change."}, {"start_index": 1156787, "end_index": 1157117, "text": "------------------------------------------------------------------------ Beginning with Subversion 1.7, users can take advantage of a special output mode which combines the information from svn log with what you would see when running svn diff on the same targets for each revision of the log."}, {"start_index": 1157222, "end_index": 1157413, "text": "$ svn log -r 20 touched.txt --diff ------------------------------------------------------------------------ r20 | sally | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line Made a change."}, {"start_index": 1157672, "end_index": 1157973, "text": "------------------------------------------------------------------------ $ As with svn diff , you may also make use of many of the various options which control the way the difference is generated, including --depth , --diff-cmd , and --extensions ( -x )."}, {"start_index": 1158921, "end_index": 1159177, "text": "For example: $ svn log --search sally --search harry https://svn.red-bean.com/repos/test ------------------------------------------------------------------------ r1701 | sally | 2011-10-12 22:35:30 -0600 (Wed, 12 Oct 2011) | 1 line Add a reminder."}, {"start_index": 1159178, "end_index": 1159354, "text": "------------------------------------------------------------------------ r1564 | harry | 2011-10-09 22:35:30 -0600 (Sun, 09 Oct 2011) | 1 line Merge r1560 to the 1.0.x branch."}, {"start_index": 1159355, "end_index": 1159574, "text": "------------------------------------------------------------------------ $ Using --search with --search-and options will show log messages that match the combined pattern from both options."}, {"start_index": 1159575, "end_index": 1159873, "text": "For example: $ svn log --verbose --search sally --search-and /foo/bar https://svn.red-bean.com/repos/test ------------------------------------------------------------------------ r1555 | sally | 2011-07-15 22:33:14 -0600 (Fri, 15 Jul 2011) | 1 line Changed paths: M /foo/bar/src.c Typofix."}, {"start_index": 1159874, "end_index": 1160091, "text": "------------------------------------------------------------------------ r1530 | sally | 2011-07-13 07:24:11 -0600 (Wed, 13 Jul 2011) | 1 line Changed paths: M /foo/bar M /foo/build Fix up some svn:ignore properties."}, {"start_index": 1160092, "end_index": 1160250, "text": "------------------------------------------------------------------------ $ --search and --search-and options does not actually perform a search."}, {"start_index": 1184335, "end_index": 1184432, "text": "The content of the repository doesn&#39;t change, but the repository&#39;s root URL does."}, {"start_index": 1196451, "end_index": 1196514, "text": "&#39;X&#39; Item is present because of an externals definition."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}, {"start_index": 1247505, "end_index": 1247534, "text": "--verbose ( -v ) Be verbose."}]}, {"group_id": 399, "duplicates": [{"start_index": 513262, "end_index": 513393, "text": "In other words, this new real.c isn&#39;t really new; it&#39;s a direct descendant of the original, deleted file."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 400, "duplicates": [{"start_index": 514183, "end_index": 514250, "text": "$ svn up Updating &#39;.&#39;: A real.c Updated to revision 402."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 401, "duplicates": [{"start_index": 514483, "end_index": 514591, "text": "To do this, you&#39;re going to have to start passing more complicated arguments to svn merge ."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 402, "duplicates": [{"start_index": 516834, "end_index": 517444, "text": "------------------------------------------------------------------------ $ svn diff ^/calc/trunk -c413 Index: src/main.c =================================================================== --- src/main.c (revision 412) +++ src/main.c (revision 413) @@ -34,6 +34,7 @@ # Details of the fix Just as you used svn diff in the prior example to examine revision 413, you can pass the same option to svn merge : $ cd new-calc-feature-branch $ svn merge ^/calc/trunk -c413 --- Merging r413 into &#39;.&#39;: U src/main.c --- Recording mergeinfo for merge of r413 into &#39;.&#39;: U ."}, {"start_index": 533695, "end_index": 533882, "text": "$ svn st $ svn merge ^/paint/trunk -r289:291 --- Merging r290 through r291 into &#39;.&#39;: C Makefile --- Recording mergeinfo for merge of r290 through r291 into &#39;.&#39;: U ."}, {"start_index": 538057, "end_index": 538296, "text": "------------------------------------------------------------------------ Because revision 465 was a reintegrate merge we know that mergeinfo was recorded describing the merge: $ svn diff ^/paint/trunk --depth empty -c465 Index: ."}, {"start_index": 538297, "end_index": 538370, "text": "=================================================================== --- ."}, {"start_index": 539244, "end_index": 539310, "text": "--- Recording mergeinfo for merge of r465 into &#39;.&#39;: G ."}, {"start_index": 539346, "end_index": 539419, "text": "=================================================================== --- ."}, {"start_index": 539784, "end_index": 539976, "text": "Now any subsequent attempts to merge the feature to /paint/trunk are inoperative: $ svn merge ^/paint/trunk -c465 --- Recording mergeinfo for merge of r465 into &#39;.&#39;: U ."}, {"start_index": 540001, "end_index": 540140, "text": "$ svn merge ^/paint/branches/paint-python-wrapper -r462:464 --- Recording mergeinfo for merge of r463 through r464 into &#39;.&#39;: U ."}, {"start_index": 540773, "end_index": 540897, "text": "$ svn merge ^/paint/trunk -c465 --ignore-ancestry --- Merging r465 into &#39;.&#39;: A python A python/paint.py G ."}, {"start_index": 542289, "end_index": 543530, "text": "For example, if you were to ask svn log about the history of your feature branch, it would show exactly every revision that ever affected the branch: $ cd my-calc-branch $ svn log -q ------------------------------------------------------------------------ r461 | user | 2013-02-25 05:57:48 -0500 (Mon, 25 Feb 2013) ------------------------------------------------------------------------ r379 | user | 2013-02-18 10:56:35 -0500 (Mon, 18 Feb 2013) ------------------------------------------------------------------------ r378 | user | 2013-02-18 09:48:28 -0500 (Mon, 18 Feb 2013) ------------------------------------------------------------------------ ------------------------------------------------------------------------ r8 | sally | 2013-01-17 16:55:36 -0500 (Thu, 17 Jan 2013) ------------------------------------------------------------------------ r7 | bill | 2013-01-17 16:49:36 -0500 (Thu, 17 Jan 2013) ------------------------------------------------------------------------ r3 | bill | 2013-01-17 09:07:04 -0500 (Thu, 17 Jan 2013) ------------------------------------------------------------------------ But is this really an accurate picture of all the changes that happened on the branch?"}, {"start_index": 544304, "end_index": 544475, "text": "------------------------------------------------------------------------ We happen to know that this merge to the branch was nothing but a merge of trunk changes."}, {"start_index": 545164, "end_index": 545395, "text": "------------------------------------------------------------------------ r351 | sally | 2013-02-16 08:04:22 -0500 (Sat, 16 Feb 2013) | 2 lines Changed paths: M /calc/trunk/src/real.c Merged via: r352 Trunk work on calc project."}, {"start_index": 545396, "end_index": 545731, "text": "------------------------------------------------------------------------ ------------------------------------------------------------------------ r345 | sally | 2013-02-15 16:51:17 -0500 (Fri, 15 Feb 2013) | 2 lines Changed paths: M /calc/trunk/Makefile M /calc/trunk/src/integer.c Merged via: r352 Trunk work on calc project."}, {"start_index": 545732, "end_index": 545968, "text": "------------------------------------------------------------------------ r344 | sally | 2013-02-15 16:44:44 -0500 (Fri, 15 Feb 2013) | 1 line Changed paths: M /calc/trunk/src/integer.c Merged via: r352 Refactor the bazzle functions."}, {"start_index": 545969, "end_index": 546245, "text": "------------------------------------------------------------------------ By making the log operation use merge history, we see not just the revision we queried (r352), but also the other revisions that came along on the ride with it Sally&#39;s work on trunk."}, {"start_index": 551985, "end_index": 552067, "text": "--- Recording mergeinfo for merge between repository URLs into &#39;.&#39;: U ."}, {"start_index": 552664, "end_index": 553034, "text": "Meanwhile, back on /calc/trunk , Sally has committed some improvements of her own to integer.c in r472: $ svn log -v -r472 ^/calc/trunk ------------------------------------------------------------------------ r472 | sally | 2013-02-26 07:05:18 -0500 (Tue, 26 Feb 2013) | 1 line Changed paths: M /calc/trunk/src/integer.c Trunk work on integer.c."}, {"start_index": 553035, "end_index": 553163, "text": "------------------------------------------------------------------------ Now you decide to merge your branch back to the trunk."}, {"start_index": 553263, "end_index": 553506, "text": "$ svn merge ^/calc/branches/my-calc-branch --- Merging differences between repository URLs into &#39;.&#39;: C src/integer.c U src/real.c A src/whole.c --- Recording mergeinfo for merge between repository URLs into &#39;.&#39;: U ."}, {"start_index": 585529, "end_index": 585709, "text": "$ svn merge ^/calc/branches/mybranch --- Merging differences between repository URLs into &#39;.&#39;: U real.c U integer.c A newdirectory A newdirectory/newfile U ."}, {"start_index": 1112807, "end_index": 1113070, "text": "$ svn log -c 5 http://svn.red-bean.com/repos/test/readme.txt ------------------------------------------------------------------------ r5 | harry | 2008-05-29 07:26:12 -0600 (Thu, 29 May 2008) | 1 line Commit the results of &#39;double-space-after-period.sh&#39;."}, {"start_index": 1113072, "end_index": 1113499, "text": "------------------------------------------------------------------------ $ svn diff -c 5 http://svn.red-bean.com/repos/test/readme.txt Index: http://svn.red-bean.com/repos/test/readme.txt =================================================================== --- http://svn.red-bean.com/repos/test/readme.txt (revision 4) +++ http://svn.red-bean.com/repos/test/readme.txt (revision 5) @@ -1,5 +1,5 @@ This is a README file."}, {"start_index": 1150359, "end_index": 1150667, "text": "Options Examples You can see the log messages for all the paths that changed in your working copy by running svn log from the top: $ svn log ------------------------------------------------------------------------ r20 | harry | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line Tweak."}, {"start_index": 1150668, "end_index": 1151063, "text": "------------------------------------------------------------------------ r17 | sally | 2003-01-16 23:21:19 -0600 (Thu, 16 Jan 2003) | 2 lines Examine all log messages for a particular file in your working copy: $ svn log foo.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Added defines."}, {"start_index": 1151064, "end_index": 1151488, "text": "------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines If you don&#39;t have a working copy handy, you can log a URL: $ svn log http://svn.red-bean.com/repos/test/foo.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Added defines."}, {"start_index": 1151489, "end_index": 1151965, "text": "------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines If you want several distinct paths underneath the same URL, you can use the URL [PATH...] syntax: $ svn log http://svn.red-bean.com/repos/test/ foo.c bar.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Added defines."}, {"start_index": 1151966, "end_index": 1152429, "text": "------------------------------------------------------------------------ r31 | harry | 2003-01-10 12:25:08 -0600 (Fri, 10 Jan 2003) | 1 line Added new file bar.c ------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines The --verbose ( -v ) option causes svn log to include information about the paths that were changed in each displayed revision."}, {"start_index": 1152571, "end_index": 1152815, "text": "$ svn log -v http://svn.red-bean.com/repos/test/ foo.c bar.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Changed paths: M /foo.c Added defines."}, {"start_index": 1152816, "end_index": 1153306, "text": "------------------------------------------------------------------------ r31 | harry | 2003-01-10 12:25:08 -0600 (Fri, 10 Jan 2003) | 1 line Changed paths: A /bar.c Added new file bar.c ------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines svn log uses just a handful of action codes, and they are similar to the ones the svn update command uses: A The item was added."}, {"start_index": 1154131, "end_index": 1156386, "text": "If you ran svn log on a range of two revisions, you would get this: $ svn log -r 14:15 ------------------------------------------------------------------------ r14 | ------------------------------------------------------------------------ r15 | ------------------------------------------------------------------------ However, if you wanted to gather two nonsequential log messages into a file, you might do something like this: $ svn log -r 14 &gt; mylog $ svn log -r 19 &gt;&gt; mylog $ svn log -r 27 &gt;&gt; mylog $ cat mylog ------------------------------------------------------------------------ r14 | ------------------------------------------------------------------------ ------------------------------------------------------------------------ r19 | ------------------------------------------------------------------------ ------------------------------------------------------------------------ r27 | ------------------------------------------------------------------------ You can avoid the clutter of the double dashed lines in your output by using the --incremental option: $ svn log --incremental -r 14 &gt; mylog $ svn log --incremental -r 19 &gt;&gt; mylog $ svn log --incremental -r 27 &gt;&gt; mylog $ cat mylog ------------------------------------------------------------------------ r14 | ------------------------------------------------------------------------ r19 | ------------------------------------------------------------------------ r27 | The --incremental option provides similar output control when using the --xml option: $ svn log --xml --incremental -r 1 sandwich.txt &lt;logentry revision=&quot;1&quot;&gt; &lt;author&gt;harry&lt;/author&gt; &lt;date&gt;2008-06-03T06:35:53.048870Z&lt;/date&gt; &lt;msg&gt;Initial Import.&lt;/msg&gt; &lt;/logentry&gt; Sometimes when you run svn log on a specific path and a specific revision, you see no log information output at all, as in the following: $ svn log -r 20 http://svn.red-bean.com/untouched.txt ------------------------------------------------------------------------ That just means the path wasn&#39;t modified in that revision."}, {"start_index": 1156388, "end_index": 1156786, "text": "To get log information for that revision, either run the log operation against the repository&#39;s root URL, or specify a path that you happen to know was changed in that revision: $ svn log -r 20 touched.txt ------------------------------------------------------------------------ r20 | sally | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line Made a change."}, {"start_index": 1156787, "end_index": 1157117, "text": "------------------------------------------------------------------------ Beginning with Subversion 1.7, users can take advantage of a special output mode which combines the information from svn log with what you would see when running svn diff on the same targets for each revision of the log."}, {"start_index": 1157222, "end_index": 1157413, "text": "$ svn log -r 20 touched.txt --diff ------------------------------------------------------------------------ r20 | sally | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line Made a change."}, {"start_index": 1157672, "end_index": 1157973, "text": "------------------------------------------------------------------------ $ As with svn diff , you may also make use of many of the various options which control the way the difference is generated, including --depth , --diff-cmd , and --extensions ( -x )."}, {"start_index": 1158921, "end_index": 1159177, "text": "For example: $ svn log --search sally --search harry https://svn.red-bean.com/repos/test ------------------------------------------------------------------------ r1701 | sally | 2011-10-12 22:35:30 -0600 (Wed, 12 Oct 2011) | 1 line Add a reminder."}, {"start_index": 1159178, "end_index": 1159354, "text": "------------------------------------------------------------------------ r1564 | harry | 2011-10-09 22:35:30 -0600 (Sun, 09 Oct 2011) | 1 line Merge r1560 to the 1.0.x branch."}, {"start_index": 1159355, "end_index": 1159574, "text": "------------------------------------------------------------------------ $ Using --search with --search-and options will show log messages that match the combined pattern from both options."}, {"start_index": 1159575, "end_index": 1159873, "text": "For example: $ svn log --verbose --search sally --search-and /foo/bar https://svn.red-bean.com/repos/test ------------------------------------------------------------------------ r1555 | sally | 2011-07-15 22:33:14 -0600 (Fri, 15 Jul 2011) | 1 line Changed paths: M /foo/bar/src.c Typofix."}, {"start_index": 1159874, "end_index": 1160091, "text": "------------------------------------------------------------------------ r1530 | sally | 2011-07-13 07:24:11 -0600 (Wed, 13 Jul 2011) | 1 line Changed paths: M /foo/bar M /foo/build Fix up some svn:ignore properties."}, {"start_index": 1160092, "end_index": 1160250, "text": "------------------------------------------------------------------------ $ --search and --search-and options does not actually perform a search."}, {"start_index": 1184335, "end_index": 1184432, "text": "The content of the repository doesn&#39;t change, but the repository&#39;s root URL does."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}, {"start_index": 1247505, "end_index": 1247534, "text": "--verbose ( -v ) Be verbose."}]}, {"group_id": 403, "duplicates": [{"start_index": 518294, "end_index": 518819, "text": "$ svn pg svn:mergeinfo -v Properties on &#39;.&#39;: svn:mergeinfo /calc/branches/my-calc-branch:341-379 /calc/trunk:413 Notice too that the mergeinfo doesn&#39;t list r413 as &quot;eligible&quot; to merge, because it&#39;s already been merged: $ svn mergeinfo ^/calc/trunk --show-revs eligible r404 r405 r406 r407 r409 r410 r411 r412 r414 r415 r416 r455 r456 r457 The preceding means that when the time finally comes to do an automatic sync merge, Subversion breaks the merge into two parts."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 404, "duplicates": [{"start_index": 518984, "end_index": 519417, "text": "Because we already cherrypicked r413, that change is skipped: $ svn merge ^/calc/trunk --- Merging r403 through r412 into &#39;.&#39;: U doc/INSTALL U src/main.c U src/button.c U src/integer.c U Makefile U README --- Merging r414 through r458 into &#39;.&#39;: G doc/INSTALL G src/main.c G src/integer.c G Makefile --- Recording mergeinfo for merge of r403 through r458 into &#39;.&#39;: U ."}, {"start_index": 533695, "end_index": 533882, "text": "$ svn st $ svn merge ^/paint/trunk -r289:291 --- Merging r290 through r291 into &#39;.&#39;: C Makefile --- Recording mergeinfo for merge of r290 through r291 into &#39;.&#39;: U ."}, {"start_index": 539244, "end_index": 539310, "text": "--- Recording mergeinfo for merge of r465 into &#39;.&#39;: G ."}, {"start_index": 539784, "end_index": 539976, "text": "Now any subsequent attempts to merge the feature to /paint/trunk are inoperative: $ svn merge ^/paint/trunk -c465 --- Recording mergeinfo for merge of r465 into &#39;.&#39;: U ."}, {"start_index": 540001, "end_index": 540140, "text": "$ svn merge ^/paint/branches/paint-python-wrapper -r462:464 --- Recording mergeinfo for merge of r463 through r464 into &#39;.&#39;: U ."}, {"start_index": 540773, "end_index": 540897, "text": "$ svn merge ^/paint/trunk -c465 --ignore-ancestry --- Merging r465 into &#39;.&#39;: A python A python/paint.py G ."}, {"start_index": 551985, "end_index": 552067, "text": "--- Recording mergeinfo for merge between repository URLs into &#39;.&#39;: U ."}, {"start_index": 553263, "end_index": 553506, "text": "$ svn merge ^/calc/branches/my-calc-branch --- Merging differences between repository URLs into &#39;.&#39;: C src/integer.c U src/real.c A src/whole.c --- Recording mergeinfo for merge between repository URLs into &#39;.&#39;: U ."}, {"start_index": 585529, "end_index": 585709, "text": "$ svn merge ^/calc/branches/mybranch --- Merging differences between repository URLs into &#39;.&#39;: U real.c U integer.c A newdirectory A newdirectory/newfile U ."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 405, "duplicates": [{"start_index": 521807, "end_index": 521948, "text": "Merge Syntax: Full Disclosure You&#39;ve now seen some examples of the svn merge command, and you&#39;re about to see several more."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 406, "duplicates": [{"start_index": 521957, "end_index": 522050, "text": "If you&#39;re feeling confused about exactly how merging works, you&#39;re not alone."}, {"start_index": 522647, "end_index": 522671, "text": "That&#39;s not the case."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 407, "duplicates": [{"start_index": 522896, "end_index": 523046, "text": "If you&#39;re using svn merge to do basic copying of changes between branches, an automatic merge will generally do the right thing."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}]}, {"group_id": 408, "duplicates": [{"start_index": 528599, "end_index": 528739, "text": "Implicit mergeinfo, or natural history , is simply a path&#39;s own history (see ) interpreted as mergeinfo."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 409, "duplicates": [{"start_index": 528906, "end_index": 529084, "text": "Let&#39;s say you created ^/trunk in revision 100 and then later, in revision 201, created ^/branches/feature-branch as a copy of ^/trunk@200 ."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 410, "duplicates": [{"start_index": 531880, "end_index": 532205, "text": "A common sign that you merged the wrong delta is unexpected tree conflicts: $ svn merge ^/calc/trunk -r104:115 --- Merging r105 through r115 into &#39;.&#39;: C doc C src/button.c C src/integer.c C src/real.c C src/main.c --- Recording mergeinfo for merge of r105 through r115 into &#39;.&#39;: U ."}, {"start_index": 533695, "end_index": 533882, "text": "$ svn st $ svn merge ^/paint/trunk -r289:291 --- Merging r290 through r291 into &#39;.&#39;: C Makefile --- Recording mergeinfo for merge of r290 through r291 into &#39;.&#39;: U ."}, {"start_index": 539244, "end_index": 539310, "text": "--- Recording mergeinfo for merge of r465 into &#39;.&#39;: G ."}, {"start_index": 539784, "end_index": 539976, "text": "Now any subsequent attempts to merge the feature to /paint/trunk are inoperative: $ svn merge ^/paint/trunk -c465 --- Recording mergeinfo for merge of r465 into &#39;.&#39;: U ."}, {"start_index": 540001, "end_index": 540140, "text": "$ svn merge ^/paint/branches/paint-python-wrapper -r462:464 --- Recording mergeinfo for merge of r463 through r464 into &#39;.&#39;: U ."}, {"start_index": 540773, "end_index": 540897, "text": "$ svn merge ^/paint/trunk -c465 --ignore-ancestry --- Merging r465 into &#39;.&#39;: A python A python/paint.py G ."}, {"start_index": 551985, "end_index": 552067, "text": "--- Recording mergeinfo for merge between repository URLs into &#39;.&#39;: U ."}, {"start_index": 553263, "end_index": 553506, "text": "$ svn merge ^/calc/branches/my-calc-branch --- Merging differences between repository URLs into &#39;.&#39;: C src/integer.c U src/real.c A src/whole.c --- Recording mergeinfo for merge between repository URLs into &#39;.&#39;: U ."}, {"start_index": 585529, "end_index": 585709, "text": "$ svn merge ^/calc/branches/mybranch --- Merging differences between repository URLs into &#39;.&#39;: U real.c U integer.c A newdirectory A newdirectory/newfile U ."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 411, "duplicates": [{"start_index": 532206, "end_index": 532267, "text": "Summary of conflicts: Tree conflicts: 5 $ svn st M ."}, {"start_index": 553507, "end_index": 553568, "text": "Summary of conflicts: Tree conflicts: 1 $ svn st M ."}]}, {"group_id": 412, "duplicates": [{"start_index": 532347, "end_index": 532426, "text": "C src/button.c &gt; local file missing, incoming file edit upon merge !"}, {"start_index": 532431, "end_index": 532511, "text": "C src/integer.c &gt; local file missing, incoming file edit upon merge !"}, {"start_index": 532516, "end_index": 532593, "text": "C src/main.c &gt; local file missing, incoming file edit upon merge !"}]}, {"group_id": 413, "duplicates": [{"start_index": 536555, "end_index": 536848, "text": "The option makes Subversion record mergeinfo as if it had actually performed the merge, but no difference is actually applied: $ cd my-calc-branch $ svn merge ^/calc/trunk -r386:388 --record-only --- Recording mergeinfo for merge of r387 through r388 into &#39;.&#39;: U ."}, {"start_index": 539244, "end_index": 539310, "text": "--- Recording mergeinfo for merge of r465 into &#39;.&#39;: G ."}, {"start_index": 539784, "end_index": 539976, "text": "Now any subsequent attempts to merge the feature to /paint/trunk are inoperative: $ svn merge ^/paint/trunk -c465 --- Recording mergeinfo for merge of r465 into &#39;.&#39;: U ."}, {"start_index": 540001, "end_index": 540140, "text": "$ svn merge ^/paint/branches/paint-python-wrapper -r462:464 --- Recording mergeinfo for merge of r463 through r464 into &#39;.&#39;: U ."}, {"start_index": 540773, "end_index": 540897, "text": "$ svn merge ^/paint/trunk -c465 --ignore-ancestry --- Merging r465 into &#39;.&#39;: A python A python/paint.py G ."}, {"start_index": 551985, "end_index": 552067, "text": "--- Recording mergeinfo for merge between repository URLs into &#39;.&#39;: U ."}, {"start_index": 553263, "end_index": 553506, "text": "$ svn merge ^/calc/branches/my-calc-branch --- Merging differences between repository URLs into &#39;.&#39;: C src/integer.c U src/real.c A src/whole.c --- Recording mergeinfo for merge between repository URLs into &#39;.&#39;: U ."}, {"start_index": 585529, "end_index": 585709, "text": "$ svn merge ^/calc/branches/mybranch --- Merging differences between repository URLs into &#39;.&#39;: U real.c U integer.c A newdirectory A newdirectory/newfile U ."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 414, "duplicates": [{"start_index": 536902, "end_index": 537101, "text": "$ svn pg svn:mergeinfo -vR Properties on &#39;.&#39;: svn:mergeinfo /calc/trunk:341-378,387-388 $ svn commit -m &quot;Block r387-388 from being merged to my-calc-branch.&quot; Sending ."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 415, "duplicates": [{"start_index": 537390, "end_index": 537590, "text": "For example, let&#39;s say we want to block the &#39;paint-python-wrapper&#39; feature from ever being merged from ^/paint/trunk to the ^/paint/branches/paint-1.0.x branch."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 416, "duplicates": [{"start_index": 538785, "end_index": 539243, "text": "Fortunately the transitive nature of --record-only merges prevents this; the --record-only merge applies the svn:mergeinfo diff from revision 465, thus blocking merges of that change directly from /paint/trunk and indirectly from /paint/branches/paint-python-wrapper : $ cd paint/branches/paint-1.0.x $ svn merge ^/paint/trunk --record-only -c465 --- Merging r465 into &#39;.&#39;: U ."}, {"start_index": 539244, "end_index": 539310, "text": "--- Recording mergeinfo for merge of r465 into &#39;.&#39;: G ."}, {"start_index": 539784, "end_index": 539976, "text": "Now any subsequent attempts to merge the feature to /paint/trunk are inoperative: $ svn merge ^/paint/trunk -c465 --- Recording mergeinfo for merge of r465 into &#39;.&#39;: U ."}, {"start_index": 540001, "end_index": 540140, "text": "$ svn merge ^/paint/branches/paint-python-wrapper -r462:464 --- Recording mergeinfo for merge of r463 through r464 into &#39;.&#39;: U ."}, {"start_index": 540773, "end_index": 540897, "text": "$ svn merge ^/paint/trunk -c465 --ignore-ancestry --- Merging r465 into &#39;.&#39;: A python A python/paint.py G ."}, {"start_index": 551985, "end_index": 552067, "text": "--- Recording mergeinfo for merge between repository URLs into &#39;.&#39;: U ."}, {"start_index": 553263, "end_index": 553506, "text": "$ svn merge ^/calc/branches/my-calc-branch --- Merging differences between repository URLs into &#39;.&#39;: C src/integer.c U src/real.c A src/whole.c --- Recording mergeinfo for merge between repository URLs into &#39;.&#39;: U ."}, {"start_index": 585529, "end_index": 585709, "text": "$ svn merge ^/calc/branches/mybranch --- Merging differences between repository URLs into &#39;.&#39;: U real.c U integer.c A newdirectory A newdirectory/newfile U ."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 417, "duplicates": [{"start_index": 539484, "end_index": 539757, "text": "___________________________________________________________________ Added: svn:mergeinfo Merged /paint/branches/paint-python-wrapper:r463-464 Merged /paint/trunk:r465 $ svn ci -m &quot;Block the Python wrappers from the first release of paint.&quot; Sending ."}, {"start_index": 552069, "end_index": 552158, "text": "$ svn ci -m &quot;Sync all changes from ^/calc/trunk through r469.&quot; Sending ."}]}, {"group_id": 418, "duplicates": [{"start_index": 539978, "end_index": 539999, "text": "$ svn st # No change!"}, {"start_index": 540142, "end_index": 540164, "text": "$ svn st # No change!"}]}, {"group_id": 419, "duplicates": [{"start_index": 541003, "end_index": 541207, "text": "The main problem is that we&#39;re not clearly differentiating between the ideas of I already have this change and I don&#39;t have this change, but don&#39;t currently want it."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 420, "duplicates": [{"start_index": 541209, "end_index": 541322, "text": "We&#39;re effectively lying to the system, making it think that the change was previously merged."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 421, "duplicates": [{"start_index": 549046, "end_index": 549196, "text": "For example, you may have imported two source-code trees representing different vendor releases of a software project (see )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 422, "duplicates": [{"start_index": 551670, "end_index": 551984, "text": "First you perform an automatic sync merge with /calc/trunk and commit that in r470: $ cd calc/trunk $ svn merge ^/calc/trunk --- Merging differences between repository URLs into &#39;.&#39;: U doc/INSTALL A FAQ U src/main.c U src/button.c U src/integer.c U Makefile U README U ."}, {"start_index": 551985, "end_index": 552067, "text": "--- Recording mergeinfo for merge between repository URLs into &#39;.&#39;: U ."}, {"start_index": 553263, "end_index": 553506, "text": "$ svn merge ^/calc/branches/my-calc-branch --- Merging differences between repository URLs into &#39;.&#39;: C src/integer.c U src/real.c A src/whole.c --- Recording mergeinfo for merge between repository URLs into &#39;.&#39;: U ."}, {"start_index": 585529, "end_index": 585709, "text": "$ svn merge ^/calc/branches/mybranch --- Merging differences between repository URLs into &#39;.&#39;: U real.c U integer.c A newdirectory A newdirectory/newfile U ."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 423, "duplicates": [{"start_index": 552159, "end_index": 552361, "text": "Sending Makefile Sending README Sending FAQ Sending doc/INSTALL Sending src/main.c Sending src/button.c Sending src/integer.c Transmitting file data ...."}, {"start_index": 740547, "end_index": 740571, "text": "Transmitting file data ."}, {"start_index": 740630, "end_index": 740654, "text": "Transmitting file data ."}, {"start_index": 740717, "end_index": 740741, "text": "Transmitting file data ."}, {"start_index": 740804, "end_index": 740831, "text": "Transmitting file data ...."}, {"start_index": 886195, "end_index": 886225, "text": "Transmitting file data ......."}, {"start_index": 886464, "end_index": 886494, "text": "Transmitting file data ......."}, {"start_index": 886733, "end_index": 886763, "text": "Transmitting file data ......."}]}, {"group_id": 424, "duplicates": [{"start_index": 553575, "end_index": 554358, "text": "C src/integer.c &gt; local file edit, incoming file delete upon merge M src/real.c A + src/whole.c Summary of conflicts: Tree conflicts: 1 The answer is that Subversion won&#39;t combine those changes, but rather raises a tree conflict If Sally hadn&#39;t made her change in r472, then Subversion would notice that integer.c in the target working copy is identical to integer.c in the left-side of the merge and would allow your rename to succeed without a tree conflict: $ svn merge ^/calc/branches/my-calc-branch --- Merging differences between repository URLs into &#39;.&#39;: U src/real.c A src/whole.c D src/integer.c --- Recording mergeinfo for merge between repository URLs into &#39;.&#39;: U ."}, {"start_index": 585529, "end_index": 585709, "text": "$ svn merge ^/calc/branches/mybranch --- Merging differences between repository URLs into &#39;.&#39;: U real.c U integer.c A newdirectory A newdirectory/newfile U ."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 425, "duplicates": [{"start_index": 554941, "end_index": 555150, "text": "Blocking Merge Tracking Unaware Clients If you&#39;ve just upgraded your server to Subversion 1.5 or later, there&#39;s a risk that pre-1.5 Subversion clients can cause problems with ."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}]}, {"group_id": 426, "duplicates": [{"start_index": 558140, "end_index": 558245, "text": "We&#39;ve chosen to only briefly cover, if at all, these detailed topics for a couple of reasons."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 427, "duplicates": [{"start_index": 558955, "end_index": 559081, "text": "Perform merges only on the root of your branches, not on subdirectories or files (see ) ."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 428, "duplicates": [{"start_index": 559082, "end_index": 559303, "text": "Don&#39;t ever edit the svn:mergeinfo property directly; use svn merge with the --record-only option to effect a desired change to the metadata (as demonstrated in )."}, {"start_index": 1115491, "end_index": 1115519, "text": "Don&#39;t bother reading it."}]}, {"group_id": 429, "duplicates": [{"start_index": 559547, "end_index": 559675, "text": "Don&#39;t use the --allow-mixed-revisions option to merge into mixed-revision working copies."}, {"start_index": 1115491, "end_index": 1115519, "text": "Don&#39;t bother reading it."}]}, {"group_id": 430, "duplicates": [{"start_index": 559676, "end_index": 559791, "text": "Don&#39;t merge to targets with switched subdirectories (as described next in )."}, {"start_index": 1115491, "end_index": 1115519, "text": "Don&#39;t bother reading it."}]}, {"group_id": 431, "duplicates": [{"start_index": 560179, "end_index": 560277, "text": "Don&#39;t worry if you need to, just be sure you understand the ramifications of doing so."}, {"start_index": 1115491, "end_index": 1115519, "text": "Don&#39;t bother reading it."}]}, {"group_id": 432, "duplicates": [{"start_index": 561286, "end_index": 561404, "text": "It&#39;s usually more efficient to use this command, because often branches differ by only a small degree."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}]}, {"group_id": 433, "duplicates": [{"start_index": 563239, "end_index": 563320, "text": "When you update, you&#39;ll receive patches to each subtree as appropriate."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}]}, {"group_id": 434, "duplicates": [{"start_index": 564759, "end_index": 564848, "text": "When you run svn update , you&#39;re asking the repository to compare two trees."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}]}, {"group_id": 435, "duplicates": [{"start_index": 565333, "end_index": 565545, "text": "If you&#39;re switching your working copy to a branch, svn switch will compare your working copy of /calc/trunk to some other branch directory in the HEAD revision."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}]}, {"group_id": 436, "duplicates": [{"start_index": 566087, "end_index": 566347, "text": "There is a great two step technique to do this: $ svn copy http://svn.example.com/repos/calc/trunk \\ http://svn.example.com/repos/calc/branches/newbranch \\ -m &quot;Create branch &#39;newbranch&#39;.&quot; Committed revision 353."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 437, "duplicates": [{"start_index": 567356, "end_index": 567708, "text": "If you want to create a snapshot of /calc/trunk exactly as it looks in the HEAD revision, make a copy of it: $ svn copy http://svn.example.com/repos/calc/trunk \\ http://svn.example.com/repos/calc/tags/release-1.0 \\ -m &quot;Tagging the 1.0 release of the &#39;calc&#39; project.&quot; Committed revision 902."}, {"start_index": 1209188, "end_index": 1209241, "text": "Summary of updates: Updated &#39;calc&#39; to r394."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}]}, {"group_id": 438, "duplicates": [{"start_index": 567786, "end_index": 567859, "text": "(If it doesn&#39;t, you can create it using svn mkdir .)"}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}]}, {"group_id": 439, "duplicates": [{"start_index": 569397, "end_index": 569625, "text": "The second approach is more paranoid: you can use one of the access control scripts provided with Subversion to prevent anyone from doing anything but creating new copies in the tags area (see )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 440, "duplicates": [{"start_index": 570682, "end_index": 570803, "text": "When you&#39;re done, your working copy is a hodgepodge of repository locations from different revisions."}, {"start_index": 573037, "end_index": 573074, "text": "It&#39;s almost too flexible."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}]}, {"group_id": 441, "duplicates": [{"start_index": 571119, "end_index": 571468, "text": "Luckily, svn copy actually has four different uses (see in ), including the ability to copy a working copy tree to the repository: $ ls my-working-copy/ $ svn copy my-working-copy \\ http://svn.example.com/repos/calc/tags/mytag \\ -m &quot;Tag my existing working copy state.&quot; Committed revision 940."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 442, "duplicates": [{"start_index": 574374, "end_index": 574599, "text": "Switching from one layout to another is just a matter of issuing a series of server-side moves; if you don&#39;t like the way things are organized in the repository, just juggle the directories around."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 443, "duplicates": [{"start_index": 575787, "end_index": 576269, "text": "Recall from the previous section that if the repository location your working copy refers to is deleted, then when you try to update you will receive an error: $ svn up Updating &#39;.&#39;: svn: E160005: Target path &#39;/calc/branches/my-calc-branch&#39; does not exist All you need to do in this situation is switch your working copy to a location that still exits: $ svn sw ^/calc/trunk D src/whole.c U src/real.c A src/integer.c U ."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 444, "duplicates": [{"start_index": 576769, "end_index": 577108, "text": "If there&#39;s a deleted directory (or file) that you&#39;d like to bring back into HEAD , simply use svn copy to copy it from the old revision: $ svn copy ^/calc/branches/my-calc-branch@473 \\ ^/calc/branches/my-calc-branch \\ -m &quot;Restore my-calc-branch.&quot; Committed revision 475."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}, {"start_index": 765255, "end_index": 765319, "text": "It&#39;s your data protect it as much as you&#39;d like."}]}, {"group_id": 445, "duplicates": [{"start_index": 577313, "end_index": 577454, "text": "In software development, though, it&#39;s also common to have two main branches running side by side for very long periods."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}]}, {"group_id": 446, "duplicates": [{"start_index": 577671, "end_index": 577822, "text": "You don&#39;t want people to add new features to the project, but you don&#39;t want to tell all developers to stop programming either."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 447, "duplicates": [{"start_index": 579049, "end_index": 579153, "text": "If you&#39;re not using Subversion for software development, feel free to skip this section."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}]}, {"group_id": 448, "duplicates": [{"start_index": 579155, "end_index": 579345, "text": "If you&#39;re a software developer using version control for the first time, pay close attention, as these patterns are often considered best practices by experienced folk."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}]}, {"group_id": 449, "duplicates": [{"start_index": 579347, "end_index": 579457, "text": "These processes aren&#39;t specific to Subversion; they&#39;re applicable to any version control system."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 450, "duplicates": [{"start_index": 582404, "end_index": 582535, "text": "It&#39;s a temporary branch created to work on a complex change without interfering with the stability of /trunk ."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}]}, {"group_id": 451, "duplicates": [{"start_index": 586067, "end_index": 586149, "text": "It&#39;s a branch that&#39;s capable of storing only one change at a time."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}]}, {"group_id": 452, "duplicates": [{"start_index": 586927, "end_index": 587034, "text": "Subversion has just such a relationship with the Apache Portable Runtime (APR) library (see )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 453, "duplicates": [{"start_index": 587886, "end_index": 588161, "text": "If the third-party information is maintained in a Subversion repository, you could also use Subversion&#39;s externals definitions to effectively pin down specific versions of that information to some location in your own working copy (see )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}, {"start_index": 1021068, "end_index": 1021128, "text": "After all, Subversion uses Subversion&#39;s APIs, too."}]}, {"group_id": 454, "duplicates": [{"start_index": 590628, "end_index": 590817, "text": "We&#39;ll cover a few of these approaches at a high level in the following sections, using the common example of a software project which depends on a third-party library."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 455, "duplicates": [{"start_index": 592821, "end_index": 593088, "text": "In the examples which follow, we&#39;ll assume that the third-party library is called libcomplex, and that we will be implementing a vendor branch based on libcomplex 1.0.0 which lives in our repository at ^/vendor/libcomplex-custom ."}, {"start_index": 603291, "end_index": 603363, "text": "At this point we have a vendor branch based on libcomplex 1.0.0."}]}, {"group_id": 456, "duplicates": [{"start_index": 593090, "end_index": 593225, "text": "We&#39;ll then look at how we can upgrade to libcomplex 1.0.1 while still preserving our customizations to the library."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 457, "duplicates": [{"start_index": 593226, "end_index": 593431, "text": "Vendor Branches from Foreign Repositories Let&#39;s look first at a vendor branch management approach that is possible when the original third-party library is itself Subversion-accessible."}, {"start_index": 669982, "end_index": 670033, "text": "Let&#39;s look more closely at each of those tools."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 458, "duplicates": [{"start_index": 594491, "end_index": 594611, "text": "It&#39;s this foreign repository copy functionality that we&#39;ll use to bootstrap our vendor branch."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}]}, {"group_id": 459, "duplicates": [{"start_index": 594652, "end_index": 594830, "text": "We&#39;ll begin by creating a placeholder directory for all such vendor branches in our repository, and then checking out a working copy of that location."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 460, "duplicates": [{"start_index": 594832, "end_index": 594976, "text": "$ svn mkdir http://svn.example.com/projects/vendor \\ -m &quot;Create a container for vendor branches.&quot; Committed revision 1160."}, {"start_index": 602244, "end_index": 602268, "text": "Committed revision 1160."}]}, {"group_id": 461, "duplicates": [{"start_index": 595091, "end_index": 595340, "text": "$ Now, we&#39;ll take advantage of Subversion&#39;s foreign repository copy support to get an exact copy of libcomplex 1.0.0 including any Subversion properties stored on its files and directories from the vendor repository."}, {"start_index": 597125, "end_index": 597209, "text": "Here is where Subversion&#39;s foreign repository merge operation is useful."}]}, {"group_id": 462, "duplicates": [{"start_index": 595342, "end_index": 596166, "text": "$ cd /path/to/vendor $ svn copy http://svn.othervendor.com/repos/libcomplex/tags/1.0.0 \\ libcomplex-custom --- Copying from foreign repository URL &#39;http://svn.othervendor.com/repos/lib\\ complex/tags/1.0.0&#39;: A libcomplex-custom A libcomplex-custom/README A libcomplex-custom/LICENSE A libcomplex-custom/src/code.c A libcomplex-custom/tests A libcomplex-custom/tests/TODO $ svn commit -m &quot;Initialize libcomplex vendor branch from libcomplex 1.0.0.&quot; Adding libcomplex-custom Adding libcomplex-custom/README Adding libcomplex-custom/LICENSE Adding libcomplex-custom/src Adding libcomplex-custom/src/code.h Adding libcomplex-custom/src/code.c Transmitting file data ....................................... Committed revision 1161."}, {"start_index": 603032, "end_index": 603289, "text": "$ svn copy http://svn.example.com/projects/vendor/libcomplex-1.0.0 \\ http://svn.example.com/projects/vendor/libcomplex-custom \\ -m &quot;Initialize libcomplex vendor branch from libcomplex 1.0.0.&quot; Committed revision 1161. $ Okay."}, {"start_index": 886195, "end_index": 886247, "text": "Transmitting file data ....... Committed revision 2."}, {"start_index": 886464, "end_index": 886516, "text": "Transmitting file data ....... Committed revision 2."}, {"start_index": 886733, "end_index": 886785, "text": "Transmitting file data ....... Committed revision 2."}]}, {"group_id": 463, "duplicates": [{"start_index": 596651, "end_index": 596879, "text": "Now that we have a vendor branch based on libcomplex 1.0.0, we can begin making the customizations to libcomplex required for our purposes, committing them directly to the vendor branch we&#39;ve created."}, {"start_index": 603291, "end_index": 603363, "text": "At this point we have a vendor branch based on libcomplex 1.0.0."}, {"start_index": 603365, "end_index": 603627, "text": "We are now poised to begin making the customizations to libcomplex required for our purposes committing them directly to the vendor branch we&#39;ve created and then to start using our customized libcomplex in our own application."}]}, {"group_id": 464, "duplicates": [{"start_index": 596958, "end_index": 597123, "text": "Some time later, libcomplex 1.0.1 is released. After reviewing its changes, we decide we&#39;d like to upgrade our vendor branch to the new version."}, {"start_index": 603628, "end_index": 603793, "text": "Some time later, libcomplex 1.0.1 is released. After reviewing its changes, we decide we&#39;d like to upgrade our vendor branch to the new version."}]}, {"group_id": 465, "duplicates": [{"start_index": 597590, "end_index": 598060, "text": "$ cd /path/to/vendor $ svn merge http://svn.othervendor.com/repos/libcomplex/tags/1.0.0 \\ http://svn.othervendor.com/repos/libcomplex/tags/1.0.1 \\ libcomplex-custom --- Merging differences between foreign repository URLs into &#39;.&#39;: U libcomplex-custom/src/code.h C libcomplex-custom/src/code.c U libcomplex-custom/README Summary of conflicts: Text conflicts: 1 Conflict discovered in file &#39;libcomplex-custom/src/code.c&#39;."}, {"start_index": 608979, "end_index": 609281, "text": "$ cd libcomplex-custom $ svn merge ^/vendor/libcomplex-1.0.0 \\ ^/vendor/libcomplex-1.0.1 --- Merging differences between repository URLs into &#39;.&#39;: U src/code.h C src/code.c U README Summary of conflicts: Text conflicts: 1 Conflict discovered in file &#39;src/code.c&#39;."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 466, "duplicates": [{"start_index": 598777, "end_index": 599462, "text": "Once we&#39;ve resolved the conflicts and performed any testing or review we need, we can commit the changes to our vendor branch. $ svn status libcomplex-custom M libcomplex-custom/src/code.h M libcomplex-custom/src/code.c M libcomplex-custom/README $ svn commit -m &quot;Upgrade vendor branch to libcomplex 1.0.1.&quot; \\ libcomplex-custom Sending libcomplex-custom/README Sending libcomplex-custom/src/code.h Sending libcomplex-custom/src/code.c Transmitting file data ... Committed revision 1282. $ That, in a nutshell, is how to manage vendor branches when the original source is Subversion-accessible."}, {"start_index": 609879, "end_index": 610331, "text": "Once we&#39;ve resolved the conflicts and performed any testing or review we need, we can commit the changes to our vendor branch. $ svn status M src/code.h M src/code.c M README $ svn commit -m &quot;Upgrade vendor branch to libcomplex 1.0.1.&quot; Sending README Sending src/code.h Sending src/code.c Transmitting file data ... Committed revision 1284. $ Our vendor branch upgrade is complete."}]}, {"group_id": 467, "duplicates": [{"start_index": 600999, "end_index": 601162, "text": "So let&#39;s examine an approach to vendor branches in which the third-party library&#39;s various releases are mirrored within our own repository."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 468, "duplicates": [{"start_index": 601550, "end_index": 602243, "text": "$ tar xvfz libcomplex-1.0.0.tar.gz libcomplex-1.0.0/ libcomplex-1.0.0/README libcomplex-1.0.0/LICENSE libcomplex-1.0.0/src/code.c libcomplex-1.0.0/tests libcomplex-1.0.0/tests/TODO $ svn import libcomplex-1.0.0 \\ http://svn.example.com/projects/vendor/libcomplex-1.0.0 \\ --no-ignore --no-auto-props \\ -m &quot;Import libcomplex 1.0.0 sources.&quot; Adding libcomplex-custom Adding libcomplex-custom/README Adding libcomplex-custom/LICENSE Adding libcomplex-custom/src Adding libcomplex-custom/src/code.h Adding libcomplex-custom/src/code.c Transmitting file data ......................................."}, {"start_index": 740547, "end_index": 740571, "text": "Transmitting file data ."}, {"start_index": 740630, "end_index": 740654, "text": "Transmitting file data ."}, {"start_index": 740717, "end_index": 740741, "text": "Transmitting file data ."}, {"start_index": 740804, "end_index": 740831, "text": "Transmitting file data ...."}, {"start_index": 886195, "end_index": 886225, "text": "Transmitting file data ......."}, {"start_index": 886464, "end_index": 886494, "text": "Transmitting file data ......."}, {"start_index": 886733, "end_index": 886763, "text": "Transmitting file data ......."}]}, {"group_id": 469, "duplicates": [{"start_index": 605079, "end_index": 605289, "text": "So we&#39;ll start by creating a libcomplex-1.0.1 branch as copy of our previously created libcomplex-1.0.0 vendor tag a copy which will eventually become a replica of libcomplex 1.0.1."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}]}, {"group_id": 470, "duplicates": [{"start_index": 605680, "end_index": 606051, "text": "To do this, we&#39;ll take advantage of the fact that svn checkout can overlay an existing directory and, if the --force option is provided, do so in manner that allows the differences between the checked-out tree and the target tree that the checkout overlayed to remain as local modifications in the new working copy."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}]}, {"group_id": 471, "duplicates": [{"start_index": 606578, "end_index": 607013, "text": "$ svn status libcomplex-1.0.1 M libcomplex-1.0.1/src/code.h M libcomplex-1.0.1/src/code.c M libcomplex-1.0.1/README $ As you can see, after checking out what was really libcomplex 1.0.0 atop the libcomplex 1.0.1 exploded tarball, we are left with a working copy that contains local modifications those modifications required to morph our previous vendor release drop into our new one."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 472, "duplicates": [{"start_index": 607530, "end_index": 607627, "text": "We&#39;ll leave the details of such transformations as an exercise to the reader."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 473, "duplicates": [{"start_index": 607628, "end_index": 607844, "text": "Here&#39;s a hint, though: svn add --force /path/to/working-copy --no-ignore --no-auto-props is super handy for adding any new vendor drop items to version control in this situation."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 474, "duplicates": [{"start_index": 608026, "end_index": 608280, "text": "$ svn commit -m &quot;Upgrade vendor branch to libcomplex 1.0.1.&quot; \\ libcomplex-1.0.1 Sending libcomplex-1.0.1/README Sending libcomplex-1.0.1/src/code.h Sending libcomplex-1.0.1/src/code.c Transmitting file data ..."}, {"start_index": 740547, "end_index": 740571, "text": "Transmitting file data ."}, {"start_index": 740630, "end_index": 740654, "text": "Transmitting file data ."}, {"start_index": 740717, "end_index": 740741, "text": "Transmitting file data ."}, {"start_index": 740804, "end_index": 740831, "text": "Transmitting file data ...."}, {"start_index": 886195, "end_index": 886225, "text": "Transmitting file data ......."}, {"start_index": 886464, "end_index": 886494, "text": "Transmitting file data ......."}, {"start_index": 886733, "end_index": 886763, "text": "Transmitting file data ......."}]}, {"group_id": 475, "duplicates": [{"start_index": 608306, "end_index": 608362, "text": "$ We&#39;re finally ready to upgrade our vendor branch."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 476, "duplicates": [{"start_index": 610496, "end_index": 610561, "text": "To branch or not to branch that is an interesting question."}, {"start_index": 615915, "end_index": 615942, "text": "To branch or not to branch?"}]}, {"group_id": 477, "duplicates": [{"start_index": 611242, "end_index": 611337, "text": "Let&#39;s examine some of the benefits and costs of using branches in a software project."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 478, "duplicates": [{"start_index": 612228, "end_index": 612358, "text": "You&#39;d probably reproduce those numbers manually (or otherwise) in the issue tracker artifact which tracks the bug."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 479, "duplicates": [{"start_index": 614314, "end_index": 614348, "text": "It&#39;s a special sort of branch."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}]}, {"group_id": 480, "duplicates": [{"start_index": 616688, "end_index": 616735, "text": "So don&#39;t be afraid to use them when needed!"}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}]}, {"group_id": 481, "duplicates": [{"start_index": 618404, "end_index": 618551, "text": "We&#39;ll also talk about repository maintenance, providing examples of how and when to use various related tools provided with Subversion."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 482, "duplicates": [{"start_index": 618553, "end_index": 618685, "text": "We&#39;ll address some common questions and mistakes and give some suggestions on how to arrange the data in the repository."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 483, "duplicates": [{"start_index": 619188, "end_index": 619343, "text": "The Subversion Repository, Defined Before jumping into the broader topic of repository administration, let&#39;s further define what a repository is."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 484, "duplicates": [{"start_index": 620650, "end_index": 620791, "text": "(Don&#39;t get bogged down in the terminology detailed coverage of these components exists elsewhere in this and other chapters.)"}, {"start_index": 1115491, "end_index": 1115519, "text": "Don&#39;t bother reading it."}]}, {"group_id": 485, "duplicates": [{"start_index": 625170, "end_index": 625324, "text": "Let&#39;s assume that as repository administrator, you will be responsible for supporting the version control system for several projects."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 486, "duplicates": [{"start_index": 628075, "end_index": 628786, "text": "Because Subversion uses regular directory copies for branching and tagging (see ), the Subversion community recommends that you choose a repository location for each project root the topmost directory that contains data related to that project and then create three subdirectories beneath that root: trunk , meaning the directory under which the main project development occurs; branches , which is a directory in which to create various named branches of the main development line; and tags , which is a collection of tree snapshots that are created, and perhaps destroyed, but never changed."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 487, "duplicates": [{"start_index": 629633, "end_index": 629973, "text": "Such an arrangement might look like this: / utils/ calc/ trunk/ tags/ branches/ calendar/ trunk/ tags/ branches/ office/ spreadsheet/ trunk/ tags/ branches/ Lay out your repository in whatever way you see fit."}, {"start_index": 991556, "end_index": 991592, "text": "Do that in whatever way you see fit."}, {"start_index": 992470, "end_index": 992506, "text": "Do that in whatever way you see fit."}]}, {"group_id": 488, "duplicates": [{"start_index": 630262, "end_index": 630355, "text": "In the name of full disclosure, though, we&#39;ll mention another very common layout."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}]}, {"group_id": 489, "duplicates": [{"start_index": 631246, "end_index": 631280, "text": "That&#39;s a social issue, though."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}]}, {"group_id": 490, "duplicates": [{"start_index": 638472, "end_index": 638704, "text": "We&#39;ll discuss how to back up your repository later in this chapter (in ), but the benefits of being able to make fully functional copies of your repositories without any downtime should be obvious."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 491, "duplicates": [{"start_index": 639318, "end_index": 639392, "text": "See later in this chapter for more about Berkeley DB logfiles."}, {"start_index": 754812, "end_index": 754870, "text": "See later in this chapter for more about this."}, {"start_index": 1176726, "end_index": 1176754, "text": "See later in this chapter."}]}, {"group_id": 492, "duplicates": [{"start_index": 643017, "end_index": 643217, "text": "This doesn&#39;t completely eliminate instances of repository wedging, but it does drastically reduce the amount of human interaction required to recover from them."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}]}, {"group_id": 493, "duplicates": [{"start_index": 643218, "end_index": 643531, "text": "So while a Berkeley DB repository is quite fast and scalable, it&#39;s best used by a single server process running as one user such as Apache&#39;s httpd or svnserve (see ) rather than accessing it as many different users via file:// or svn+ssh:// URLs."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 494, "duplicates": [{"start_index": 643533, "end_index": 643680, "text": "If you&#39;re accessing a Berkeley DB repository directly as multiple users, be sure to read later in this chapter."}, {"start_index": 679391, "end_index": 679445, "text": "That&#39;s where fsfs-reshard.py comes in."}]}, {"group_id": 495, "duplicates": [{"start_index": 655257, "end_index": 655482, "text": "For example, if you are using server configuration to determine which users are permitted to commit changes to your repository, you don&#39;t need to do this sort of access control via the hook system."}, {"start_index": 1184335, "end_index": 1184432, "text": "The content of the repository doesn&#39;t change, but the repository&#39;s root URL does."}]}, {"group_id": 496, "duplicates": [{"start_index": 665718, "end_index": 665821, "text": "See for information about developing software using Subversion&#39;s public APIs."}, {"start_index": 1021068, "end_index": 1021128, "text": "After all, Subversion uses Subversion&#39;s APIs, too."}]}, {"group_id": 497, "duplicates": [{"start_index": 670587, "end_index": 671114, "text": "The syntax of svnadmin is similar to that of other Subversion command-line programs: $ svnadmin help general usage: svnadmin SUBCOMMAND REPOS_PATH [ARGS &amp; OPTIONS ...] Type &#39;svnadmin help &lt;subcommand&gt;&#39; for help on a specific subcommand. Type &#39;svnadmin --version&#39; to see the program version and FS modules. Available subcommands: crashtest create deltify Previously in this chapter (in ), we were introduced to the svnadmin create subcommand."}, {"start_index": 676118, "end_index": 676595, "text": "The syntax of svndumpfilter is as follows: $ svndumpfilter help general usage: svndumpfilter SUBCOMMAND [ARGS &amp; OPTIONS ...] Type &#39;svndumpfilter help &lt;subcommand&gt;&#39; for help on a specific subcommand. Type &#39;svndumpfilter --version&#39; to see the program version. Available subcommands: exclude include help (?, h) There are only two interesting subcommands: svndumpfilter exclude and svndumpfilter include ."}]}, {"group_id": 498, "duplicates": [{"start_index": 672002, "end_index": 672336, "text": "svnlook has a straightforward syntax: $ svnlook help general usage: svnlook SUBCOMMAND REPOS_PATH [ARGS &amp; OPTIONS ...] Note: any subcommand which takes the &#39;--revision&#39; and &#39;--transaction&#39; options will, if invoked without one of those options, act on the repository&#39;s youngest revision."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 499, "duplicates": [{"start_index": 672337, "end_index": 672418, "text": "Type &#39;svnlook help &lt;subcommand&gt;&#39; for help on a specific subcommand."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 500, "duplicates": [{"start_index": 672739, "end_index": 672903, "text": "You use the --revision ( -r ) and --transaction ( -t ) options to specify which revision or transaction, respectively, to examine."}, {"start_index": 1255091, "end_index": 1255271, "text": "Use the --revision ( -r ) and --transaction ( -t ) options to specify a version of the file other than HEAD whose file size you wish to display."}]}, {"group_id": 501, "duplicates": [{"start_index": 677073, "end_index": 677229, "text": "$ svnrdump help general usage: svnrdump SUBCOMMAND URL [-r LOWER[:UPPER]] Type &#39;svnrdump help &lt;subcommand&gt;&#39; for help on a specific subcommand."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 502, "duplicates": [{"start_index": 677230, "end_index": 677502, "text": "Type &#39;svnrdump --version&#39; to see the program version and RA modules. Available subcommands: dump load help (?, h) $ We discuss the use of svnrdump and the aforementioned svnadmin commands later in this chapter (see )."}, {"start_index": 678387, "end_index": 678672, "text": "Type &#39;svnsync --version&#39; to see the program version and RA modules. Available subcommands: initialize (init) synchronize (sync) copy-revprops info help (?, h) $ We talk more about replicating repositories with svnsync later in this chapter (see )."}]}, {"group_id": 503, "duplicates": [{"start_index": 678073, "end_index": 678386, "text": "As you might expect, svnsync has a syntax that looks very much like every other program we&#39;ve mentioned in this chapter: $ svnsync help general usage: svnsync SUBCOMMAND DEST_URL [ARGS &amp; OPTIONS ...] Type &#39;svnsync help &lt;subcommand&gt;&#39; for help on a specific subcommand."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 504, "duplicates": [{"start_index": 682606, "end_index": 682884, "text": "If the repository is configured (using the pre-revprop-change hook; see ) to accept changes to this log message after the commit is finished, the user can fix her log message remotely using svn propset (see in )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 505, "duplicates": [{"start_index": 689434, "end_index": 690211, "text": "REPOS=&quot;${1}&quot; if [ &quot;x$REPOS&quot; = x ] ; then echo &quot;usage: $0 REPOS_PATH&quot; exit fi for TXN in `svnadmin lstxns ${REPOS}`; do echo &quot;---[ Transaction ${TXN} ]-------------------------------------------&quot; svnlook info &quot;${REPOS}&quot; -t &quot;${TXN}&quot; done The output of the script is basically a concatenation of several chunks of svnlook info output (see ) and will look something like this: $ txn-info.sh myrepos ---[ Transaction 19 ]------------------------------------------- sally 2001-09-04 11:57:19 -0500 (Tue, 04 Sep 2001) 0 ---[ Transaction 3a1 ]------------------------------------------- harry 2001-09-10 16:50:30 -0500 (Mon, 10 Sep 2001) 39 Trying to commit over a faulty network."}, {"start_index": 690212, "end_index": 690434, "text": "---[ Transaction a45 ]------------------------------------------- sally 2001-09-12 11:09:28 -0500 (Wed, 12 Sep 2001) 0 $ A long-abandoned transaction usually represents some sort of failed or interrupted commit."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}, {"start_index": 1150668, "end_index": 1151063, "text": "------------------------------------------------------------------------ r17 | sally | 2003-01-16 23:21:19 -0600 (Thu, 16 Jan 2003) | 2 lines Examine all log messages for a particular file in your working copy: $ svn log foo.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Added defines."}, {"start_index": 1151064, "end_index": 1151488, "text": "------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines If you don&#39;t have a working copy handy, you can log a URL: $ svn log http://svn.red-bean.com/repos/test/foo.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Added defines."}, {"start_index": 1151489, "end_index": 1151965, "text": "------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines If you want several distinct paths underneath the same URL, you can use the URL [PATH...] syntax: $ svn log http://svn.red-bean.com/repos/test/ foo.c bar.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Added defines."}, {"start_index": 1151966, "end_index": 1152429, "text": "------------------------------------------------------------------------ r31 | harry | 2003-01-10 12:25:08 -0600 (Fri, 10 Jan 2003) | 1 line Added new file bar.c ------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines The --verbose ( -v ) option causes svn log to include information about the paths that were changed in each displayed revision."}, {"start_index": 1152571, "end_index": 1152815, "text": "$ svn log -v http://svn.red-bean.com/repos/test/ foo.c bar.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Changed paths: M /foo.c Added defines."}, {"start_index": 1152816, "end_index": 1153306, "text": "------------------------------------------------------------------------ r31 | harry | 2003-01-10 12:25:08 -0600 (Fri, 10 Jan 2003) | 1 line Changed paths: A /bar.c Added new file bar.c ------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines svn log uses just a handful of action codes, and they are similar to the ones the svn update command uses: A The item was added."}, {"start_index": 1154131, "end_index": 1156386, "text": "If you ran svn log on a range of two revisions, you would get this: $ svn log -r 14:15 ------------------------------------------------------------------------ r14 | ------------------------------------------------------------------------ r15 | ------------------------------------------------------------------------ However, if you wanted to gather two nonsequential log messages into a file, you might do something like this: $ svn log -r 14 &gt; mylog $ svn log -r 19 &gt;&gt; mylog $ svn log -r 27 &gt;&gt; mylog $ cat mylog ------------------------------------------------------------------------ r14 | ------------------------------------------------------------------------ ------------------------------------------------------------------------ r19 | ------------------------------------------------------------------------ ------------------------------------------------------------------------ r27 | ------------------------------------------------------------------------ You can avoid the clutter of the double dashed lines in your output by using the --incremental option: $ svn log --incremental -r 14 &gt; mylog $ svn log --incremental -r 19 &gt;&gt; mylog $ svn log --incremental -r 27 &gt;&gt; mylog $ cat mylog ------------------------------------------------------------------------ r14 | ------------------------------------------------------------------------ r19 | ------------------------------------------------------------------------ r27 | The --incremental option provides similar output control when using the --xml option: $ svn log --xml --incremental -r 1 sandwich.txt &lt;logentry revision=&quot;1&quot;&gt; &lt;author&gt;harry&lt;/author&gt; &lt;date&gt;2008-06-03T06:35:53.048870Z&lt;/date&gt; &lt;msg&gt;Initial Import.&lt;/msg&gt; &lt;/logentry&gt; Sometimes when you run svn log on a specific path and a specific revision, you see no log information output at all, as in the following: $ svn log -r 20 http://svn.red-bean.com/untouched.txt ------------------------------------------------------------------------ That just means the path wasn&#39;t modified in that revision."}, {"start_index": 1156388, "end_index": 1156786, "text": "To get log information for that revision, either run the log operation against the repository&#39;s root URL, or specify a path that you happen to know was changed in that revision: $ svn log -r 20 touched.txt ------------------------------------------------------------------------ r20 | sally | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line Made a change."}, {"start_index": 1156787, "end_index": 1157117, "text": "------------------------------------------------------------------------ Beginning with Subversion 1.7, users can take advantage of a special output mode which combines the information from svn log with what you would see when running svn diff on the same targets for each revision of the log."}, {"start_index": 1157222, "end_index": 1157413, "text": "$ svn log -r 20 touched.txt --diff ------------------------------------------------------------------------ r20 | sally | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line Made a change."}, {"start_index": 1157672, "end_index": 1157973, "text": "------------------------------------------------------------------------ $ As with svn diff , you may also make use of many of the various options which control the way the difference is generated, including --depth , --diff-cmd , and --extensions ( -x )."}, {"start_index": 1158921, "end_index": 1159177, "text": "For example: $ svn log --search sally --search harry https://svn.red-bean.com/repos/test ------------------------------------------------------------------------ r1701 | sally | 2011-10-12 22:35:30 -0600 (Wed, 12 Oct 2011) | 1 line Add a reminder."}, {"start_index": 1159178, "end_index": 1159354, "text": "------------------------------------------------------------------------ r1564 | harry | 2011-10-09 22:35:30 -0600 (Sun, 09 Oct 2011) | 1 line Merge r1560 to the 1.0.x branch."}, {"start_index": 1159355, "end_index": 1159574, "text": "------------------------------------------------------------------------ $ Using --search with --search-and options will show log messages that match the combined pattern from both options."}, {"start_index": 1159575, "end_index": 1159873, "text": "For example: $ svn log --verbose --search sally --search-and /foo/bar https://svn.red-bean.com/repos/test ------------------------------------------------------------------------ r1555 | sally | 2011-07-15 22:33:14 -0600 (Fri, 15 Jul 2011) | 1 line Changed paths: M /foo/bar/src.c Typofix."}, {"start_index": 1159874, "end_index": 1160091, "text": "------------------------------------------------------------------------ r1530 | sally | 2011-07-13 07:24:11 -0600 (Wed, 13 Jul 2011) | 1 line Changed paths: M /foo/bar M /foo/build Fix up some svn:ignore properties."}, {"start_index": 1160092, "end_index": 1160250, "text": "------------------------------------------------------------------------ $ --search and --search-and options does not actually perform a search."}, {"start_index": 1184335, "end_index": 1184432, "text": "The content of the repository doesn&#39;t change, but the repository&#39;s root URL does."}, {"start_index": 1247505, "end_index": 1247534, "text": "--verbose ( -v ) Be verbose."}]}, {"group_id": 506, "duplicates": [{"start_index": 693311, "end_index": 693618, "text": "Use the svnadmin list-unused-dblogs command to list the unused logfiles: $ svnadmin list-unused-dblogs /var/svn/repos /var/svn/repos/log.0000000031 /var/svn/repos/log.0000000032 /var/svn/repos/log.0000000033 $ rm `svnadmin list-unused-dblogs /var/svn/repos` ## disk space reclaimed!"}, {"start_index": 1225942, "end_index": 1226216, "text": "Examples Remove all unused logfiles from the repository: $ svnadmin list-unused-dblogs /var/svn/repos /var/svn/repos/log.0000000031 /var/svn/repos/log.0000000032 /var/svn/repos/log.0000000033 $ svnadmin list-unused-dblogs /var/svn/repos | xargs rm ## disk space reclaimed!"}]}, {"group_id": 507, "duplicates": [{"start_index": 696149, "end_index": 696305, "text": "Subversion can pack existing sharded repositories which have been upgraded to the 1.6 filesystem format or later (see ) in ."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 508, "duplicates": [{"start_index": 700473, "end_index": 700636, "text": "Please wait; recovering the repository may take some time... Recovery completed. The latest repos revision is 19. This command may take many minutes to complete."}, {"start_index": 1231143, "end_index": 1231336, "text": "Please wait; recovering the repository may take some time... Recovery completed. The latest repos revision is 34. Recovering the database requires an exclusive lock on the repository."}]}, {"group_id": 509, "duplicates": [{"start_index": 705332, "end_index": 705528, "text": "In fact, the cvs2svn utility (see ) uses the dump format to represent the contents of a CVS repository so that those contents can be copied into a Subversion repository."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 510, "duplicates": [{"start_index": 705925, "end_index": 706076, "text": "svnadmin dump will output a range of repository revisions that are formatted using Subversion&#39;s custom filesystem dump format."}, {"start_index": 1021068, "end_index": 1021128, "text": "After all, Subversion uses Subversion&#39;s APIs, too."}]}, {"group_id": 511, "duplicates": [{"start_index": 706474, "end_index": 706539, "text": "* Dumped revision 1. * Dumped revision 2. * Dumped revision 25."}, {"start_index": 721788, "end_index": 721850, "text": "* Dumped revision 1. * Dumped revision 2. * Dumped revision 3."}]}, {"group_id": 512, "duplicates": [{"start_index": 707261, "end_index": 707517, "text": "It also gives informative feedback, this time using the standard output stream: $ svnadmin load newrepos &lt; dumpfile &lt;&lt;&lt; Started new txn, based on original revision 1 * adding path : A ... done. * adding path : A/B ... done."}, {"start_index": 1227562, "end_index": 1227845, "text": "Or if you want to load into a subdirectory: $ svnadmin load --parent-dir new/subdir/for/project \\ /var/svn/restored &lt; repos-backup &lt;&lt;&lt; Started new txn, based on original revision 1 * adding path : test ... done. * adding path : test/a ... done."}]}, {"group_id": 513, "duplicates": [{"start_index": 707525, "end_index": 707691, "text": "------- Committed new rev 1 (loaded from original rev 1) &gt;&gt;&gt; &lt;&lt;&lt; Started new txn, based on original revision 2 * editing path : A/mu ... done."}, {"start_index": 707735, "end_index": 707910, "text": "------- Committed new rev 2 (loaded from original rev 2) &gt;&gt;&gt; &lt;&lt;&lt; Started new txn, based on original revision 25 * editing path : A/D/gamma ... done."}, {"start_index": 707912, "end_index": 708084, "text": "------- Committed new rev 25 (loaded from original rev 25) &gt;&gt;&gt; &lt;&lt;&lt; Started new txn, based on original revision 26 * adding path : A/Z/zeta ... done."}, {"start_index": 708090, "end_index": 708121, "text": "* editing path : A/mu ... done."}, {"start_index": 1150668, "end_index": 1151063, "text": "------------------------------------------------------------------------ r17 | sally | 2003-01-16 23:21:19 -0600 (Thu, 16 Jan 2003) | 2 lines Examine all log messages for a particular file in your working copy: $ svn log foo.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Added defines."}, {"start_index": 1151064, "end_index": 1151488, "text": "------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines If you don&#39;t have a working copy handy, you can log a URL: $ svn log http://svn.red-bean.com/repos/test/foo.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Added defines."}, {"start_index": 1151489, "end_index": 1151965, "text": "------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines If you want several distinct paths underneath the same URL, you can use the URL [PATH...] syntax: $ svn log http://svn.red-bean.com/repos/test/ foo.c bar.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Added defines."}, {"start_index": 1151966, "end_index": 1152429, "text": "------------------------------------------------------------------------ r31 | harry | 2003-01-10 12:25:08 -0600 (Fri, 10 Jan 2003) | 1 line Added new file bar.c ------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines The --verbose ( -v ) option causes svn log to include information about the paths that were changed in each displayed revision."}, {"start_index": 1152571, "end_index": 1152815, "text": "$ svn log -v http://svn.red-bean.com/repos/test/ foo.c bar.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Changed paths: M /foo.c Added defines."}, {"start_index": 1152816, "end_index": 1153306, "text": "------------------------------------------------------------------------ r31 | harry | 2003-01-10 12:25:08 -0600 (Fri, 10 Jan 2003) | 1 line Changed paths: A /bar.c Added new file bar.c ------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines svn log uses just a handful of action codes, and they are similar to the ones the svn update command uses: A The item was added."}, {"start_index": 1154131, "end_index": 1156386, "text": "If you ran svn log on a range of two revisions, you would get this: $ svn log -r 14:15 ------------------------------------------------------------------------ r14 | ------------------------------------------------------------------------ r15 | ------------------------------------------------------------------------ However, if you wanted to gather two nonsequential log messages into a file, you might do something like this: $ svn log -r 14 &gt; mylog $ svn log -r 19 &gt;&gt; mylog $ svn log -r 27 &gt;&gt; mylog $ cat mylog ------------------------------------------------------------------------ r14 | ------------------------------------------------------------------------ ------------------------------------------------------------------------ r19 | ------------------------------------------------------------------------ ------------------------------------------------------------------------ r27 | ------------------------------------------------------------------------ You can avoid the clutter of the double dashed lines in your output by using the --incremental option: $ svn log --incremental -r 14 &gt; mylog $ svn log --incremental -r 19 &gt;&gt; mylog $ svn log --incremental -r 27 &gt;&gt; mylog $ cat mylog ------------------------------------------------------------------------ r14 | ------------------------------------------------------------------------ r19 | ------------------------------------------------------------------------ r27 | The --incremental option provides similar output control when using the --xml option: $ svn log --xml --incremental -r 1 sandwich.txt &lt;logentry revision=&quot;1&quot;&gt; &lt;author&gt;harry&lt;/author&gt; &lt;date&gt;2008-06-03T06:35:53.048870Z&lt;/date&gt; &lt;msg&gt;Initial Import.&lt;/msg&gt; &lt;/logentry&gt; Sometimes when you run svn log on a specific path and a specific revision, you see no log information output at all, as in the following: $ svn log -r 20 http://svn.red-bean.com/untouched.txt ------------------------------------------------------------------------ That just means the path wasn&#39;t modified in that revision."}, {"start_index": 1156388, "end_index": 1156786, "text": "To get log information for that revision, either run the log operation against the repository&#39;s root URL, or specify a path that you happen to know was changed in that revision: $ svn log -r 20 touched.txt ------------------------------------------------------------------------ r20 | sally | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line Made a change."}, {"start_index": 1156787, "end_index": 1157117, "text": "------------------------------------------------------------------------ Beginning with Subversion 1.7, users can take advantage of a special output mode which combines the information from svn log with what you would see when running svn diff on the same targets for each revision of the log."}, {"start_index": 1157222, "end_index": 1157413, "text": "$ svn log -r 20 touched.txt --diff ------------------------------------------------------------------------ r20 | sally | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line Made a change."}, {"start_index": 1157672, "end_index": 1157973, "text": "------------------------------------------------------------------------ $ As with svn diff , you may also make use of many of the various options which control the way the difference is generated, including --depth , --diff-cmd , and --extensions ( -x )."}, {"start_index": 1158921, "end_index": 1159177, "text": "For example: $ svn log --search sally --search harry https://svn.red-bean.com/repos/test ------------------------------------------------------------------------ r1701 | sally | 2011-10-12 22:35:30 -0600 (Wed, 12 Oct 2011) | 1 line Add a reminder."}, {"start_index": 1159178, "end_index": 1159354, "text": "------------------------------------------------------------------------ r1564 | harry | 2011-10-09 22:35:30 -0600 (Sun, 09 Oct 2011) | 1 line Merge r1560 to the 1.0.x branch."}, {"start_index": 1159355, "end_index": 1159574, "text": "------------------------------------------------------------------------ $ Using --search with --search-and options will show log messages that match the combined pattern from both options."}, {"start_index": 1159575, "end_index": 1159873, "text": "For example: $ svn log --verbose --search sally --search-and /foo/bar https://svn.red-bean.com/repos/test ------------------------------------------------------------------------ r1555 | sally | 2011-07-15 22:33:14 -0600 (Fri, 15 Jul 2011) | 1 line Changed paths: M /foo/bar/src.c Typofix."}, {"start_index": 1159874, "end_index": 1160091, "text": "------------------------------------------------------------------------ r1530 | sally | 2011-07-13 07:24:11 -0600 (Wed, 13 Jul 2011) | 1 line Changed paths: M /foo/bar M /foo/build Fix up some svn:ignore properties."}, {"start_index": 1160092, "end_index": 1160250, "text": "------------------------------------------------------------------------ $ --search and --search-and options does not actually perform a search."}, {"start_index": 1184335, "end_index": 1184432, "text": "The content of the repository doesn&#39;t change, but the repository&#39;s root URL does."}, {"start_index": 1247505, "end_index": 1247534, "text": "--verbose ( -v ) Be verbose."}]}, {"group_id": 514, "duplicates": [{"start_index": 708123, "end_index": 708375, "text": "------- Committed new rev 26 (loaded from original rev 26) &gt;&gt;&gt; The result of a load is new revisions added to a repository the same thing you get by making commits against that repository from a regular Subversion client."}, {"start_index": 1150668, "end_index": 1151063, "text": "------------------------------------------------------------------------ r17 | sally | 2003-01-16 23:21:19 -0600 (Thu, 16 Jan 2003) | 2 lines Examine all log messages for a particular file in your working copy: $ svn log foo.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Added defines."}, {"start_index": 1151064, "end_index": 1151488, "text": "------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines If you don&#39;t have a working copy handy, you can log a URL: $ svn log http://svn.red-bean.com/repos/test/foo.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Added defines."}, {"start_index": 1151489, "end_index": 1151965, "text": "------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines If you want several distinct paths underneath the same URL, you can use the URL [PATH...] syntax: $ svn log http://svn.red-bean.com/repos/test/ foo.c bar.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Added defines."}, {"start_index": 1151966, "end_index": 1152429, "text": "------------------------------------------------------------------------ r31 | harry | 2003-01-10 12:25:08 -0600 (Fri, 10 Jan 2003) | 1 line Added new file bar.c ------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines The --verbose ( -v ) option causes svn log to include information about the paths that were changed in each displayed revision."}, {"start_index": 1152571, "end_index": 1152815, "text": "$ svn log -v http://svn.red-bean.com/repos/test/ foo.c bar.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Changed paths: M /foo.c Added defines."}, {"start_index": 1152816, "end_index": 1153306, "text": "------------------------------------------------------------------------ r31 | harry | 2003-01-10 12:25:08 -0600 (Fri, 10 Jan 2003) | 1 line Changed paths: A /bar.c Added new file bar.c ------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines svn log uses just a handful of action codes, and they are similar to the ones the svn update command uses: A The item was added."}, {"start_index": 1154131, "end_index": 1156386, "text": "If you ran svn log on a range of two revisions, you would get this: $ svn log -r 14:15 ------------------------------------------------------------------------ r14 | ------------------------------------------------------------------------ r15 | ------------------------------------------------------------------------ However, if you wanted to gather two nonsequential log messages into a file, you might do something like this: $ svn log -r 14 &gt; mylog $ svn log -r 19 &gt;&gt; mylog $ svn log -r 27 &gt;&gt; mylog $ cat mylog ------------------------------------------------------------------------ r14 | ------------------------------------------------------------------------ ------------------------------------------------------------------------ r19 | ------------------------------------------------------------------------ ------------------------------------------------------------------------ r27 | ------------------------------------------------------------------------ You can avoid the clutter of the double dashed lines in your output by using the --incremental option: $ svn log --incremental -r 14 &gt; mylog $ svn log --incremental -r 19 &gt;&gt; mylog $ svn log --incremental -r 27 &gt;&gt; mylog $ cat mylog ------------------------------------------------------------------------ r14 | ------------------------------------------------------------------------ r19 | ------------------------------------------------------------------------ r27 | The --incremental option provides similar output control when using the --xml option: $ svn log --xml --incremental -r 1 sandwich.txt &lt;logentry revision=&quot;1&quot;&gt; &lt;author&gt;harry&lt;/author&gt; &lt;date&gt;2008-06-03T06:35:53.048870Z&lt;/date&gt; &lt;msg&gt;Initial Import.&lt;/msg&gt; &lt;/logentry&gt; Sometimes when you run svn log on a specific path and a specific revision, you see no log information output at all, as in the following: $ svn log -r 20 http://svn.red-bean.com/untouched.txt ------------------------------------------------------------------------ That just means the path wasn&#39;t modified in that revision."}, {"start_index": 1156388, "end_index": 1156786, "text": "To get log information for that revision, either run the log operation against the repository&#39;s root URL, or specify a path that you happen to know was changed in that revision: $ svn log -r 20 touched.txt ------------------------------------------------------------------------ r20 | sally | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line Made a change."}, {"start_index": 1156787, "end_index": 1157117, "text": "------------------------------------------------------------------------ Beginning with Subversion 1.7, users can take advantage of a special output mode which combines the information from svn log with what you would see when running svn diff on the same targets for each revision of the log."}, {"start_index": 1157222, "end_index": 1157413, "text": "$ svn log -r 20 touched.txt --diff ------------------------------------------------------------------------ r20 | sally | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line Made a change."}, {"start_index": 1157672, "end_index": 1157973, "text": "------------------------------------------------------------------------ $ As with svn diff , you may also make use of many of the various options which control the way the difference is generated, including --depth , --diff-cmd , and --extensions ( -x )."}, {"start_index": 1158921, "end_index": 1159177, "text": "For example: $ svn log --search sally --search harry https://svn.red-bean.com/repos/test ------------------------------------------------------------------------ r1701 | sally | 2011-10-12 22:35:30 -0600 (Wed, 12 Oct 2011) | 1 line Add a reminder."}, {"start_index": 1159178, "end_index": 1159354, "text": "------------------------------------------------------------------------ r1564 | harry | 2011-10-09 22:35:30 -0600 (Sun, 09 Oct 2011) | 1 line Merge r1560 to the 1.0.x branch."}, {"start_index": 1159355, "end_index": 1159574, "text": "------------------------------------------------------------------------ $ Using --search with --search-and options will show log messages that match the combined pattern from both options."}, {"start_index": 1159575, "end_index": 1159873, "text": "For example: $ svn log --verbose --search sally --search-and /foo/bar https://svn.red-bean.com/repos/test ------------------------------------------------------------------------ r1555 | sally | 2011-07-15 22:33:14 -0600 (Fri, 15 Jul 2011) | 1 line Changed paths: M /foo/bar/src.c Typofix."}, {"start_index": 1159874, "end_index": 1160091, "text": "------------------------------------------------------------------------ r1530 | sally | 2011-07-13 07:24:11 -0600 (Wed, 13 Jul 2011) | 1 line Changed paths: M /foo/bar M /foo/build Fix up some svn:ignore properties."}, {"start_index": 1160092, "end_index": 1160250, "text": "------------------------------------------------------------------------ $ --search and --search-and options does not actually perform a search."}, {"start_index": 1184335, "end_index": 1184432, "text": "The content of the repository doesn&#39;t change, but the repository&#39;s root URL does."}, {"start_index": 1247505, "end_index": 1247534, "text": "--verbose ( -v ) Be verbose."}]}, {"group_id": 515, "duplicates": [{"start_index": 710146, "end_index": 710303, "text": "But if you&#39;re creating a dump file for longer-term storage, you&#39;ll likely want to save disk space by using the --deltas option."}, {"start_index": 765255, "end_index": 765319, "text": "It&#39;s your data protect it as much as you&#39;d like."}]}, {"group_id": 516, "duplicates": [{"start_index": 714184, "end_index": 714799, "text": "That means if you have dump files for three repositories say calc-dumpfile , cal-dumpfile , and ss-dumpfile you can first create a new repository to hold them all: $ svnadmin create /var/svn/projects $ Then, make new directories in the repository that will encapsulate the contents of each of the three previous repositories: $ svn mkdir -m &quot;Initial project roots&quot; \\ file:///var/svn/projects/calc \\ file:///var/svn/projects/calendar \\ file:///var/svn/projects/spreadsheet Committed revision 1."}, {"start_index": 886139, "end_index": 886160, "text": "Committed revision 1."}, {"start_index": 886408, "end_index": 886429, "text": "Committed revision 1."}, {"start_index": 886677, "end_index": 886698, "text": "Committed revision 1."}]}, {"group_id": 517, "duplicates": [{"start_index": 716843, "end_index": 717074, "text": "Because it modifies revision properties after committing new revisions, svnrdump load requires that the target repository have revision property changes enabled via the pre-revprop-change hook."}, {"start_index": 1279144, "end_index": 1279322, "text": "To operate properly svnrdump load requires that the target repository have revision property modification enabled via the pre-revprop-change hook."}]}, {"group_id": 518, "duplicates": [{"start_index": 720648, "end_index": 720728, "text": "Let&#39;s look at a realistic example of how you might use this program."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 519, "duplicates": [{"start_index": 720730, "end_index": 720991, "text": "Earlier in this chapter (see ), we discussed the process of deciding how to choose a layout for the data in your repositories using one repository per project or combining them, arranging stuff within your repository, and so on."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 520, "duplicates": [{"start_index": 721383, "end_index": 721787, "text": "They have been living side-by-side in a layout like this: / calc/ trunk/ branches/ tags/ calendar/ trunk/ branches/ tags/ spreadsheet/ trunk/ branches/ tags/ To get these three projects into their own repositories, we first dump the whole repository: $ svnadmin dump /var/svn/repos &gt; repos-dumpfile * Dumped revision 0."}, {"start_index": 1221637, "end_index": 1221749, "text": "Options Examples Dump your whole repository: $ svnadmin dump /var/svn/repos &gt; full.dump * Dumped revision 0."}]}, {"group_id": 521, "duplicates": [{"start_index": 723526, "end_index": 723924, "text": "All that remains now is to create your three new repositories, and load each dump file into the right repository, ignoring the UUID found in the dump stream: $ svnadmin create calc $ svnadmin load --ignore-uuid calc &lt; calc-dumpfile &lt;&lt;&lt; Started new transaction, based on original revision 1 * adding path : Makefile ... done. * adding path : button.c ... done."}, {"start_index": 723927, "end_index": 724154, "text": "$ svnadmin create calendar $ svnadmin load --ignore-uuid calendar &lt; cal-dumpfile &lt;&lt;&lt; Started new transaction, based on original revision 1 * adding path : Makefile ... done. * adding path : cal.c ... done."}, {"start_index": 724157, "end_index": 724388, "text": "$ svnadmin create spreadsheet $ svnadmin load --ignore-uuid spreadsheet &lt; ss-dumpfile &lt;&lt;&lt; Started new transaction, based on original revision 1 * adding path : Makefile ... done. * adding path : ss.c ... done."}]}, {"group_id": 522, "duplicates": [{"start_index": 725879, "end_index": 725963, "text": "You&#39;ll want to look at the Node-path and Node-copyfrom-path headers."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 523, "duplicates": [{"start_index": 725967, "end_index": 726224, "text": "Node-path: spreadsheet/Makefile If the paths have leading slashes, you should include leading slashes in the paths you pass to svndumpfilter include and svndumpfilter exclude (and if they don&#39;t, you shouldn&#39;t)."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 524, "duplicates": [{"start_index": 728583, "end_index": 728796, "text": "You&#39;ll need to make sure that any directories that the new dump stream expects to exist actually do exist in the target repository before trying to load the stream into that repository."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 525, "duplicates": [{"start_index": 730463, "end_index": 730675, "text": "This target repository can use either of the available filesystem data-store backends (see ) Subversion&#39;s abstraction layers ensure that such details don&#39;t matter."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 526, "duplicates": [{"start_index": 730752, "end_index": 730825, "text": "(We&#39;ll discuss an exception to this later in this section.)"}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 527, "duplicates": [{"start_index": 732196, "end_index": 732360, "text": "You&#39;ll need to explicitly implement the pre-revprop-change hook, and your script must allow svnsync to set and change revision properties."}, {"start_index": 770496, "end_index": 770545, "text": "Hook scripts might need to be reconfigured."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 528, "duplicates": [{"start_index": 732721, "end_index": 732816, "text": "Let&#39;s walk through the use of svnsync in a somewhat typical mirroring scenario."}, {"start_index": 800143, "end_index": 800212, "text": "Let&#39;s walk through these files and learn how to use them."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 529, "duplicates": [{"start_index": 732818, "end_index": 733008, "text": "We&#39;ll pepper this discourse with practical recommendations, which you are free to disregard if they aren&#39;t required by or suitable for your environment."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 530, "duplicates": [{"start_index": 734918, "end_index": 735099, "text": "We&#39;ll use the repository&#39;s hook system both to allow the replication process to do what it needs to do and to enforce that only it is doing those things."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 531, "duplicates": [{"start_index": 735469, "end_index": 735970, "text": "Mirror repository&#39;s pre-revprop-change hook script #!/bin/sh USER=&quot;$3&quot; if [ &quot;$USER&quot; = &quot;syncuser&quot; ]; then exit 0; fi echo &quot;Only the syncuser user may change revision properties&quot; &gt;&amp;2 exit 1 That covers revision property changes. Now we need to ensure that only the syncuser user is permitted to commit new revisions to the repository. We do this using a start-commit hook script such as the one in ."}, {"start_index": 735971, "end_index": 736609, "text": "Mirror repository&#39;s start-commit hook script #!/bin/sh USER=&quot;$2&quot; if [ &quot;$USER&quot; = &quot;syncuser&quot; ]; then exit 0; fi echo &quot;Only the syncuser user may commit new revisions&quot; &gt;&amp;2 exit 1 After installing our hook scripts and ensuring that they are executable by the Subversion server, we&#39;re finished with the setup of the mirror repository. Now, we get to actually do the mirroring. The first thing we need to do with svnsync is to register in our target repository the fact that it will be a mirror of the source repository."}]}, {"group_id": 532, "duplicates": [{"start_index": 740321, "end_index": 740490, "text": "$ svnsync synchronize http://svn.example.com/svn-mirror \\ http://svnbook.googlecode.com/svn Committed revision 1. Copied properties for revision 1."}, {"start_index": 886139, "end_index": 886194, "text": "Committed revision 1. Copied properties for revision 1."}, {"start_index": 886408, "end_index": 886463, "text": "Committed revision 1. Copied properties for revision 1."}, {"start_index": 886677, "end_index": 886732, "text": "Committed revision 1. Copied properties for revision 1."}]}, {"group_id": 533, "duplicates": [{"start_index": 886226, "end_index": 886407, "text": "Committed revision 2. Copied properties for revision 2. $ svnsync sync http://slave2.example.com/svn-proxy-sync \\ file:///var/svn/repos Transmitting file data ...."}, {"start_index": 886495, "end_index": 886676, "text": "Committed revision 2. Copied properties for revision 2. $ svnsync sync http://slave3.example.com/svn-proxy-sync \\ file:///var/svn/repos Transmitting file data ...."}, {"start_index": 1298750, "end_index": 1298827, "text": "Committed revision 2. Copied properties for revision 2. Committed revision 3."}]}, {"group_id": 534, "duplicates": [{"start_index": 740513, "end_index": 740546, "text": "Copied properties for revision 2."}, {"start_index": 886248, "end_index": 886281, "text": "Copied properties for revision 2."}, {"start_index": 886517, "end_index": 886550, "text": "Copied properties for revision 2."}, {"start_index": 886786, "end_index": 886819, "text": "Copied properties for revision 2."}, {"start_index": 1298772, "end_index": 1298805, "text": "Copied properties for revision 2."}]}, {"group_id": 535, "duplicates": [{"start_index": 740594, "end_index": 740627, "text": "Copied properties for revision 3."}, {"start_index": 1298828, "end_index": 1298861, "text": "Copied properties for revision 3."}]}, {"group_id": 536, "duplicates": [{"start_index": 748795, "end_index": 749067, "text": "You&#39;ll need to tell it to do so manually by using (or with some additional tooling around) the svnsync copy-revprops subcommand, which simply rereplicates all the revision properties for a particular revision or range thereof."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 537, "duplicates": [{"start_index": 749397, "end_index": 749468, "text": "You&#39;ll likely want some automation around such a process."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 538, "duplicates": [{"start_index": 750561, "end_index": 750889, "text": "The process of setting up and maintaining such a mirror is exactly the same as when mirroring a whole repository, except that instead of specifying the source repository&#39;s root URL when running svnsync init , you specify the URL of some subdirectory within that repository."}, {"start_index": 1184335, "end_index": 1184432, "text": "The content of the repository doesn&#39;t change, but the repository&#39;s root URL does."}]}, {"group_id": 539, "duplicates": [{"start_index": 754098, "end_index": 754226, "text": "Replication wrap-up We&#39;ve discussed a couple of ways to replicate revision history from one repository to another."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 540, "duplicates": [{"start_index": 758870, "end_index": 759089, "text": "When making copies of a Berkeley DB repository, you can even instruct svnadmin hotcopy to purge any unused Berkeley DB logfiles (see ) from the original repository upon completion of the copy."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 541, "duplicates": [{"start_index": 763236, "end_index": 763330, "text": "The svnsync program (see ) actually provides a rather handy middle-ground approach."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 542, "duplicates": [{"start_index": 774848, "end_index": 775109, "text": "Finally, because this setup requires that each user spawn a private, temporary svnserve process, it&#39;s equivalent (from a permissions point of view) to allowing a group of local users to all access the repository via file:// URLs."}, {"start_index": 789793, "end_index": 789893, "text": "It&#39;s essentially the same as a local user accessing the repository via file:// URLs."}]}, {"group_id": 543, "duplicates": [{"start_index": 775307, "end_index": 775759, "text": "Comparison of Subversion server options Feature Apache + mod_dav_svn svnserve svnserve over SSH Authentication options HTTP Basic or Digest auth, X.509 certificates, LDAP, NTLM, or any other mechanism available to Apache httpd CRAM-MD5 by default; LDAP, NTLM, or any other mechanism available to SASL SSH User account options Private users file, or other mechanisms available to Apache httpd (LDAP, SQL, etc.)"}, {"start_index": 775760, "end_index": 775851, "text": "Private users file, or other mechanisms available to SASL (LDAP, SQL, etc.)"}]}, {"group_id": 544, "duplicates": [{"start_index": 777749, "end_index": 777811, "text": "No need to create system accounts on server."}, {"start_index": 779140, "end_index": 779215, "text": "There is no need to create system accounts on the server."}]}, {"group_id": 545, "duplicates": [{"start_index": 778189, "end_index": 778220, "text": "No advanced logging facilities."}, {"start_index": 778744, "end_index": 778775, "text": "No advanced logging facilities."}]}, {"group_id": 546, "duplicates": [{"start_index": 778248, "end_index": 778379, "text": "(You&#39;d have to install a separate web server and repository browsing software to add this.)"}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 547, "duplicates": [{"start_index": 779437, "end_index": 779544, "text": "The repository can be mounted as a network drive for transparent version control (see )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 548, "duplicates": [{"start_index": 779754, "end_index": 780014, "text": "Recommendations In general, the authors of this book recommend a vanilla svnserve installation for small teams just trying to get started with a Subversion server; it&#39;s the simplest to set up and has the fewest maintenance issues."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 549, "duplicates": [{"start_index": 782702, "end_index": 783047, "text": "It removes any layers of protection between the users and the repository: users can accidentally (or intentionally) corrupt the repository database, it becomes hard to take the repository offline for inspection or upgrade, and it can lead to a mess of file permission problems (see )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 550, "duplicates": [{"start_index": 783049, "end_index": 783401, "text": "Note that this is also one of the reasons we warn against accessing repositories via svn+ssh:// URLs from a security standpoint, it&#39;s effectively the same as local users accessing via file:// , and it can entail all the same problems if the administrator isn&#39;t careful."}, {"start_index": 789793, "end_index": 789893, "text": "It&#39;s essentially the same as a local user accessing the repository via file:// URLs."}]}, {"group_id": 551, "duplicates": [{"start_index": 790726, "end_index": 790815, "text": "You&#39;ll need to define the new service using the command-line tool SC.EXE ."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 552, "duplicates": [{"start_index": 792708, "end_index": 792810, "text": "That&#39;s why you need to surround it with quotes if it contains embedded spaces."}, {"start_index": 1216639, "end_index": 1216708, "text": "It&#39;s unlikely that you&#39;ll need to run this command."}]}, {"group_id": 553, "duplicates": [{"start_index": 794318, "end_index": 795975, "text": "A sample svnserve launchd job definition &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt; &lt;plist version=&quot;1.0&quot;&gt; &lt;dict&gt; &lt;key&gt;Label&lt;/key&gt; &lt;string&gt;org.apache.subversion.svnserve&lt;/string&gt; &lt;key&gt;ServiceDescription&lt;/key&gt; &lt;string&gt;Host Subversion repositories using svn:// scheme&lt;/string&gt; &lt;key&gt;ProgramArguments&lt;/key&gt; &lt;array&gt; &lt;string&gt;/usr/bin/svnserve&lt;/string&gt; &lt;string&gt;--inetd&lt;/string&gt; &lt;string&gt;--root=/var/svn&lt;/string&gt; &lt;/array&gt; &lt;key&gt;UserName&lt;/key&gt; &lt;string&gt;svn&lt;/string&gt; &lt;key&gt;GroupName&lt;/key&gt; &lt;string&gt;svn&lt;/string&gt; &lt;key&gt;inetdCompatibility&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Wait&lt;/key&gt; &lt;false/&gt; &lt;/dict&gt; &lt;key&gt;Sockets&lt;/key&gt; &lt;dict&gt; &lt;key&gt;Listeners&lt;/key&gt; &lt;array&gt; &lt;dict&gt; &lt;key&gt;SockServiceName&lt;/key&gt; &lt;string&gt;svn&lt;/string&gt; &lt;key&gt;Bonjour&lt;/key&gt; &lt;true/&gt; &lt;/dict&gt; &lt;/array&gt; &lt;/dict&gt; &lt;/dict&gt; &lt;/plist&gt; The launchd system can be somewhat challenging to learn."}, {"start_index": 1179750, "end_index": 1180019, "text": "&lt;?xml version=&quot;1.0&quot;?&gt; &lt;properties&gt; &lt;target path=&quot;&quot;&gt; &lt;property name=&quot;svn:ignore&quot;&gt;*.o &lt;/property&gt; &lt;/target&gt; &lt;/properties&gt; svn subcommands proplist svn proplist (plist, pl) List all properties."}]}, {"group_id": 554, "duplicates": [{"start_index": 799242, "end_index": 799347, "text": "See later in this chapter to learn how to configure SASL authentication and encryption."}, {"start_index": 1176726, "end_index": 1176754, "text": "See later in this chapter."}]}, {"group_id": 555, "duplicates": [{"start_index": 799851, "end_index": 800141, "text": "The file has the same format as other configuration files (see ): section names are marked by square brackets ( [ and ] ), comments begin with hashes ( # ), and each section contains specific variables that can be set ( variable = value )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}, {"start_index": 912088, "end_index": 912143, "text": "Lines that start with a hash ( # ) are ignored."}]}, {"group_id": 556, "duplicates": [{"start_index": 800348, "end_index": 800620, "text": "Begin by changing the values of those variables: choose a name for a file that will contain your usernames and passwords and choose an authentication realm: [general] password-db = userfile realm = example realm The realm is a name that you define."}, {"start_index": 835133, "end_index": 835197, "text": "for managing files containing usernames and passwords."}]}, {"group_id": 557, "duplicates": [{"start_index": 800631, "end_index": 800928, "text": "It tells clients which sort of authentication namespace they&#39;re connecting to; the Subversion client displays it in the authentication prompt and uses it as a key (along with the server&#39;s hostname and port) for caching credentials on disk (see )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 558, "duplicates": [{"start_index": 804865, "end_index": 805161, "text": "It may or may not be available to you: if you&#39;re building Subversion yourself, you&#39;ll need to have at least version 2.1 of SASL installed on your system, and you&#39;ll need to make sure that it&#39;s detected during Subversion&#39;s build process."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 559, "duplicates": [{"start_index": 805163, "end_index": 805466, "text": "The Subversion command-line client will report the availability of Cyrus SASL when you run svn --version ; if you&#39;re using some other Subversion client, you might need to check with the package maintainer as to whether SASL support was compiled in."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 560, "duplicates": [{"start_index": 806446, "end_index": 806613, "text": "Even when SASL capabilities aren&#39;t present, the client and server inherently know how to use the CRAM-MD5 and ANONYMOUS mechanisms (see )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 561, "duplicates": [{"start_index": 807343, "end_index": 807491, "text": "You&#39;ll have to locate the plug-in directory on your particular system, such as /usr/lib/sasl2/ or /etc/sasl2/ ."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 562, "duplicates": [{"start_index": 809266, "end_index": 809739, "text": "A system administrator can then use the saslpasswd2 program to add or modify usernames and passwords in the database: $ saslpasswd2 -c -f /etc/my_sasldb -u realm username A few words of warning: first, make sure the realm argument to saslpasswd2 matches the same realm you&#39;ve defined in your repository&#39;s svnserve.conf file; if they don&#39;t match, authentication will fail."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 563, "duplicates": [{"start_index": 814328, "end_index": 814406, "text": "That means there&#39;s no automatic password-caching going on (see )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 564, "duplicates": [{"start_index": 814897, "end_index": 815166, "text": "When running over a tunnel, authorization is primarily controlled by operating system permissions to the repository&#39;s database files; it&#39;s very much the same as if Harry were accessing the repository directly via a file:// URL."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 565, "duplicates": [{"start_index": 815910, "end_index": 816113, "text": "You&#39;d think that the story of SSH tunneling would end here, but it doesn&#39;t. Subversion allows you to create custom tunnel behaviors in your runtime config file (see )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 566, "duplicates": [{"start_index": 816188, "end_index": 816276, "text": "We don&#39;t actually recommend this, since RSH is notably less secure than SSH."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 567, "duplicates": [{"start_index": 819956, "end_index": 820507, "text": "In the following examples, we abbreviate the lines of the file as: command=&quot;program&quot; TYPE KEY COMMENT Controlling the invoked command Because we can specify the executed server-side command, it&#39;s easy to name a specific svnserve binary to run and to pass it extra arguments: command=&quot;/path/to/svnserve -t -r /virtual/root&quot; TYPE KEY COMMENT In this example, /path/to/svnserve might be a custom wrapper script around svnserve which sets the umask (see )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 568, "duplicates": [{"start_index": 825131, "end_index": 825342, "text": "You&#39;ll need Apache httpd 2.0 or newer, the mod_dav DAV module that comes with it, Subversion, and the mod_dav_svn filesystem provider module distributed with Subversion."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 569, "duplicates": [{"start_index": 825351, "end_index": 825934, "text": "Once you have all of those components, the process of networking your repository is as simple as: Getting httpd up and running with the mod_dav module Installing the mod_dav_svn backend to mod_dav , which uses Subversion&#39;s libraries to access the repository Configuring your httpd.conf file to export (or expose) the repository You can accomplish the first two items either by compiling httpd and Subversion from source code or by installing prebuilt binary packages of them on your system."}, {"start_index": 1021068, "end_index": 1021128, "text": "After all, Subversion uses Subversion&#39;s APIs, too."}]}, {"group_id": 570, "duplicates": [{"start_index": 829333, "end_index": 830160, "text": "For example, if you know you will be creating multiple Subversion repositories in a directory /var/svn that would be accessed via URLs such as http://my.server.com/svn/repos1 , http://my.server.com/svn/repos2 , and so on, you could use the httpd.conf configuration syntax in the following example: &lt;Location /svn&gt; DAV svn # Automatically map any &quot;/svn/foo&quot; URL to repository /var/svn/foo SVNParentPath /var/svn &lt;/Location&gt; Using this syntax, Apache will delegate the handling of all URLs whose path portions begin with /svn/ to the Subversion DAV provider, which will then assume that any items in the directory specified by the SVNParentPath directive are actually Subversion repositories."}, {"start_index": 833423, "end_index": 833694, "text": "Authentication Options At this point, if you configured httpd.conf to contain something such as the following: &lt;Location /svn&gt; DAV svn SVNParentPath /var/svn &lt;/Location&gt; your repository is anonymously accessible to the world."}]}, {"group_id": 571, "duplicates": [{"start_index": 834261, "end_index": 834372, "text": "Of course, you might have already set up a pre-commit hook script to prevent commits (see )."}, {"start_index": 846418, "end_index": 846436, "text": "(See .)"}, {"start_index": 846952, "end_index": 846970, "text": "(See .)"}, {"start_index": 847989, "end_index": 848007, "text": "(See .)"}]}, {"group_id": 572, "duplicates": [{"start_index": 836096, "end_index": 837087, "text": "In many cases, these modules are compiled into httpd itself, but if not, you might need to explicitly load one or more of them using the LoadModule directive: LoadModule auth_basic_module modules/mod_auth_basic.so LoadModule authn_file_module modules/mod_authn_file.so LoadModule authz_user_module moduels/mod_authz_user.so After ensuring the Apache has access to the required functionality, you&#39;ll need to add some more directives inside the &lt;Location&gt; block to tell Apache what type of authentication you wish to use, and just how to to so: &lt;Location /svn&gt; DAV svn SVNParentPath /var/svn # Authentication: Basic AuthName &quot;Subversion repository&quot; AuthType Basic AuthBasicProvider file AuthUserFile /etc/svn-auth.htpasswd &lt;/Location&gt; These directives work as follows: AuthName is an arbitrary name that you choose for the authentication domain."}, {"start_index": 837546, "end_index": 837630, "text": "However, this &lt;Location&gt; block doesn&#39;t yet do anything useful."}, {"start_index": 838053, "end_index": 838607, "text": "The simplest thing is to specify that all requests require authorization by adding Require valid-user to the block: &lt;Location /svn&gt; DAV svn SVNParentPath /var/svn # Authentication: Basic AuthName &quot;Subversion repository&quot; AuthType Basic AuthBasicProvider file AuthUserFile /etc/svn-auth.htpasswd # Authorization: Authenticated users only Require valid-user &lt;/Location&gt; Refer to for more detail on the Require directive and other ways to set authorization policies."}, {"start_index": 839684, "end_index": 840293, "text": "You&#39;ll need to ensure that the mod_auth_digest module is available (instead of mod_auth_basic ), and then make a few small variations on our prior example: &lt;Location /svn&gt; DAV svn SVNParentPath /var/svn # Authentication: Digest AuthName &quot;Subversion repository&quot; AuthType Digest AuthDigestProvider file AuthUserFile /etc/svn-auth.htdigest # Authorization: Authenticated users only Require valid-user &lt;/Location&gt; Notice that AuthType is now set to Digest , and we specify a different path for AuthUserFile ."}, {"start_index": 842170, "end_index": 842319, "text": "You can restrict access on all repository operations by adding Require valid-user directly inside the &lt;Location&gt; block."}, {"start_index": 842321, "end_index": 842794, "text": "The example from allows only clients that successfully authenticate to do anything with the Subversion repository: &lt;Location /svn&gt; DAV svn SVNParentPath /var/svn # Authentication: Digest AuthName &quot;Subversion repository&quot; AuthType Digest AuthUserFile /etc/svn-auth.htdigest # Authorization: Authenticated users only Require valid-user &lt;/Location&gt; Sometimes you don&#39;t need to run such a tight ship."}, {"start_index": 843948, "end_index": 844410, "text": "&lt;Location /svn&gt; DAV svn SVNParentPath /var/svn # Authentication: Digest AuthName &quot;Subversion repository&quot; AuthType Digest AuthUserFile /etc/svn-auth.htdigest # Authorization: Authenticated users only for non-read-only # (write) operations; allow anonymous reads &lt;LimitExcept GET PROPFIND OPTIONS REPORT&gt; Require valid-user &lt;/LimitExcept&gt; &lt;/Location&gt; These are only a few simple examples."}, {"start_index": 846971, "end_index": 847465, "text": "A sample configuration for authenticated access &lt;Location /repos&gt; DAV svn SVNParentPath /var/svn # Authentication: Digest AuthName &quot;Subversion repository&quot; AuthType Digest AuthUserFile /etc/svn-auth.htdigest # Authorization: Path-based access control; authenticated users only AuthzSVNAccessFile /path/to/access/file Require valid-user &lt;/Location&gt; A third very popular pattern is to allow a combination of authenticated and anonymous access."}, {"start_index": 848008, "end_index": 848630, "text": "A sample configuration for mixed authenticated/anonymous access &lt;Location /repos&gt; DAV svn SVNParentPath /var/svn # Authentication: Digest AuthName &quot;Subversion repository&quot; AuthType Digest AuthUserFile /etc/svn-auth.htdigest # Authorization: Path-based access control; try anonymous access # first, but authenticate if necessary AuthzSVNAccessFile /path/to/access/file Satisfy Any Require valid-user &lt;/Location&gt; The next step is to create the authorization file containing access rules for particular paths within the repository."}, {"start_index": 851012, "end_index": 851202, "text": "Disabling path checks altogether &lt;Location /repos&gt; DAV svn SVNParentPath /var/svn SVNPathAuthz off &lt;/Location&gt; The SVNPathAuthz directive is on by default."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}, {"start_index": 1216639, "end_index": 1216708, "text": "It&#39;s unlikely that you&#39;ll need to run this command."}]}, {"group_id": 573, "duplicates": [{"start_index": 838608, "end_index": 838762, "text": "The default value of the AuthBasicProvider option is file , so we won&#39;t bother including it in future examples."}, {"start_index": 1113500, "end_index": 1113529, "text": "-Don&#39;t bother reading it."}, {"start_index": 1113557, "end_index": 1113586, "text": "+Don&#39;t bother reading it."}, {"start_index": 1114133, "end_index": 1114174, "text": "4 jess Don&#39;t bother reading it."}, {"start_index": 1115491, "end_index": 1115519, "text": "Don&#39;t bother reading it."}]}, {"group_id": 574, "duplicates": [{"start_index": 846437, "end_index": 846780, "text": "A sample configuration for anonymous access &lt;Location /repos&gt; DAV svn SVNParentPath /var/svn # Authentication: None # Authorization: Path-based access control AuthzSVNAccessFile /path/to/access/file &lt;/Location&gt; On the opposite end of the paranoia scale, you can configure Apache to authenticate all clients."}, {"start_index": 851012, "end_index": 851202, "text": "Disabling path checks altogether &lt;Location /repos&gt; DAV svn SVNParentPath /var/svn SVNPathAuthz off &lt;/Location&gt; The SVNPathAuthz directive is on by default."}]}, {"group_id": 575, "duplicates": [{"start_index": 849782, "end_index": 850018, "text": "If an unreadable path is discovered, it&#39;s omitted from the list of the revision&#39;s changed paths (normally seen with the --verbose ( -v ) option), and the whole log message is suppressed."}, {"start_index": 1247505, "end_index": 1247534, "text": "--verbose ( -v ) Be verbose."}]}, {"group_id": 576, "duplicates": [{"start_index": 859344, "end_index": 859397, "text": "The default value for that option is 100 ."}, {"start_index": 951012, "end_index": 951070, "text": "The default value for this option is -u ."}]}, {"group_id": 577, "duplicates": [{"start_index": 862991, "end_index": 863113, "text": "Extra Goodies We&#39;ve covered most of the authentication and authorization options for Apache and mod_dav_svn ."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 578, "duplicates": [{"start_index": 879453, "end_index": 879551, "text": "SetEnvIf in_repos 0 !do_not_log # Log requests, but only if &quot;do_not_log&quot; isn&#39;t set."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 579, "duplicates": [{"start_index": 885414, "end_index": 885721, "text": "Then log into the master server and configure each of the slave repository URIs to receive data from the master repository on the local disk: $ svnsync init http://slave1.example.com/svn-proxy-sync \\ file:///var/svn/repos Copied properties for revision 0."}, {"start_index": 885722, "end_index": 885850, "text": "$ svnsync init http://slave2.example.com/svn-proxy-sync \\ file:///var/svn/repos Copied properties for revision 0."}, {"start_index": 885851, "end_index": 885979, "text": "$ svnsync init http://slave3.example.com/svn-proxy-sync \\ file:///var/svn/repos Copied properties for revision 0."}]}, {"group_id": 580, "duplicates": [{"start_index": 885981, "end_index": 886138, "text": "# Perform the initial replication $ svnsync sync http://slave1.example.com/svn-proxy-sync \\ file:///var/svn/repos Transmitting file data ...."}, {"start_index": 886195, "end_index": 886225, "text": "Transmitting file data ......."}, {"start_index": 886285, "end_index": 886407, "text": "$ svnsync sync http://slave2.example.com/svn-proxy-sync \\ file:///var/svn/repos Transmitting file data ...."}, {"start_index": 886464, "end_index": 886494, "text": "Transmitting file data ......."}, {"start_index": 886554, "end_index": 886676, "text": "$ svnsync sync http://slave3.example.com/svn-proxy-sync \\ file:///var/svn/repos Transmitting file data ...."}, {"start_index": 886733, "end_index": 886763, "text": "Transmitting file data ......."}]}, {"group_id": 581, "duplicates": [{"start_index": 886764, "end_index": 886785, "text": "Committed revision 2."}, {"start_index": 1117434, "end_index": 1117455, "text": "Committed revision 2."}, {"start_index": 1298750, "end_index": 1298771, "text": "Committed revision 2."}]}, {"group_id": 582, "duplicates": [{"start_index": 889275, "end_index": 889400, "text": "Many teams don&#39;t use Subversion&#39;s locking features at all, so this may be a nonissue for you."}, {"start_index": 1021068, "end_index": 1021128, "text": "After all, Subversion uses Subversion&#39;s APIs, too."}]}, {"group_id": 583, "duplicates": [{"start_index": 892936, "end_index": 893033, "text": "You&#39;d have to configure your slave servers to disallow write access completely."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 584, "duplicates": [{"start_index": 898975, "end_index": 899035, "text": "The default value of this directive is On ."}, {"start_index": 899635, "end_index": 899696, "text": "The default value of this directive is Off ."}, {"start_index": 900031, "end_index": 900092, "text": "The default value of this directive is Off ."}, {"start_index": 900425, "end_index": 900486, "text": "The default value of this directive is Off ."}, {"start_index": 902570, "end_index": 902630, "text": "The default value of this directive is On ."}, {"start_index": 906585, "end_index": 906645, "text": "The default value of this directive is On ."}, {"start_index": 906766, "end_index": 906842, "text": "The default value of this directive is On ."}, {"start_index": 907034, "end_index": 907110, "text": "The default value of this directive is On ."}]}, {"group_id": 585, "duplicates": [{"start_index": 899697, "end_index": 900029, "text": "SVNCacheFullTexts On|Off When set to On , this tells Subversion to cache content fulltexts if sufficient in-memory cache is available, which could offer a significant performance benefit to the server. (See also the SVNInMemoryCacheSize directive.)"}, {"start_index": 900093, "end_index": 900423, "text": "SVNCacheTextDeltas On|Off When set to On , this tells Subversion to cache content deltas if sufficient in-memory cache is available, which could offer a significant performance benefit to the server. (See also the SVNInMemoryCacheSize directive.)"}]}, {"group_id": 586, "duplicates": [{"start_index": 900921, "end_index": 900948, "text": "This directive is optional."}, {"start_index": 902961, "end_index": 903004, "text": "This directive is optional."}]}, {"group_id": 587, "duplicates": [{"start_index": 901816, "end_index": 901983, "text": "In a configuration block for a Subversion repository, either this directive or SVNPath must be present, but not both."}, {"start_index": 902121, "end_index": 902310, "text": "In a configuration block for a Subversion repository, either this directive or SVNParentPath must be present, but not both."}]}, {"group_id": 588, "duplicates": [{"start_index": 904257, "end_index": 904443, "text": "The default value of this option is Off , which means that mod_dav_svn assumes a 7-bit ASCII encoding for its hook script interactions."}, {"start_index": 951012, "end_index": 951070, "text": "The default value for this option is -u ."}]}, {"group_id": 589, "duplicates": [{"start_index": 909498, "end_index": 909635, "text": "You&#39;re also creating a bunch of rules that need to be maintained as projects develop, new users are added, and so on."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 590, "duplicates": [{"start_index": 909738, "end_index": 909866, "text": "Even if somebody accidentally commits a change to something she shouldn&#39;t, it&#39;s easy to undo the change."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 591, "duplicates": [{"start_index": 910277, "end_index": 910498, "text": "Decide whether it&#39;s worth sacrificing some server speed, and remember that there&#39;s very little risk involved; it&#39;s bad to become dependent on technology as a crutch for social problems."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 592, "duplicates": [{"start_index": 912740, "end_index": 913018, "text": "Paths used in access file sections must be specified using Subversion&#39;s internal style , which mostly just means that they are encoded in UTF-8 and use forward slash ( / ) characters as directory separators (even on Windows systems)."}, {"start_index": 1021068, "end_index": 1021128, "text": "After all, Subversion uses Subversion&#39;s APIs, too."}]}, {"group_id": 593, "duplicates": [{"start_index": 914283, "end_index": 914529, "text": "mod_dav_svn uses only the basename of the repository&#39;s root URL Any human-readable name for a repository configured via the SVNReposName httpd.conf directive will be ignored by the authorization subsystem."}, {"start_index": 1184335, "end_index": 1184432, "text": "The content of the repository doesn&#39;t change, but the repository&#39;s root URL does."}]}, {"group_id": 594, "duplicates": [{"start_index": 916323, "end_index": 916758, "text": "Let&#39;s continue our previous example, and grant Sally write access to a child of the branch that she&#39;s otherwise permitted only to read: [calc:/branches/calc/bug-142] harry = rw sally = r # give sally write access only to the &#39;testing&#39; subdir [calc:/branches/calc/bug-142/testing] sally = rw Now Sally can write to the testing subdirectory of the branch, but can still only read other parts."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 595, "duplicates": [{"start_index": 922057, "end_index": 922403, "text": "Simply prepend an ampersand to the alias to distinguish it from a regular username: [groups] calc-developers = &amp;harry, &amp;sally, &amp;joe paint-developers = &amp;frank, &amp;sally, &amp;jane everyone = @calc-developers, @paint-developers You might also choose to use aliases if your users&#39; usernames change frequently."}, {"start_index": 1148448, "end_index": 1148499, "text": "&#39;house.jpg&#39; locked by user &#39;harry&#39;."}, {"start_index": 1205776, "end_index": 1205805, "text": "&#39;house.jpg&#39; unlocked."}]}, {"group_id": 596, "duplicates": [{"start_index": 928247, "end_index": 928567, "text": "Subversion doesn&#39;t tend to be particularly greedy in terms of server resources such as CPU cycles and memory, but any service can benefit from optimizations, especially when usage of the service skyrockets In Subversion&#39;s case, the skyrocketing affect is, of course, due to its cool name."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 597, "duplicates": [{"start_index": 932643, "end_index": 932767, "text": "Supporting Multiple Repository Access Methods You&#39;ve seen how a repository can be accessed in many different ways."}, {"start_index": 968910, "end_index": 968944, "text": "You won&#39;t be prompted anymore."}]}, {"group_id": 598, "duplicates": [{"start_index": 933754, "end_index": 933978, "text": "Assuming you have a Unix-like operating system, a straightforward approach might be to place every potential repository user into a new svn group, and make the repository wholly owned by that group."}, {"start_index": 936881, "end_index": 936928, "text": "Make the repository wholly owned by that group."}]}, {"group_id": 599, "duplicates": [{"start_index": 942444, "end_index": 942627, "text": "The auth directory holds a set of subdirectories that contain pieces of cached information used by Subversion&#39;s various supported authentication methods."}, {"start_index": 1021068, "end_index": 1021128, "text": "After all, Subversion uses Subversion&#39;s APIs, too."}]}, {"group_id": 600, "duplicates": [{"start_index": 945193, "end_index": 947101, "text": "Sample registration entries (.reg) file REGEDIT4 [HKEY_LOCAL_MACHINE\\Software\\Tigris.org\\Subversion\\Servers\\groups] [HKEY_LOCAL_MACHINE\\Software\\Tigris.org\\Subversion\\Servers\\global] &quot;#http-auth-types&quot;=&quot;basic;digest;negotiate&quot; &quot;#http-compression&quot;=&quot;yes&quot; &quot;#http-library&quot;=&quot;&quot; &quot;#http-proxy-exceptions&quot;=&quot;&quot; &quot;#http-proxy-host&quot;=&quot;&quot; &quot;#http-proxy-password&quot;=&quot;&quot; &quot;#http-proxy-port&quot;=&quot;&quot; &quot;#http-proxy-username&quot;=&quot;&quot; &quot;#http-timeout&quot;=&quot;0&quot; &quot;#neon-debug-mask&quot;=&quot;&quot; &quot;#ssl-authority-files&quot;=&quot;&quot; &quot;#ssl-client-cert-file&quot;=&quot;&quot; &quot;#ssl-client-cert-password&quot;=&quot;&quot; &quot;#ssl-pkcs11-provider&quot;=&quot;&quot; &quot;#ssl-trust-default-ca&quot;=&quot;&quot; &quot;#store-auth-creds&quot;=&quot;yes&quot; &quot;#store-passwords&quot;=&quot;yes&quot; &quot;#store-plaintext-passwords&quot;=&quot;ask&quot; &quot;#store-ssl-client-cert-pp&quot;=&quot;yes&quot; &quot;#store-ssl-client-cert-pp-plaintext&quot;=&quot;ask&quot; &quot;#username&quot;=&quot;&quot; [HKEY_CURRENT_USER\\Software\\Tigris.org\\Subversion\\Config\\auth] &quot;#password-stores&quot;=&quot;windows-cryptoapi&quot; [HKEY_CURRENT_USER\\Software\\Tigris.org\\Subversion\\Config\\helpers] &quot;#diff-cmd&quot;=&quot;&quot; &quot;#diff-extensions&quot;=&quot;-u&quot; &quot;#diff3-cmd&quot;=&quot;&quot; &quot;#diff3-has-program-arg&quot;=&quot;&quot; &quot;#editor-cmd&quot;=&quot;notepad&quot; &quot;#merge-tool-cmd&quot;=&quot;&quot; [HKEY_CURRENT_USER\\Software\\Tigris.org\\Subversion\\Config\\tunnels] [HKEY_CURRENT_USER\\Software\\Tigris.org\\Subversion\\Config\\miscellany] &quot;#enable-auto-props&quot;=&quot;no&quot; &quot;#global-ignores&quot;=&quot;*.o *.lo *.la *.al .libs *.so *.so. [0-9]* *.a *.pyc *.pyo *.rej *~ #*# .#* ."}, {"start_index": 947101, "end_index": 947801, "text": "*.swp .DS_Store&quot; &quot;#interactive-conflicts&quot;=&quot;yes&quot; &quot;#log-encoding&quot;=&quot;&quot; &quot;#mime-types-file&quot;=&quot;&quot; &quot;#no-unlock&quot;=&quot;no&quot; &quot;#preserved-conflict-file-exts&quot;=&quot;doc ppt xls od?&quot; &quot;#use-commit-times&quot;=&quot;no&quot; [HKEY_CURRENT_USER\\Software\\Tigris.org\\Subversion\\Config\\auto-props] shows the contents of a .reg file, which contains some of the most commonly used configuration options and their default values. Note the presence of both system-wide (for network proxy-related options) and per-user settings (editor programs and password storage, among others)."}, {"start_index": 953724, "end_index": 953854, "text": "The default value is *.o *.lo *.la *.al .libs *.so *.so. [0-9]* *.a *.pyc *.pyo *.rej *~ #*# .#* ."}]}, {"group_id": 601, "duplicates": [{"start_index": 949372, "end_index": 949628, "text": "store-passwords This option has been deprecated from the config file. It now lives as a per-server configuration item in the servers configuration area. See for details."}, {"start_index": 949629, "end_index": 949886, "text": "store-auth-creds This option has been deprecated from the config file. It now lives as a per-server configuration item in the servers configuration area. See for details."}]}, {"group_id": 602, "duplicates": [{"start_index": 950253, "end_index": 950721, "text": "By default, Subversion uses an internal differencing library setting this option will cause it to perform this task using an external program. See for more details on using such programs. diff-extensions Like the --extensions ( -x ) command-line option, this specifies additional options passed to the file content differencing engine."}, {"start_index": 951305, "end_index": 951781, "text": "By default, Subversion uses an internal differencing library setting this option will cause it to perform this task using an external program. See for more details on using such programs. diff3-has-program-arg This flag should be set to true if the program specified by the diff3-cmd option accepts a --diff-program command-line parameter."}]}, {"group_id": 603, "duplicates": [{"start_index": 950723, "end_index": 950931, "text": "The set of meaningful extension options differs depending on whether the client is using Subversion&#39;s internal differencing engine or an external mechanism."}, {"start_index": 1021068, "end_index": 1021128, "text": "After all, Subversion uses Subversion&#39;s APIs, too."}]}, {"group_id": 604, "duplicates": [{"start_index": 952469, "end_index": 952493, "text": "For more details, see ."}, {"start_index": 1148957, "end_index": 1148984, "text": "For further details, see ."}, {"start_index": 1206164, "end_index": 1206191, "text": "For further details, see ."}, {"start_index": 1238086, "end_index": 1238111, "text": "For details, see ."}]}, {"group_id": 605, "duplicates": [{"start_index": 955420, "end_index": 955634, "text": "mime-types-file This option, new to Subversion 1.5, specifies the path of a MIME types mapping file, such as the mime.types file provided by the Apache HTTP Server."}, {"start_index": 956550, "end_index": 956603, "text": "This option is new to Subversion 1.5."}]}, {"group_id": 606, "duplicates": [{"start_index": 960580, "end_index": 960801, "text": "$ cat ~/.subversion/config [auto-props] *.c = svn:eol-style=native *.html = svn:eol-style=native;svn:mime-type=text/html;; charset=UTF8 *.sh = svn:eol-style=native;svn:executable $ cd projects/myproject $ svn status ?"}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 607, "duplicates": [{"start_index": 963803, "end_index": 963928, "text": "(Note that this setting is only honored by Subversion&#39;s Neon-based HTTP provider module.)"}, {"start_index": 969140, "end_index": 969253, "text": "This setting is only honored by Subversion&#39;s Neon-based HTTP provider module."}]}, {"group_id": 608, "duplicates": [{"start_index": 964084, "end_index": 964234, "text": "The default value is yes (though compression will occur only if that capability is compiled into the network layer)."}, {"start_index": 969939, "end_index": 969982, "text": "The default value is yes ."}]}, {"group_id": 609, "duplicates": [{"start_index": 965933, "end_index": 966175, "text": "It defaults to an empty value, which means that Subversion will not attempt to route HTTP requests through a proxy computer, and will instead attempt to contact the destination machine directly."}, {"start_index": 966273, "end_index": 966303, "text": "It defaults to an empty value."}, {"start_index": 966394, "end_index": 966424, "text": "It defaults to an empty value."}, {"start_index": 966522, "end_index": 966552, "text": "It defaults to an empty value."}]}, {"group_id": 610, "duplicates": [{"start_index": 979514, "end_index": 979707, "text": "Most of this information can be provided to the Subversion command-line client using the --message ( -m ) and --file ( -F ) options with the appropriate subcommands."}, {"start_index": 1094824, "end_index": 1094985, "text": "--force-log Forces a suspicious parameter passed to the --message ( -m ) or --file ( -F ) option to be accepted as valid."}]}, {"group_id": 611, "duplicates": [{"start_index": 983350, "end_index": 983397, "text": "And that&#39;s where things remain today."}, {"start_index": 984184, "end_index": 984249, "text": "And that&#39;s where things get unintuitive for most users."}]}, {"group_id": 612, "duplicates": [{"start_index": 988233, "end_index": 988719, "text": "and are templates for external diff tool wrappers in the Python and Windows batch scripting languages, respectively. diffwrap.py #!/usr/bin/env python import sys import os # Configure your favorite diff program here. DIFF = &quot;/usr/local/bin/my-diff-tool&quot; # Subversion provides the paths we need as the last two parameters. LEFT = sys.argv[-2] RIGHT = sys.argv[-1] # Call the diff command (change the following line to make sense for # your diff program)."}, {"start_index": 990771, "end_index": 991339, "text": "and are templates for external three-way differencing tool wrappers in the Python and Windows batch scripting languages, respectively. diff3wrap.py #!/usr/bin/env python import sys import os # Configure your favorite three-way diff program here. DIFF3 = &quot;/usr/local/bin/my-diff3-tool&quot; # Subversion provides the paths we need as the last three parameters. MINE = sys.argv[-3] OLDER = sys.argv[-2] YOURS = sys.argv[-1] # Call the three-way diff command (change the following line to make # sense for your three-way diff program)."}]}, {"group_id": 613, "duplicates": [{"start_index": 988720, "end_index": 989002, "text": "cmd = [DIFF, &#39;--left&#39;, LEFT, &#39;--right&#39;, RIGHT] os.execv(cmd[0], cmd) # Return an errorcode of 0 if no differences were detected, 1 if some were. # Any other errorcode will be treated as fatal. diffwrap.bat @ECHO OFF REM Configure your favorite diff program here."}, {"start_index": 993947, "end_index": 994295, "text": "cmd = [DIFF3, &#39;--base&#39;, BASE, &#39;--mine&#39;, MINE, &#39;--theirs&#39;, THEIRS, &#39;--outfile&#39;, MERGED] os.execv(cmd[0], cmd) # Return an errorcode of 0 if the conflict was resolved; 1 otherwise. # Any other errorcode will be treated as fatal. mergewrap.bat @ECHO OFF REM Configure your favorite merge program here."}]}, {"group_id": 614, "duplicates": [{"start_index": 989003, "end_index": 989240, "text": "SET DIFF=&quot;C:\\Program Files\\Funky Stuff\\My Diff Tool.exe&quot; REM Subversion provides the paths we need as the last two parameters. REM These are parameters 6 and 7 (unless you use svn diff -x, in REM which case, all bets are off)."}, {"start_index": 991822, "end_index": 992003, "text": "SET DIFF3=&quot;C:\\Program Files\\Funky Stuff\\My Diff3 Tool.exe&quot; REM Subversion provides the paths we need as the last three parameters. REM These are parameters 9, 10, and 11."}]}, {"group_id": 615, "duplicates": [{"start_index": 989478, "end_index": 989527, "text": "REM Any other errorcode will be treated as fatal."}, {"start_index": 991692, "end_index": 991737, "text": "Any other errorcode will be treated as fatal."}, {"start_index": 992610, "end_index": 992655, "text": "Any other errorcode will be treated as fatal."}, {"start_index": 994173, "end_index": 994220, "text": "# Any other errorcode will be treated as fatal."}, {"start_index": 994718, "end_index": 994767, "text": "REM Any other errorcode will be treated as fatal."}]}, {"group_id": 616, "duplicates": [{"start_index": 991340, "end_index": 991554, "text": "cmd = [DIFF3, &#39;--older&#39;, OLDER, &#39;--mine&#39;, MINE, &#39;--yours&#39;, YOURS] os.execv(cmd[0], cmd) # After performing the merge, this script needs to print the contents # of the merged file to stdout."}, {"start_index": 993947, "end_index": 994172, "text": "cmd = [DIFF3, &#39;--base&#39;, BASE, &#39;--mine&#39;, MINE, &#39;--theirs&#39;, THEIRS, &#39;--outfile&#39;, MERGED] os.execv(cmd[0], cmd) # Return an errorcode of 0 if the conflict was resolved; 1 otherwise."}]}, {"group_id": 617, "duplicates": [{"start_index": 991593, "end_index": 991690, "text": "# Return an errorcode of 0 on successful merge, 1 if unresolved conflicts # remain in the result."}, {"start_index": 992507, "end_index": 992608, "text": "REM Return an errorcode of 0 on successful merge, 1 if unresolved conflicts REM remain in the result."}]}, {"group_id": 618, "duplicates": [{"start_index": 991739, "end_index": 991821, "text": "diff3wrap.bat @ECHO OFF REM Configure your favorite three-way diff program here."}, {"start_index": 994222, "end_index": 994295, "text": "mergewrap.bat @ECHO OFF REM Configure your favorite merge program here."}]}, {"group_id": 619, "duplicates": [{"start_index": 996060, "end_index": 996242, "text": "Additionally, Subversion&#39;s API is available not only to other C programs, but also to programs written in higher-level languages such as Python, Perl, Java, and Ruby."}, {"start_index": 1021068, "end_index": 1021128, "text": "After all, Subversion uses Subversion&#39;s APIs, too."}]}, {"group_id": 620, "duplicates": [{"start_index": 1036703, "end_index": 1037113, "text": "*/ printf(&quot;Directory &#39;%s&#39; was successfully added as new revision &quot; &quot;&#39;%ld&#39;.\\n&quot;, new_directory, youngest_rev); } else if (err-&gt;apr_err == SVN_ERR_FS_CONFLICT) { /* Uh-oh. Our commit failed as the result of a conflict * (someone else seems to have made changes to the same area * of the filesystem that we tried to modify)."}, {"start_index": 1037155, "end_index": 1037474, "text": "*/ printf(&quot;A conflict occurred at path &#39;%s&#39; while attempting &quot; &quot;to add directory &#39;%s&#39; to the repository at &#39;%s&#39;.\\n&quot;, conflict_str, new_directory, repos_path); } else { /* Some other error has occurred. Print an error message."}, {"start_index": 1037482, "end_index": 1037934, "text": "*/ printf(&quot;An error occurred while attempting to add directory &#39;%s&#39; &quot; &quot;to the repository at &#39;%s&#39;.\\n&quot;, new_directory, repos_path); } INT_ERR(err); } Note that in , the code could just as easily have committed the transaction using svn_fs_commit_txn() . But the filesystem API knows nothing about the repository library&#39;s hook mechanism."}]}, {"group_id": 621, "duplicates": [{"start_index": 1039461, "end_index": 1039552, "text": "full_path = directory + &#39;/&#39; + name # If the entry is a directory, recurse."}, {"start_index": 1197650, "end_index": 1197692, "text": "&#39;+&#39; History scheduled with commit."}]}, {"group_id": 622, "duplicates": [{"start_index": 1042286, "end_index": 1043693, "text": "A Python status crawler #!/usr/bin/env python &quot;&quot;&quot;Crawl a working copy directory, printing status information.&quot;&quot;&quot; import sys import os.path import getopt import svn.core, svn.client, svn.wc def generate_status_code(status): &quot;&quot;&quot;Translate a status value into a single-character status code, using the same logic as the Subversion command-line client.&quot;&quot;&quot; code_map = { svn.wc.svn_wc_status_none : &#39; &#39;, svn.wc.svn_wc_status_normal : &#39; &#39;, svn.wc.svn_wc_status_added : &#39;A&#39;, svn.wc.svn_wc_status_missing : &#39;!&#39;, svn.wc.svn_wc_status_incomplete : &#39;!&#39;, svn.wc.svn_wc_status_deleted : &#39;D&#39;, svn.wc.svn_wc_status_replaced : &#39;R&#39;, svn.wc.svn_wc_status_modified : &#39;M&#39;, svn.wc.svn_wc_status_conflicted : &#39;C&#39;, svn.wc.svn_wc_status_obstructed : &#39;~&#39;, svn.wc.svn_wc_status_ignored : &#39;I&#39;, svn.wc.svn_wc_status_external : &#39;X&#39;, svn.wc.svn_wc_status_unversioned : &#39;?&#39;, } return code_map.get(status, &#39;?&#39;) def do_status(wc_path, verbose, prefix): # Build a client context baton."}, {"start_index": 1195958, "end_index": 1196001, "text": "&#39;A&#39; Item is scheduled for addition."}, {"start_index": 1196002, "end_index": 1196045, "text": "&#39;D&#39; Item is scheduled for deletion."}, {"start_index": 1196046, "end_index": 1196081, "text": "&#39;M&#39; Item has been modified."}, {"start_index": 1196082, "end_index": 1196138, "text": "&#39;R&#39; Item has been replaced in your working copy."}, {"start_index": 1196451, "end_index": 1196514, "text": "&#39;X&#39; Item is present because of an externals definition."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197144, "end_index": 1197214, "text": "&#39;M&#39; Properties for this item have been modified."}, {"start_index": 1197215, "end_index": 1197347, "text": "&#39;C&#39; Properties for this item are in conflict with property updates received from the repository."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1198194, "end_index": 1198242, "text": "&#39;K&#39; File is locked in this working copy."}, {"start_index": 1198414, "end_index": 1198522, "text": "&#39;T&#39; File was locked in this working copy, but the lock has been stolen and is invalid."}, {"start_index": 1198664, "end_index": 1198774, "text": "&#39;B&#39; File was locked in this working copy, but the lock has been broken and is invalid."}, {"start_index": 1199050, "end_index": 1199100, "text": "&#39;C&#39; Item is the victim of a tree conflict."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 623, "duplicates": [{"start_index": 1043698, "end_index": 1044378, "text": "ctx = svn.client.svn_client_create_context() def _status_callback(path, status): &quot;&quot;&quot;A callback function for svn_client_status.&quot;&quot;&quot; # Print the path, minus the bit that overlaps with the root of # the status crawl text_status = generate_status_code(status.text_status) prop_status = generate_status_code(status.prop_status) prefix_text = &#39;&#39; if prefix is not None: prefix_text = prefix + &quot; &quot; print &#39;%s%s%s %s&#39; % (prefix_text, text_status, prop_status, path) # Do the status crawl, using _status_callback() as our callback function."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 624, "duplicates": [{"start_index": 1049402, "end_index": 1049469, "text": "Your fair use and other rights are in no way affected by the above."}, {"start_index": 1052481, "end_index": 1052497, "text": "Fair Use Rights."}]}, {"group_id": 625, "duplicates": [{"start_index": 1051558, "end_index": 1051832, "text": "For the avoidance of doubt, where the Work is a musical composition or sound recording, the synchronization of the Work in timed-relation with a moving image (&quot;synching&quot;) will be considered a Derivative Work for the purpose of this License."}, {"start_index": 1053619, "end_index": 1053710, "text": "e. For the avoidance of doubt, where the work is a musical composition: i."}]}, {"group_id": 626, "duplicates": [{"start_index": 1053904, "end_index": 1054008, "text": "ASCAP, BMI, SESAC), royalties for the public performance or public digital performance (e.g."}, {"start_index": 1054789, "end_index": 1054861, "text": "SoundExchange), royalties for the public digital performance (e.g."}]}, {"group_id": 627, "duplicates": [{"start_index": 1054247, "end_index": 1054544, "text": "Harry Fox Agency), royalties for any phonorecord You create from the Work (&quot;cover version&quot;) and distribute, subject to the compulsory license created by 17 USC Section 115 of the US Copyright Act (or the equivalent in other jurisdictions)."}, {"start_index": 1054862, "end_index": 1055033, "text": "webcast) of the Work, subject to the compulsory license created by 17 USC Section 114 of the US Copyright Act (or the equivalent in other jurisdictions)."}]}, {"group_id": 628, "duplicates": [{"start_index": 1056647, "end_index": 1056865, "text": "If You create a Collective Work, upon notice from any Licensor You must, to the extent practicable, remove from the Collective Work any reference to such Licensor or the Original Author, as requested."}, {"start_index": 1056866, "end_index": 1057084, "text": "If You create a Derivative Work, upon notice from any Licensor You must, to the extent practicable, remove from the Derivative Work any reference to such Licensor or the Original Author, as requested."}]}, {"group_id": 629, "duplicates": [{"start_index": 1060499, "end_index": 1060744, "text": "Each time You distribute or publicly digitally perform the Work or a Collective Work, the Licensor offers to the recipient a license to the Work on the same terms and conditions as the license granted to You under this License."}, {"start_index": 1060752, "end_index": 1060990, "text": "Each time You distribute or publicly digitally perform a Derivative Work, Licensor offers to the recipient a license to the original Work on the same terms and conditions as the license granted to You under this License."}]}, {"group_id": 630, "duplicates": [{"start_index": 1060499, "end_index": 1060744, "text": "Each time You distribute or publicly digitally perform the Work or a Collective Work, the Licensor offers to the recipient a license to the Work on the same terms and conditions as the license granted to You under this License."}, {"start_index": 1060752, "end_index": 1060990, "text": "Each time You distribute or publicly digitally perform a Derivative Work, Licensor offers to the recipient a license to the original Work on the same terms and conditions as the license granted to You under this License."}]}, {"group_id": 631, "duplicates": [{"start_index": 1070667, "end_index": 1070896, "text": "If the start-commit hook program returns a nonzero exit value, the commit process is stopped, the commit transaction is destroyed, and anything printed to stderr is marshalled back to the client."}, {"start_index": 1072820, "end_index": 1073031, "text": "If the pre-commit hook program returns a nonzero exit value, the commit is aborted, the commit transaction is removed, and anything printed to stderr is marshalled back to the client."}, {"start_index": 1078217, "end_index": 1078395, "text": "If the pre-lock hook program returns a nonzero exit value, the lock action is aborted and anything printed to stderr is marshalled back to the client."}, {"start_index": 1080964, "end_index": 1081146, "text": "If the pre-unlock hook program returns a nonzero exit value, the unlock action is aborted and anything printed to stderr is marshalled back to the client."}]}, {"group_id": 632, "duplicates": [{"start_index": 1074430, "end_index": 1074892, "text": "However, anything that the hook printed to stderr will be marshalled back to the client, making it easier to diagnose hook failures. Input parameter(s) The command-line arguments passed to the hook program, in order, are: Repository path Revision number created by the commit Common uses Commit notification; tool integration hook scripts pre-revprop-change pre-revprop-change Notification of a revision property change attempt."}, {"start_index": 1079812, "end_index": 1080262, "text": "However, anything that the hook printed to stderr will be marshalled back to the client, making it easier to diagnose hook failures. Input parameter(s) The command-line arguments passed to the hook program, in order, are: Repository path Authenticated username of the person who locked the paths Additionally, the list of paths locked is passed to the hook program via standard input, one path per line."}, {"start_index": 1081986, "end_index": 1082440, "text": "However, anything that the hook printed to stderr will be marshalled back to the client, making it easier to diagnose hook failures. Input parameter(s) The command-line arguments passed to the hook program, in order, are: Repository path Authenticated username of the person who unlocked the paths Additionally, the list of paths unlocked is passed to the hook program via standard input, one path per line."}]}, {"group_id": 633, "duplicates": [{"start_index": 1074893, "end_index": 1075180, "text": "pre-revprop-change REPOS-PATH REVISION USER PROPNAME ACTION Description The pre-revprop-change hook is run immediately prior to the modification of a revision property when performed outside the scope of a normal commit."}, {"start_index": 1076295, "end_index": 1076581, "text": "post-revprop-change REPOS-PATH REVISION USER PROPNAME ACTION Description The post-revprop-change hook is run immediately after the modification of a revision property when performed outside the scope of a normal commit."}]}, {"group_id": 634, "duplicates": [{"start_index": 1075657, "end_index": 1076294, "text": "Input parameter(s) The command-line arguments passed to the hook program, in order, are: Repository path Revision whose property is about to be modified Authenticated username attempting the property change Name of the property changed Change description: A (added), D (deleted), or M (modified) Additionally, Subversion passes the intended new value of the property to the hook program via standard input. Common uses Access control; change validation and control hook scripts post-revprop-change post-revprop-change Notification of a successful revision property change."}, {"start_index": 1077183, "end_index": 1077732, "text": "Input parameter(s) The command-line arguments passed to the hook program, in order, are: Repository path Revision whose property was modified Authenticated username of the person making the change Name of the property changed Change description: A (added), D (deleted), or M (modified) Additionally, Subversion passes to the hook program, via standard input, the previous value of the property. Common uses Property change notification hook scripts pre-lock pre-lock Notification of a path lock attempt."}]}, {"group_id": 635, "duplicates": [{"start_index": 1076797, "end_index": 1076876, "text": "It is typically used to send email notification of the property change."}, {"start_index": 1079594, "end_index": 1079668, "text": "It is typically used to send email notification of the lock event."}, {"start_index": 1081762, "end_index": 1081838, "text": "It is typically used to send email notification of the unlock event."}]}, {"group_id": 636, "duplicates": [{"start_index": 1079812, "end_index": 1080567, "text": "However, anything that the hook printed to stderr will be marshalled back to the client, making it easier to diagnose hook failures. Input parameter(s) The command-line arguments passed to the hook program, in order, are: Repository path Authenticated username of the person who locked the paths Additionally, the list of paths locked is passed to the hook program via standard input, one path per line. Common uses Lock notification hook scripts pre-unlock pre-unlock Notification of a path unlock attempt. pre-unlock REPOS-PATH PATH USER TOKEN BREAK-UNLOCK Description The pre-unlock hook runs whenever someone attempts to remove a lock on a file."}, {"start_index": 1081986, "end_index": 1082771, "text": "However, anything that the hook printed to stderr will be marshalled back to the client, making it easier to diagnose hook failures. Input parameter(s) The command-line arguments passed to the hook program, in order, are: Repository path Authenticated username of the person who unlocked the paths Additionally, the list of paths unlocked is passed to the hook program via standard input, one path per line. Common uses Unlock notification svn Reference Subversion Command-Line Client svn is the official command-line client of Subversion. Its functionality is offered via a collection of task-specific subcommands, most of which accept a number of options for fine-grained control of the program&#39;s behavior."}]}, {"group_id": 637, "duplicates": [{"start_index": 1079004, "end_index": 1079592, "text": "Input parameter(s) The command-line arguments passed to the hook program, in order, are: Repository path Versioned path that is to be locked Authenticated username of the person attempting the lock Comment provided when the lock was created 1 if the user is attempting to steal an existing lock; 0 otherwise Common uses Access control hook scripts post-lock post-lock Notification of a successful path lock. post-lock REPOS-PATH USER Description The post-lock hook runs after one or more paths have been locked."}, {"start_index": 1081147, "end_index": 1081760, "text": "Input parameter(s) The command-line arguments passed to the hook program, in order, are: Repository path Versioned path which is to be unlocked Authenticated username of the person attempting the unlock Lock token associated with the lock which is to be removed 1 if the user is attempting to break the lock; 0 otherwise Common uses Access control hook scripts post-unlock post-unlock Notification of a successful path unlock. post-unlock REPOS-PATH USER Description The post-unlock hook runs after one or more paths have been unlocked."}]}, {"group_id": 638, "duplicates": [{"start_index": 1083073, "end_index": 1083539, "text": "For example, all of the following are valid ways to use svn status , and are interpreted in exactly the same way: $ svn -vq status myfile $ svn status -v -q myfile $ svn -q status -v myfile $ svn status -vq myfile $ svn status myfile -qv The following sections describe each of the various subcommands and options provided by the svn command-line client program, including some examples of each subcommand&#39;s typical uses."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 639, "duplicates": [{"start_index": 1083777, "end_index": 1083903, "text": "For example, --verbose ( -v ) always means verbose output, regardless of the subcommand you use it with."}, {"start_index": 1247505, "end_index": 1247534, "text": "--verbose ( -v ) Be verbose."}]}, {"group_id": 640, "duplicates": [{"start_index": 1087386, "end_index": 1087628, "text": "mine-conflict ( mc ) Resolve conflicted files by preferring local modifications over the changes fetched from the server in conflicting regions of each file&#39;s content."}, {"start_index": 1087629, "end_index": 1087873, "text": "theirs-conflict ( tc ) Resolve conflicted files by preferring the changes fetched from the server over local modifications in conflicting regions of each file&#39;s content."}]}, {"group_id": 641, "duplicates": [{"start_index": 1089638, "end_index": 1091771, "text": "--config-dir DIR Instructs Subversion to read configuration information from the specified directory instead of the default location ( .subversion in the user&#39;s home directory). This option is accepted by all svn subcommands. --config-option CONFSPEC Sets, for the duration of the command, the value of a runtime configuration option. CONFSPEC is a string which specifies the configuration option namespace, name and value that you&#39;d like to assign, formatted as FILE : SECTION : OPTION =[ VALUE ]. In this syntax, FILE and SECTION are the runtime configuration file (either config or servers ) and the section thereof, respectively, which contain the option whose value you wish to change. OPTION is, of course, the option itself, and VALUE the value (if any) you wish to assign to the option. For example, to temporarily disable the use of the automatic property setting feature, use --config-option=config:miscellany:enable-auto-props=no . You can use this option multiple times to change multiple option values simultaneously. This option is accepted by all svn subcommands. --depth ARG Instructs Subversion to limit the scope of an operation to a particular tree depth. ARG is one of empty (only the target itself), files (the target and any immediate file children thereof), immediates (the target and any immediate children thereof), or infinity (the target and all of its descendants full recursion). --diff Enables a special output mode for svn log which includes a difference report (a la svn diff ) as part of each revision&#39;s information. --diff-cmd CMD Specifies an external program to use to show differences between files."}, {"start_index": 1287088, "end_index": 1289447, "text": "--config-dir DIR Instructs Subversion to read configuration information from the specified directory instead of the default location ( .subversion in the user&#39;s home directory). --config-option CONFSPEC Sets, for the duration of the command, the value of a runtime configuration option. CONFSPEC is a string which specifies the configuration option namespace, name and value that you&#39;d like to assign, formatted as FILE : SECTION : OPTION =[ VALUE ]. In this syntax, FILE and SECTION are the runtime configuration file (either config or servers ) and the section thereof, respectively, which contain the option whose value you wish to change. OPTION is, of course, the option itself, and VALUE the value (if any) you wish to assign to the option. For example, to temporarily disable the use of the automatic property setting feature, use --config-option=servers:global:http-library=serf . You can use this option multiple times to change multiple option values simultaneously. --disable-locking Causes svnsync to bypass its own exclusive access mechanisms and operate on the assumption that its exclusive access to the mirror repository is being guaranteed through some other, out-of-band mechanism. --no-auth-cache Prevents caching of authentication information (e.g., username and password) in the Subversion runtime configuration directories. --non-interactive In the case of an authentication failure or insufficient credentials, prevents prompting for credentials (e.g., username or password). This is useful if you&#39;re running Subversion inside an automated script and it&#39;s more appropriate to have Subversion fail than to prompt for more information. --quiet ( -q ) Requests that the client print only essential information while performing an operation. --revision ( -r ) ARG Used by svnsync copy-revprops to specify a particular revision or revision range on which to operate."}]}, {"group_id": 642, "duplicates": [{"start_index": 1092980, "end_index": 1094823, "text": "--extensions ( -x ) ARG Specifies customizations which Subversion should make when performing difference calculations. Valid extensions include: --ignore-space-change ( -b ) Ignore changes in the amount of white space. --ignore-all-space ( -w ) Ignore all white space. --ignore-eol-style Ignore changes in EOL (end-of-line) style. --show-c-function ( -p ) Show C function names in the diff output. --unified ( -u ) Show three lines of unified diff context. The default value of ARG is -u . If you wish to pass multiple arguments, you must enclose all of them in quotes. Note that when Subversion is configured to invoke an external diff command, the value of the --extension ( -x ) option isn&#39;t restricted to the previously mentioned options, but may be any additional arguments which Subversion should pass to that command. --file ( -F ) FILENAME Uses the contents of the named file for the specified subcommand. Different subcommands do different things with this content. For example, svn commit uses the content as a commit log message, whereas svn propset uses it as a property value. --force Forces a particular command or operation to run. Subversion will prevent you from performing some operations in normal usage, but you can pass this option to tell Subversion I know what I&#39;m doing as well as the possible repercussions of doing it, so let me at &#39;em. This option is the programmatic equivalent of doing your own electrical work with the power on if you don&#39;t know what you&#39;re doing, you&#39;re likely to get a nasty shock."}, {"start_index": 1245010, "end_index": 1246760, "text": "--extensions ( -x ) ARG Specifies customizations which Subversion should make when performing difference calculations. Valid extensions include: --ignore-space-change ( -b ) Ignore changes in the amount of white space. --ignore-all-space ( -w ) Ignore all white space. --ignore-eol-style Ignore changes in EOL (end-of-line) style. --show-c-function ( -p ) Show C function names in the diff output. --unified ( -u ) Show three lines of unified diff context. The default value is -u . Note that when Subversion is configured to invoke an external diff command, the value of the --extension ( -x ) option isn&#39;t restricted to the previously mentioned options, but may be any additional arguments which Subversion should pass to that command. If you wish to pass multiple arguments, you must enclose all of them in quotes. --full-paths Causes svnlook tree to display full paths instead of hierarchical, indented path components. --limit ( -l ) ARG Limit output to a maximum number of ARG items. --no-diff-deleted Prevents svnlook diff from printing differences for deleted files. The default behavior when a file is deleted in a transaction/revision is to print the same differences that you would see if you had left the file but removed all the content. --no-diff-added Prevents svnlook diff from printing differences for added files. The default behavior when you add a file is to print the same differences that you would see if you had added the entire contents of an existing (empty) file."}]}, {"group_id": 643, "duplicates": [{"start_index": 1095851, "end_index": 1095871, "text": "--help ( -h , -? )"}, {"start_index": 1268004, "end_index": 1268036, "text": "--help ( -h , -? )"}]}, {"group_id": 644, "duplicates": [{"start_index": 1097753, "end_index": 1097986, "text": "--no-auth-cache Prevents caching of authentication information (e.g., username and password) in the Subversion runtime configuration directories. This option is accepted by all svn subcommands."}, {"start_index": 1268173, "end_index": 1268460, "text": "--no-auth-cache Prevent caching of authentication information (e.g., username and password) in the Subversion runtime configuration directories. --non-interactive Disable all interactive prompting (e.g., requests for authentication credentials)."}, {"start_index": 1275875, "end_index": 1276221, "text": "--no-auth-cache Prevents caching of authentication information (e.g., username and password) in the Subversion runtime configuration directories. --non-interactive In the case of an authentication failure or insufficient credentials, prevents prompting for credentials (e.g., username or password)."}]}, {"group_id": 645, "duplicates": [{"start_index": 1099191, "end_index": 1099456, "text": "This is useful if you&#39;re running Subversion inside an automated script and it&#39;s more appropriate to have Subversion fail than to prompt for more information. This option is accepted by all svn subcommands."}, {"start_index": 1276223, "end_index": 1276533, "text": "This is useful if you&#39;re running Subversion inside an automated script and it&#39;s more appropriate to have Subversion fail than to prompt for more information. --password PASSWD Specifies the password to use when authenticating against a Subversion server."}]}, {"group_id": 646, "duplicates": [{"start_index": 1100694, "end_index": 1101101, "text": "--password PASSWD Specifies the password to use when authenticating against a Subversion server. If not provided, or if incorrect, Subversion will prompt you for this information as needed. This option is accepted by all svn subcommands. --quiet ( -q ) Requests that the client print only essential information while performing an operation."}, {"start_index": 1276425, "end_index": 1276920, "text": "--password PASSWD Specifies the password to use when authenticating against a Subversion server. If not provided, or if incorrect, Subversion will prompt you for this information as needed. --quiet ( -q ) Requests that the client print only essential information while performing an operation. --revision ( -r ) ARG Used by svnsync copy-revprops to specify a particular revision or revision range on which to operate."}]}, {"group_id": 647, "duplicates": [{"start_index": 1103045, "end_index": 1103380, "text": "--revprop Operates on a revision property instead of a property specific to a file or directory. This option requires that you also pass a revision with the --revision ( -r ) option. --search ARG Filters log messages to show only those that match the search pattern ARG ."}, {"start_index": 1246917, "end_index": 1247306, "text": "--revprop Operates on a revision property instead of a property specific to a file or directory. This option requires that you also pass a revision with the --revision ( -r ) option. --show-inherited-props Works with svnlook propget and svnlook proplist to display the versioned properties inherited by a path."}]}, {"group_id": 648, "duplicates": [{"start_index": 1103792, "end_index": 1104075, "text": "If --limit is used, it restricts the number of log messages searched, rather than restricting the output to a particular number of matching log messages. The search pattern may include &quot;glob syntax&quot; wildcards: ?"}, {"start_index": 1160374, "end_index": 1160683, "text": "Therefore, if --limit is used, it restricts the number of log messages searched, rather than restricting the output to a particular number of matching log messages. svn subcommands merge svn merge Apply the differences between two sources to a working copy path."}]}, {"group_id": 649, "duplicates": [{"start_index": 1104106, "end_index": 1104233, "text": "* Matches a sequence of arbitrary characters. [ABC] Matches any of the characters listed inside the brackets."}, {"start_index": 1158598, "end_index": 1158764, "text": "* Matches a sequence of arbitrary characters. [ABC] Matches any of the characters listed inside the brackets."}]}, {"group_id": 650, "duplicates": [{"start_index": 1107575, "end_index": 1107638, "text": "This option is accepted by all svn subcommands."}, {"start_index": 1107964, "end_index": 1108027, "text": "This option is accepted by all svn subcommands."}]}, {"group_id": 651, "duplicates": [{"start_index": 1107739, "end_index": 1107963, "text": "--username NAME Specifies the username to use when authenticating against a Subversion server. If not provided, or if incorrect, Subversion will prompt you for this information as needed."}, {"start_index": 1277048, "end_index": 1277272, "text": "--username NAME Specifies the username to use when authenticating against a Subversion server. If not provided, or if incorrect, Subversion will prompt you for this information as needed."}]}, {"group_id": 652, "duplicates": [{"start_index": 1108028, "end_index": 1108152, "text": "--verbose ( -v ) Requests that the client print out as much information as it can while running any subcommand."}, {"start_index": 1247505, "end_index": 1247534, "text": "--verbose ( -v ) Be verbose."}]}, {"group_id": 653, "duplicates": [{"start_index": 1110904, "end_index": 1111478, "text": "To override the default behavior and force Subversion to recurse into already-versioned directories, pass the --force option: $ svn add versioned-dir svn: warning: W150002: &#39;/home/cmpilato/projects/subversion/site&#39; is already un\\ der version control $ svn add versioned-dir --force A versioned-dir/foo.c A versioned-dir/somedir/bar.c A (bin) versioned-dir/otherdir/docs/baz.doc svn subcommands blame svn blame (praise, annotate, ann) Show author and revision information inline for the specified files or URLs."}, {"start_index": 1111505, "end_index": 1111601, "text": "Description Show author and revision information inline for the specified files or URLs."}]}, {"group_id": 654, "duplicates": [{"start_index": 1111479, "end_index": 1111504, "text": "svn blame TARGET[@REV]..."}, {"start_index": 1115126, "end_index": 1115149, "text": "svn cat TARGET[@REV]..."}]}, {"group_id": 655, "duplicates": [{"start_index": 1111974, "end_index": 1112267, "text": "5 harry Don&#39;t bother reading it. The boss is a knucklehead. 3 sally Now, just because svn blame says that Harry last modified readme.txt in revision 5, understand that this subcommand is by default very picky about what constitutes a change."}, {"start_index": 1115491, "end_index": 1115594, "text": "Don&#39;t bother reading it. The boss is a knucklehead. INSTRUCTIONS ============ Step 1: Do this."}]}, {"group_id": 656, "duplicates": [{"start_index": 1113500, "end_index": 1113556, "text": "-Don&#39;t bother reading it. The boss is a knucklehead."}, {"start_index": 1113557, "end_index": 1113614, "text": "+Don&#39;t bother reading it. The boss is a knucklehead."}, {"start_index": 1114133, "end_index": 1114202, "text": "4 jess Don&#39;t bother reading it. The boss is a knucklehead."}]}, {"group_id": 657, "duplicates": [{"start_index": 1115596, "end_index": 1115613, "text": "Step 2: Do that."}, {"start_index": 1115796, "end_index": 1115813, "text": "Step 2: Do that."}]}, {"group_id": 658, "duplicates": [{"start_index": 1116917, "end_index": 1117433, "text": "Options Example Edit three files, add them to a changelist, then commit only files in that changelist: $ svn changelist issue1729 foo.c bar.c baz.c A [issue1729] foo.c A [issue1729] bar.c A [issue1729] baz.c $ svn status A someotherfile.c A test/sometest.c --- Changelist &#39;issue1729&#39;: A foo.c A bar.c A baz.c $ svn commit --changelist issue1729 -m &quot;Fixing Issue 1729.&quot; Adding bar.c Adding baz.c Adding foo.c Transmitting file data ..."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 659, "duplicates": [{"start_index": 1117456, "end_index": 1117627, "text": "$ svn status A someotherfile.c A test/sometest.c $ Note that in the previous example, only the files in changelist issue1729 were committed."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 660, "duplicates": [{"start_index": 1117805, "end_index": 1117899, "text": "If PATH is omitted, the basename of the URL will be used as the destination."}, {"start_index": 1141045, "end_index": 1141085, "text": "If PATH is omitted, ."}]}, {"group_id": 661, "duplicates": [{"start_index": 1119221, "end_index": 1119629, "text": "), you can restart it either by issuing the identical checkout command again or by updating the incomplete working copy: $ svn checkout file:///var/svn/repos/test mine A mine/a A mine/b ^C svn: E200015: Caught signal $ svn checkout file:///var/svn/repos/test mine A mine/c ^C svn: E200015: Caught signal $ svn update mine Updating &#39;mine&#39;: A mine/d Updated to revision 20."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}]}, {"group_id": 662, "duplicates": [{"start_index": 1121259, "end_index": 1121543, "text": "$ svn status wc M project/lib/file.c $ svn diff wc Index: project/lib/file.c =================================================================== --- project/lib/file.c (revision 1) +++ project/lib/file.c (working copy) @@ -3 +0,0 @@ -/* file.c: Code for acting file-ishly."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 663, "duplicates": [{"start_index": 1122994, "end_index": 1123239, "text": "$ svn status newproject $ svn subcommands cleanup svn cleanup Recursively clean up the working copy svn cleanup [PATH...] Description Recursively clean up the working copy, removing working copy locks and resuming unfinished operations."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 664, "duplicates": [{"start_index": 1126084, "end_index": 1126328, "text": "To commit a file scheduled for deletion: $ svn commit -m &quot;removed file &#39;c&#39;.&quot; Deleting c Committed revision 7. svn subcommands copy svn copy (cp) Copy a file or directory in a working copy or in the repository."}, {"start_index": 1196082, "end_index": 1196138, "text": "&#39;R&#39; Item has been replaced in your working copy."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1198194, "end_index": 1198242, "text": "&#39;K&#39; File is locked in this working copy."}, {"start_index": 1198414, "end_index": 1198522, "text": "&#39;T&#39; File was locked in this working copy, but the lock has been stolen and is invalid."}, {"start_index": 1198664, "end_index": 1198774, "text": "&#39;B&#39; File was locked in this working copy, but the lock has been broken and is invalid."}, {"start_index": 1199050, "end_index": 1199100, "text": "&#39;C&#39; Item is the victim of a tree conflict."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 665, "duplicates": [{"start_index": 1126870, "end_index": 1126906, "text": "URL URL Complete server-side copy."}, {"start_index": 1169235, "end_index": 1169273, "text": "URL URL Complete server-side rename."}]}, {"group_id": 666, "duplicates": [{"start_index": 1127319, "end_index": 1128102, "text": "Options Examples Copy an item within your working copy (this schedules the copy nothing goes into the repository until you commit): $ svn copy foo.txt bar.txt A bar.txt $ svn status A + bar.txt Copy several files in a working copy into a subdirectory: $ svn copy bat.c baz.c qux.c src A src/bat.c A src/baz.c A src/qux.c Copy revision 8 of bat.c into your working copy under a different name: $ svn copy -r 8 bat.c ya-old-bat.c A ya-old-bat.c Copy an item in your working copy to a URL in the repository (this is an immediate commit, so you must supply a commit message): $ svn copy near.txt file:///var/svn/repos/test/far-away.txt -m &quot;Remote copy.&quot; Committed revision 8."}, {"start_index": 1131593, "end_index": 1131607, "text": "$ svn status ?"}]}, {"group_id": 667, "duplicates": [{"start_index": 1130187, "end_index": 1130330, "text": "$ svn delete myfile D myfile $ svn commit -m &quot;Deleted file &#39;myfile&#39;.&quot; Deleting myfile Transmitting file data ."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 668, "duplicates": [{"start_index": 1130355, "end_index": 1130575, "text": "Deleting a URL, however, is immediate, so you have to supply a log message: $ svn delete -m &quot;Deleting file &#39;yourfile&#39;&quot; \\ file:///var/svn/repos/test/yourfile Committed revision 15."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 669, "duplicates": [{"start_index": 1132132, "end_index": 1132340, "text": "diff [-c M | -r N[:M]] [TARGET[@REV]...] diff [-r N[:M]] --old=OLD-TGT[@OLDREV] [--new=NEW-TGT[@NEWREV]] [PATH...] diff OLD-URL[@OLDREV] NEW-URL[@NEWREV] Description Display the differences between two paths."}, {"start_index": 1133786, "end_index": 1133927, "text": "svn diff OLD-URL[@OLDREV] NEW-URL[@NEWREV] is shorthand for svn diff --old=OLD-URL[@OLDREV] --new=NEW-URL[@NEWREV]."}, {"start_index": 1134021, "end_index": 1134137, "text": "svn diff [-r N[:M]] URL1[@N] URL2[@M] is shorthand for svn diff [-r N[:M]] --old=URL1 --new=URL2 ."}]}, {"group_id": 670, "duplicates": [{"start_index": 1134554, "end_index": 1134726, "text": "If a --revision ( -r ) option is specified in this scenario, though, it means: --revision N:M The server compares TARGET@N and TARGET@M ."}, {"start_index": 1134727, "end_index": 1134824, "text": "--revision N The client compares TARGET@N against the working copy."}]}, {"group_id": 671, "duplicates": [{"start_index": 1135544, "end_index": 1138985, "text": "Options Examples Compare BASE and your working copy (one of the most popular uses of svn diff ): $ svn diff COMMITTERS Index: COMMITTERS =================================================================== --- COMMITTERS (revision 4404) +++ COMMITTERS (working copy) See what changed in the file COMMITTERS revision 9115: $ svn diff -c 9115 COMMITTERS Index: COMMITTERS =================================================================== --- COMMITTERS (revision 3900) +++ COMMITTERS (working copy) See how your working copy&#39;s modifications compare against an older revision: $ svn diff -r 3900 COMMITTERS Index: COMMITTERS =================================================================== --- COMMITTERS (revision 3900) +++ COMMITTERS (working copy) Compare revision 3000 to revision 3500 using @ syntax: $ svn diff http://svn.collab.net/repos/svn/trunk/COMMITTERS@3000 \\ http://svn.collab.net/repos/svn/trunk/COMMITTERS@3500 Index: COMMITTERS =================================================================== --- COMMITTERS (revision 3000) +++ COMMITTERS (revision 3500) Compare revision 3000 to revision 3500 using range notation (pass only the one URL in this case): $ svn diff -r 3000:3500 http://svn.collab.net/repos/svn/trunk/COMMITTERS Index: COMMITTERS =================================================================== --- COMMITTERS (revision 3000) +++ COMMITTERS (revision 3500) Compare revision 3000 to revision 3500 of all the files in trunk using range notation: $ svn diff -r 3000:3500 http://svn.collab.net/repos/svn/trunk Compare revision 3000 to revision 3500 of only three files in trunk using range notation: $ svn diff -r 3000:3500 --old http://svn.collab.net/repos/svn/trunk \\ COMMITTERS README HACKING If you have a working copy, you can obtain the differences without typing in the long URLs: $ svn diff -r 3000:3500 COMMITTERS Index: COMMITTERS =================================================================== --- COMMITTERS (revision 3000) +++ COMMITTERS (revision 3500) Use --diff-cmd CMD --extensions ( -x ) to pass arguments directly to the external diff program: $ svn diff --diff-cmd /usr/bin/diff -x &quot;-i -b&quot; COMMITTERS Index: COMMITTERS =================================================================== 0a1,2 &gt; This is a test &gt; $ Lastly, you can use the --xml option along with the --summarize option to view XML describing the changes that occurred between revisions, but not the contents of the diff itself: $ svn diff --summarize --xml http://svn.red-bean.com/repos/test@r2 \\ http://svn.red-bean.com/repos/test &lt;?xml version=&quot;1.0&quot;?&gt; &lt;diff&gt; &lt;paths&gt; &lt;path props=&quot;none&quot; kind=&quot;file&quot; item=&quot;modified&quot;&gt;http://svn.red-bean.com/repos/test/sandwich.txt&lt;/path&gt; &lt;path props=&quot;none&quot; kind=&quot;file&quot; item=&quot;deleted&quot;&gt;http://svn.red-bean.com/repos/test/burrito.txt&lt;/path&gt; &lt;path props=&quot;none&quot; kind=&quot;dir&quot; item=&quot;added&quot;&gt;http://svn.red-bean.com/repos/test/snacks&lt;/path&gt; &lt;/paths&gt; &lt;/diff&gt; svn subcommands export svn export Export a clean directory tree."}, {"start_index": 1179750, "end_index": 1180019, "text": "&lt;?xml version=&quot;1.0&quot;?&gt; &lt;properties&gt; &lt;target path=&quot;&quot;&gt; &lt;property name=&quot;svn:ignore&quot;&gt;*.o &lt;/property&gt; &lt;/target&gt; &lt;/properties&gt; svn subcommands proplist svn proplist (plist, pl) List all properties."}, {"start_index": 1200958, "end_index": 1202088, "text": "The most information you can get out of the status subcommand is as follows: $ svn status -u -v wc M 965 938 sally wc/bar.c * 965 922 harry wc/foo.c A + 965 687 harry wc/qax.c 965 687 harry wc/zig.c Status against revision: 981 Lastly, you can get svn status output in XML format with the --xml option: $ svn status --xml wc &lt;?xml version=&quot;1.0&quot;?&gt; &lt;status&gt; &lt;target path=&quot;wc&quot;&gt; &lt;entry path=&quot;qax.c&quot;&gt; &lt;wc-status props=&quot;none&quot; item=&quot;added&quot; revision=&quot;0&quot;&gt; &lt;/wc-status&gt; &lt;/entry&gt; &lt;entry path=&quot;bar.c&quot;&gt; &lt;wc-status props=&quot;normal&quot; item=&quot;modified&quot; revision=&quot;965&quot;&gt; &lt;commit revision=&quot;965&quot;&gt; &lt;author&gt;sally&lt;/author&gt; &lt;date&gt;2008-05-28T06:35:53.048870Z&lt;/date&gt; &lt;/commit&gt; &lt;/wc-status&gt; &lt;/entry&gt; &lt;/target&gt; &lt;/status&gt; For many more examples of svn status , see ."}]}, {"group_id": 672, "duplicates": [{"start_index": 1139267, "end_index": 1139382, "text": "If PATH is omitted, the last component of the URL is used for the local directory name."}, {"start_index": 1141045, "end_index": 1141085, "text": "If PATH is omitted, ."}]}, {"group_id": 673, "duplicates": [{"start_index": 1141562, "end_index": 1141754, "text": "$ svn import -m &quot;New import&quot; myproj \\ http://svn.red-bean.com/repos/trunk/misc Adding myproj/sample.txt Transmitting file data ......... Committed revision 16."}, {"start_index": 1141856, "end_index": 1142135, "text": "If that&#39;s what you want, simply add myproj to the end of the URL: $ svn import -m &quot;New import&quot; myproj \\ http://svn.red-bean.com/repos/trunk/misc/myproj Adding myproj/sample.txt Transmitting file data ......... Committed revision 16."}]}, {"group_id": 674, "duplicates": [{"start_index": 1143064, "end_index": 1145980, "text": "It will show information for files: $ svn info foo.c Path: foo.c Name: foo.c Working Copy Root Path: /home/sally/projects/test URL: http://svn.red-bean.com/repos/test/foo.c Repository Root: http://svn.red-bean.com/repos/test Repository UUID: 5e7d134a-54fb-0310-bd04-b611643e5c25 Revision: 4417 Node Kind: file Schedule: normal Last Changed Author: sally Last Changed Rev: 20 Last Changed Date: 2003-01-13 16:43:13 -0600 (Mon, 13 Jan 2003) Text Last Updated: 2003-01-16 21:18:16 -0600 (Thu, 16 Jan 2003) Properties Last Updated: 2003-01-13 21:50:19 -0600 (Mon, 13 Jan 2003) Checksum: d6aeb60b0662ccceb6bce4bac344cb66 It will also show information for directories: $ svn info vendors Path: vendors Working Copy Root Path: /home/sally/projects/test URL: http://svn.red-bean.com/repos/test/vendors Repository Root: http://svn.red-bean.com/repos/test Repository UUID: 5e7d134a-54fb-0310-bd04-b611643e5c25 Revision: 19 Node Kind: directory Schedule: normal Last Changed Author: harry Last Changed Rev: 19 Last Changed Date: 2003-01-16 23:21:19 -0600 (Thu, 16 Jan 2003) Properties Last Updated: 2003-01-16 23:39:02 -0600 (Thu, 16 Jan 2003) svn info also acts on URLs (also note that the file readme.doc in this example is locked, so lock information is also provided): $ svn info http://svn.red-bean.com/repos/test/readme.doc Path: readme.doc Name: readme.doc URL: http://svn.red-bean.com/repos/test/readme.doc Repository Root: http://svn.red-bean.com/repos/test Repository UUID: 5e7d134a-54fb-0310-bd04-b611643e5c25 Revision: 1 Node Kind: file Schedule: normal Last Changed Author: sally Last Changed Rev: 42 Last Changed Date: 2003-01-14 23:21:19 -0600 (Tue, 14 Jan 2003) Lock Token: opaquelocktoken:14011d4b-54fb-0310-8541-dbd16bd471b2 Lock Owner: harry Lock Created: 2003-01-15 17:35:12 -0600 (Wed, 15 Jan 2003) Lock Comment (1 line): My test lock comment Lastly, svn info output is available in XML format by passing the --xml option: $ svn info --xml http://svn.red-bean.com/repos/test &lt;?xml version=&quot;1.0&quot;?&gt; &lt;info&gt; &lt;entry kind=&quot;dir&quot; path=&quot;.&quot; revision=&quot;1&quot;&gt; &lt;url&gt;http://svn.red-bean.com/repos/test&lt;/url&gt; &lt;repository&gt; &lt;root&gt;http://svn.red-bean.com/repos/test&lt;/root&gt; &lt;uuid&gt;5e7d134a-54fb-0310-bd04-b611643e5c25&lt;/uuid&gt; &lt;/repository&gt; &lt;wc-info&gt; &lt;schedule&gt;normal&lt;/schedule&gt; &lt;depth&gt;infinity&lt;/depth&gt; &lt;/wc-info&gt; &lt;commit revision=&quot;1&quot;&gt; &lt;author&gt;sally&lt;/author&gt; &lt;date&gt;2003-01-15T23:35:12.847647Z&lt;/date&gt; &lt;/commit&gt; &lt;/entry&gt; &lt;/info&gt; svn subcommands list svn list (ls) List directory entries in the repository. svn list [TARGET[@REV]...] Description List each TARGET file and the contents of each TARGET directory as they exist in the repository."}, {"start_index": 1179750, "end_index": 1180166, "text": "&lt;?xml version=&quot;1.0&quot;?&gt; &lt;properties&gt; &lt;target path=&quot;&quot;&gt; &lt;property name=&quot;svn:ignore&quot;&gt;*.o &lt;/property&gt; &lt;/target&gt; &lt;/properties&gt; svn subcommands proplist svn proplist (plist, pl) List all properties. svn proplist [TARGET[@REV]...] svn proplist --revprop -r REV [TARGET] Description List all properties on files, directories, or revisions."}, {"start_index": 1200958, "end_index": 1202167, "text": "The most information you can get out of the status subcommand is as follows: $ svn status -u -v wc M 965 938 sally wc/bar.c * 965 922 harry wc/foo.c A + 965 687 harry wc/qax.c 965 687 harry wc/zig.c Status against revision: 981 Lastly, you can get svn status output in XML format with the --xml option: $ svn status --xml wc &lt;?xml version=&quot;1.0&quot;?&gt; &lt;status&gt; &lt;target path=&quot;wc&quot;&gt; &lt;entry path=&quot;qax.c&quot;&gt; &lt;wc-status props=&quot;none&quot; item=&quot;added&quot; revision=&quot;0&quot;&gt; &lt;/wc-status&gt; &lt;/entry&gt; &lt;entry path=&quot;bar.c&quot;&gt; &lt;wc-status props=&quot;normal&quot; item=&quot;modified&quot; revision=&quot;965&quot;&gt; &lt;commit revision=&quot;965&quot;&gt; &lt;author&gt;sally&lt;/author&gt; &lt;date&gt;2008-05-28T06:35:53.048870Z&lt;/date&gt; &lt;/commit&gt; &lt;/wc-status&gt; &lt;/entry&gt; &lt;/target&gt; &lt;/status&gt; For many more examples of svn status , see . svn subcommands switch svn switch (sw) Update working copy to a different URL."}]}, {"group_id": 675, "duplicates": [{"start_index": 1146200, "end_index": 1146436, "text": "With --verbose ( -v ), svn list shows the following fields for each item: Revision number of the last commit Author of the last commit If locked, the letter O (see the preceding section on for details)."}, {"start_index": 1192335, "end_index": 1192394, "text": "See in the preceding section for details."}, {"start_index": 1247505, "end_index": 1247534, "text": "--verbose ( -v ) Be verbose."}, {"start_index": 1259450, "end_index": 1259520, "text": "With --verbose ( -v ), show the property values too."}]}, {"group_id": 676, "duplicates": [{"start_index": 1146643, "end_index": 1146740, "text": "All of the information is present; the --verbose ( -v ) option is not accepted."}, {"start_index": 1247505, "end_index": 1247534, "text": "--verbose ( -v ) Be verbose."}]}, {"group_id": 677, "duplicates": [{"start_index": 1146741, "end_index": 1147888, "text": "Options Examples svn list is most useful if you want to see what files a repository has without downloading a working copy: $ svn list http://svn.red-bean.com/repos/test/support README.txt INSTALL examples/ You can pass the --verbose ( -v ) option for additional information, rather like the Unix command ls -l : $ svn list -v file:///var/svn/repos 16 sally 28361 Jan 16 23:18 README.txt 27 sally 0 Jan 18 15:27 INSTALL 24 harry Jan 18 11:27 examples/ You can also get svn list output in XML format with the --xml option: $ svn list --xml http://svn.red-bean.com/repos/test &lt;?xml version=&quot;1.0&quot;?&gt; &lt;lists&gt; &lt;list path=&quot;http://svn.red-bean.com/repos/test&quot;&gt; &lt;entry kind=&quot;dir&quot;&gt; &lt;name&gt;examples&lt;/name&gt; &lt;size&gt;0&lt;/size&gt; &lt;commit revision=&quot;24&quot;&gt; &lt;author&gt;harry&lt;/author&gt; &lt;date&gt;2008-01-18T06:35:53.048870Z&lt;/date&gt; &lt;/commit&gt; &lt;/entry&gt; ... &lt;/list&gt; &lt;/lists&gt; For further details, see the earlier section ."}, {"start_index": 1148957, "end_index": 1148984, "text": "For further details, see ."}, {"start_index": 1179750, "end_index": 1180019, "text": "&lt;?xml version=&quot;1.0&quot;?&gt; &lt;properties&gt; &lt;target path=&quot;&quot;&gt; &lt;property name=&quot;svn:ignore&quot;&gt;*.o &lt;/property&gt; &lt;/target&gt; &lt;/properties&gt; svn subcommands proplist svn proplist (plist, pl) List all properties."}, {"start_index": 1200958, "end_index": 1202088, "text": "The most information you can get out of the status subcommand is as follows: $ svn status -u -v wc M 965 938 sally wc/bar.c * 965 922 harry wc/foo.c A + 965 687 harry wc/qax.c 965 687 harry wc/zig.c Status against revision: 981 Lastly, you can get svn status output in XML format with the --xml option: $ svn status --xml wc &lt;?xml version=&quot;1.0&quot;?&gt; &lt;status&gt; &lt;target path=&quot;wc&quot;&gt; &lt;entry path=&quot;qax.c&quot;&gt; &lt;wc-status props=&quot;none&quot; item=&quot;added&quot; revision=&quot;0&quot;&gt; &lt;/wc-status&gt; &lt;/entry&gt; &lt;entry path=&quot;bar.c&quot;&gt; &lt;wc-status props=&quot;normal&quot; item=&quot;modified&quot; revision=&quot;965&quot;&gt; &lt;commit revision=&quot;965&quot;&gt; &lt;author&gt;sally&lt;/author&gt; &lt;date&gt;2008-05-28T06:35:53.048870Z&lt;/date&gt; &lt;/commit&gt; &lt;/wc-status&gt; &lt;/entry&gt; &lt;/target&gt; &lt;/status&gt; For many more examples of svn status , see ."}, {"start_index": 1206164, "end_index": 1206191, "text": "For further details, see ."}, {"start_index": 1238086, "end_index": 1238111, "text": "For details, see ."}, {"start_index": 1247505, "end_index": 1247534, "text": "--verbose ( -v ) Be verbose."}]}, {"group_id": 678, "duplicates": [{"start_index": 1149784, "end_index": 1149892, "text": "With --verbose ( -v ), svn log will also print all affected paths with each log message."}, {"start_index": 1247505, "end_index": 1247534, "text": "--verbose ( -v ) Be verbose."}, {"start_index": 1259450, "end_index": 1259520, "text": "With --verbose ( -v ), show the property values too."}]}, {"group_id": 679, "duplicates": [{"start_index": 1149901, "end_index": 1150053, "text": "With --quiet ( -q ), svn log will not print the log message body itself, this is compatible with --verbose ( -v )."}, {"start_index": 1247505, "end_index": 1247534, "text": "--verbose ( -v ) Be verbose."}]}, {"group_id": 680, "duplicates": [{"start_index": 1153479, "end_index": 1153702, "text": "In addition to the action codes which precede the changed paths, svn log with the --verbose ( -v ) option will note whether a path was added or replaced as the result of a copy operation."}, {"start_index": 1247505, "end_index": 1247534, "text": "--verbose ( -v ) Be verbose."}]}, {"group_id": 681, "duplicates": [{"start_index": 1171783, "end_index": 1172006, "text": "The letter codes have the following meanings: A Added D Deleted C Conflicted G Merged U Updated Changes applied with an offset or fuzz are reported on lines starting with the &#39; &gt; &#39; symbol."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 682, "duplicates": [{"start_index": 1172860, "end_index": 1174124, "text": "Index: changed-file =================================================================== --- changed-file (revision 4) +++ changed-file (working copy) @@ -1,6 +1,6 @@ The letters in a line of text Could make your day much better. But expanded into paragraphs, -I&#39;d tell of kangaroos and calves +I&#39;d tell of monkeys and giraffes Until you were all smiles and laughs From my letter made of letters. Property changes on: changed-file ___________________________________________________________________ Added: propname ## -0,0 +1 ## +propvalue Index: added-file =================================================================== --- added-file (revision 0) +++ added-file (working copy) @@ -0,0 +1 @@ +This is an added file. We can apply the previous patch file to another working copy from our repository using svn patch , and verify that it did the right thing by using svn diff : $ cd /some/other/workingcopy $ svn patch /path/to/PATCH D deleted-file UU changed-file A added-file $ svn diff Index: deleted-file =================================================================== --- deleted-file (revision 3) +++ deleted-file (working copy) @@ -1 +0,0 @@ -This file will be deleted."}, {"start_index": 1174125, "end_index": 1175025, "text": "Index: changed-file =================================================================== --- changed-file (revision 4) +++ changed-file (working copy) @@ -1,6 +1,6 @@ The letters in a line of text Could make your day much better. But expanded into paragraphs, -I&#39;d tell of kangaroos and calves +I&#39;d tell of monkeys and giraffes Until you were all smiles and laughs From my letter made of letters. Property changes on: changed-file ___________________________________________________________________ Added: propname ## -0,0 +1 ## +propvalue Index: added-file =================================================================== --- added-file (revision 0) +++ added-file (working copy) @@ -0,0 +1 @@ +This is an added file. $ Sometimes you might need Subversion to interpret a patch in reverse where added things get treated as removed things, and vice-versa."}]}, {"group_id": 683, "duplicates": [{"start_index": 1176034, "end_index": 1176264, "text": "The first form removes versioned properties in your working copy, and the second removes unversioned remote properties on a repository revision ( TARGET determines only which repository to access)."}, {"start_index": 1176912, "end_index": 1177138, "text": "The first form edits versioned properties in your working copy, and the second edits unversioned remote properties on a repository revision ( TARGET determines only which repository to access)."}, {"start_index": 1180168, "end_index": 1180394, "text": "The first form lists versioned properties in your working copy, and the second lists unversioned remote properties on a repository revision ( TARGET determines only which repository to access)."}]}, {"group_id": 684, "duplicates": [{"start_index": 1176453, "end_index": 1176724, "text": "Delete a revision property: $ svn propdel --revprop -r 26 release-date property &#39;release-date&#39; deleted from repository revision &#39;26&#39; svn subcommands propedit svn propedit (pedit, pe) Edit the property of one or more items under version control."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 685, "duplicates": [{"start_index": 1177673, "end_index": 1177822, "text": "Set new value for property &#39;svn:keywords&#39; on &#39;foo.c&#39; $ svn subcommands propget svn propget (pget, pg) Print the value of a property."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 686, "duplicates": [{"start_index": 1177823, "end_index": 1177992, "text": "svn propget PROPNAME [TARGET[@REV]...] svn propget PROPNAME --revprop -r REV [URL] Description Print the value of a property on files, directories, or revisions."}, {"start_index": 1180020, "end_index": 1180166, "text": "svn proplist [TARGET[@REV]...] svn proplist --revprop -r REV [TARGET] Description List all properties on files, directories, or revisions."}]}, {"group_id": 687, "duplicates": [{"start_index": 1178456, "end_index": 1179164, "text": "For a more structured display of properties, use the --verbose ( -v ) option: $ svn propget svn:keywords foo.c --verbose Properties on &#39;foo.c&#39;: svn:keywords Author Date Rev Examine the versioned properties inherited by a URL in your repository using the --show-inherited-props option: $ svn pg svn:global-ignores --verbose --show-inherited-props ^/branches/1.x Inherited properties on &#39;http://svn.example.com/repos/branches/1.x&#39;, from &#39;http://svn.example.com/repos&#39;: svn:global-ignores *.diff *.patch By default, svn propget will append a trailing end-of-line sequence to the property value it prints."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}, {"start_index": 1247505, "end_index": 1247534, "text": "--verbose ( -v ) Be verbose."}]}, {"group_id": 688, "duplicates": [{"start_index": 1180395, "end_index": 1181724, "text": "Options Examples You can use proplist to see the properties on an item in your working copy: $ svn proplist foo.c Properties on &#39;foo.c&#39;: svn:mime-type svn:keywords owner But with the --verbose ( -v ) flag, svn proplist is extremely handy as it also shows you the values for the properties: $ svn proplist -v foo.c Properties on &#39;foo.c&#39;: svn:mime-type text/plain svn:keywords Author Date Rev owner sally List all the versioned properties inherited by a file in your working copy using the --show-inherited-props option: $ svn proplist --show-inherited-props foo.c Inherited properties on &#39;foo.c&#39;, from &#39;http://svn.example.com/repos&#39;: svn:auto-props svn:global-ignores Inherited properties on &#39;foo.c&#39;, from &#39;/home/theob/svn/working-copies/baz-wc&#39;: svn:auto-props Lastly, you can get svn proplist output in XML format with the --xml option: $ svn proplist --xml &lt;?xml version=&quot;1.0&quot;?&gt; &lt;properties&gt; &lt;target path=&quot;.&quot;&gt; &lt;property name=&quot;svn:ignore&quot;/&gt; &lt;/target&gt; &lt;/properties&gt; svn subcommands propset svn propset (pset, ps) Set PROPNAME to PROPVAL on files, directories, or revisions."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}, {"start_index": 1247505, "end_index": 1247534, "text": "--verbose ( -v ) Be verbose."}]}, {"group_id": 689, "duplicates": [{"start_index": 1182309, "end_index": 1183486, "text": "Options Examples Set the MIME type for a file: $ svn propset svn:mime-type image/jpeg foo.jpg property &#39;svn:mime-type&#39; set on &#39;foo.jpg&#39; On a Unix system, if you want a file to have the executable permission set: $ svn propset svn:executable ON somescript property &#39;svn:executable&#39; set on &#39;somescript&#39; Perhaps you have an internal policy to set certain properties for the benefit of your coworkers: $ svn propset owner sally foo.c property &#39;owner&#39; set on &#39;foo.c&#39; If you made a mistake in a log message for a particular revision and want to change it, use --revprop and set svn:log to the new log message: $ svn propset --revprop -r 25 svn:log &quot;Journaled about trip to New York.&quot; property &#39;svn:log&#39; set on repository revision &#39;25&#39; Or, if you don&#39;t have a working copy, you can provide a URL: $ svn propset --revprop -r 26 svn:log &quot;Document nap.&quot; \\ http://svn.red-bean.com/repos property &#39;svn:log&#39; set on repository revision &#39;25&#39; Lastly, you can tell propset to take its input from a file."}, {"start_index": 1184977, "end_index": 1185026, "text": "And fortunately, that&#39;s not the case."}]}, {"group_id": 690, "duplicates": [{"start_index": 1187154, "end_index": 1187426, "text": "$ svn up Updating &#39;.&#39;: svn: E180001: Unable to connect to a repository at URL &#39;file:///var/svn/repos/trunk&#39; After cornering the administrator over by the vending machines, we learn about the repository being moved and are told the new URL."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 691, "duplicates": [{"start_index": 1187855, "end_index": 1188022, "text": "$ svn up Updating &#39;.&#39;: A lib/new.c M src/code.h M src/headers.h Once again, this type of relocation affects working copy metadata only ."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 692, "duplicates": [{"start_index": 1188416, "end_index": 1188622, "text": "$ svn relocate http://svn.company.com/repos/trunk $ Now, each time we perform a relocation of this sort, Subversion contacts the repository at its new URL, of course to verify a few things."}, {"start_index": 1190242, "end_index": 1190332, "text": "$ svn relocate http://svn.company.com/repos/trunk $ But we have another option here, too."}]}, {"group_id": 693, "duplicates": [{"start_index": 1190937, "end_index": 1191437, "text": "svn resolve [PATH...] Description Resolve conflicted state on working copy files or directories. This routine does not semantically resolve conflict markers; however, it replaces the conflicted item with the version specified (interactively or via the --accept argument) and then removes conflict-related artifact files. This allows PATH to be committed again that is, it tells Subversion that the conflicts have been resolved."}, {"start_index": 1192395, "end_index": 1192789, "text": "Remove conflicted state on working copy files or directories. This routine does not semantically resolve conflict markers; it merely removes conflict-related artifact files and allows PATH to be committed again; that is, it tells Subversion that the conflicts have been resolved. See for an in-depth look at resolving conflicts."}]}, {"group_id": 694, "duplicates": [{"start_index": 1191438, "end_index": 1191496, "text": "See for an in-depth look at resolving conflicts."}, {"start_index": 1192731, "end_index": 1192789, "text": "See for an in-depth look at resolving conflicts."}]}, {"group_id": 695, "duplicates": [{"start_index": 1192122, "end_index": 1192193, "text": "Remove conflicted state on working copy files or directories."}, {"start_index": 1192395, "end_index": 1192466, "text": "Remove conflicted state on working copy files or directories."}]}, {"group_id": 696, "duplicates": [{"start_index": 1195469, "end_index": 1195552, "text": "With --verbose ( -v ), it prints full revision information on every item."}, {"start_index": 1247505, "end_index": 1247534, "text": "--verbose ( -v ) Be verbose."}, {"start_index": 1259450, "end_index": 1259520, "text": "With --verbose ( -v ), show the property values too."}]}, {"group_id": 697, "duplicates": [{"start_index": 1195838, "end_index": 1195957, "text": "The first column indicates that an item was added, deleted, or otherwise changed: &#39; &#39; No modifications."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197024, "end_index": 1197143, "text": "The second column tells the status of a file&#39;s or directory&#39;s properties: &#39; &#39; No modifications."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 698, "duplicates": [{"start_index": 1196303, "end_index": 1196450, "text": "&#39;C&#39; The contents (as opposed to the properties) of the item conflict with updates received from the repository."}, {"start_index": 1197215, "end_index": 1197347, "text": "&#39;C&#39; Properties for this item are in conflict with property updates received from the repository."}, {"start_index": 1199050, "end_index": 1199100, "text": "&#39;C&#39; Item is the victim of a tree conflict."}]}, {"group_id": 699, "duplicates": [{"start_index": 1196515, "end_index": 1196603, "text": "&#39;I&#39; Item is being ignored (e.g., with the svn:ignore property)."}, {"start_index": 1196604, "end_index": 1196650, "text": "&#39;?&#39; Item is not under version control."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 700, "duplicates": [{"start_index": 1196651, "end_index": 1196745, "text": "&#39;!&#39; Item is missing (e.g., you moved or deleted it without using svn )."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 701, "duplicates": [{"start_index": 1196866, "end_index": 1197023, "text": "&#39;~&#39; Item is versioned as one kind of object (file, directory, link), but has been replaced by a different kind of object."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}]}, {"group_id": 702, "duplicates": [{"start_index": 1197348, "end_index": 1197479, "text": "The third column is populated only if the working copy directory is locked (see ): &#39; &#39; Item is not locked."}, {"start_index": 1197480, "end_index": 1197507, "text": "&#39;L&#39; Item is locked."}, {"start_index": 1197693, "end_index": 1197844, "text": "The fifth column is populated only if the item is switched relative to its parent (see ): &#39; &#39; Item is a child of its parent directory."}, {"start_index": 1197845, "end_index": 1197874, "text": "&#39;S&#39; Item is switched."}, {"start_index": 1198904, "end_index": 1199049, "text": "The seventh column is populated only if the item is the victim of a tree conflict: &#39; &#39; Item is not the victim of a tree conflict."}, {"start_index": 1199050, "end_index": 1199100, "text": "&#39;C&#39; Item is the victim of a tree conflict."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 703, "duplicates": [{"start_index": 1197508, "end_index": 1197649, "text": "The fourth column is populated only if the item is scheduled for addition-with-history: &#39; &#39; No history scheduled with commit."}, {"start_index": 1198904, "end_index": 1199049, "text": "The seventh column is populated only if the item is the victim of a tree conflict: &#39; &#39; Item is not the victim of a tree conflict."}, {"start_index": 1199050, "end_index": 1199100, "text": "&#39;C&#39; Item is the victim of a tree conflict."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 704, "duplicates": [{"start_index": 1197875, "end_index": 1198040, "text": "The sixth column is populated with lock information: &#39; &#39; When --show-updates ( -u ) is used, this means the file is not locked."}, {"start_index": 1198042, "end_index": 1198193, "text": "If --show-updates ( -u ) is not used, this merely means that the file is not locked in this working copy."}, {"start_index": 1198194, "end_index": 1198242, "text": "&#39;K&#39; File is locked in this working copy."}, {"start_index": 1198334, "end_index": 1198413, "text": "This appears only when --show-updates ( -u ) is used."}, {"start_index": 1198414, "end_index": 1198522, "text": "&#39;T&#39; File was locked in this working copy, but the lock has been stolen and is invalid."}, {"start_index": 1198584, "end_index": 1198663, "text": "This appears only when --show-updates ( -u ) is used."}, {"start_index": 1198664, "end_index": 1198774, "text": "&#39;B&#39; File was locked in this working copy, but the lock has been broken and is invalid."}, {"start_index": 1198820, "end_index": 1198903, "text": "This appears only when --show-updates ( -u ) is used."}, {"start_index": 1199050, "end_index": 1199100, "text": "&#39;C&#39; Item is the victim of a tree conflict."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 705, "duplicates": [{"start_index": 1199136, "end_index": 1199327, "text": "The out-of-date information appears in the ninth column (only if you pass the --show-updates ( -u ) option): &#39; &#39; The item in your working copy is up to date."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 706, "duplicates": [{"start_index": 1199479, "end_index": 1199612, "text": "The working revision is the next field if the --show-updates ( -u ) or --verbose ( -v ) option is passed."}, {"start_index": 1247505, "end_index": 1247534, "text": "--verbose ( -v ) Be verbose."}]}, {"group_id": 707, "duplicates": [{"start_index": 1199613, "end_index": 1199754, "text": "If the --verbose ( -v ) option is passed, the last committed revision and last committed author are displayed next."}, {"start_index": 1247505, "end_index": 1247534, "text": "--verbose ( -v ) Be verbose."}]}, {"group_id": 708, "duplicates": [{"start_index": 1200694, "end_index": 1200957, "text": "--show-updates ( -u ) does not cause the status listing to reflect the repository&#39;s version of the item (although you can see the revision number in the repository by passing the --verbose ( -v ) option)."}, {"start_index": 1247505, "end_index": 1247534, "text": "--verbose ( -v ) Be verbose."}]}, {"group_id": 709, "duplicates": [{"start_index": 1203736, "end_index": 1204020, "text": "As with most subcommands, you can limit the scope of the switch operation to a particular tree depth using the --depth option. Alternatively, you can use the --set-depth option to set a new sticky working copy depth on the switch target."}, {"start_index": 1207211, "end_index": 1207495, "text": "As with most subcommands, you can limit the scope of the update operation to a particular tree depth using the --depth option. Alternatively, you can use the --set-depth option to set a new sticky working copy depth on the update target."}]}, {"group_id": 710, "duplicates": [{"start_index": 1204460, "end_index": 1204559, "text": "U myproj/foo.txt U myproj/bar.txt U myproj/baz.c U myproj/qux.c Updated to revision 31."}, {"start_index": 1204765, "end_index": 1204864, "text": "U myproj/foo.txt U myproj/bar.txt U myproj/baz.c U myproj/qux.c Updated to revision 31."}]}, {"group_id": 711, "duplicates": [{"start_index": 1207496, "end_index": 1207734, "text": "Options Examples Pick up repository changes that have happened since your last update: $ svn update Updating &#39;.&#39;: A newdir/toggle.c A newdir/disclose.c A newdir/launch.c D newdir/README Updated to revision 32."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 712, "duplicates": [{"start_index": 1207736, "end_index": 1208054, "text": "You can also update your working copy to an older revision (Subversion doesn&#39;t have the concept of sticky files like CVS does; see ): $ svn update -r30 Updating &#39;.&#39;: A newdir/README D newdir/toggle.c D newdir/disclose.c D newdir/launch.c U foo.c Updated to revision 30."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 713, "duplicates": [{"start_index": 1208645, "end_index": 1209029, "text": "You can update multiple targets with a single invocation, and Subversion will not only gracefully skip any unversioned targets you provide it, but as of Subversion 1.7 will also include a post-update summary of all the updates it performed: $ cd my-projects $ svn update * Updating &#39;calc&#39;: U button.c U integer.c Updated to revision 394."}, {"start_index": 1209188, "end_index": 1209241, "text": "Summary of updates: Updated &#39;calc&#39; to r394."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}]}, {"group_id": 714, "duplicates": [{"start_index": 1209030, "end_index": 1209141, "text": "Skipped &#39;tempfile.tmp&#39; Updating &#39;paint&#39;: A palettes.c U brushes.c Updated to revision 60."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}]}, {"group_id": 715, "duplicates": [{"start_index": 1209142, "end_index": 1209187, "text": "Updating &#39;ziptastic&#39;: At revision 43."}, {"start_index": 1209244, "end_index": 1209275, "text": "Updated &#39;paint&#39; to r60."}, {"start_index": 1209278, "end_index": 1209313, "text": "Updated &#39;ziptastic&#39; to r43."}]}, {"group_id": 716, "duplicates": [{"start_index": 1210534, "end_index": 1211078, "text": "$ svn upgrade Upgraded &#39;.&#39; Upgraded &#39;A&#39; Upgraded &#39;A/B&#39; Upgraded &#39;A/B/E&#39; Upgraded &#39;A/B/F&#39; Upgraded &#39;A/C&#39; Upgraded &#39;A/D&#39; Upgraded &#39;A/D/G&#39; Upgraded &#39;A/D/H&#39; $ svn status D A/B/E/alpha M A/D/gamma A A/newfile $ Notice that svn upgrade preserved the local modifications present in the working copy at the time of the upgrade, which were introduced by the version of Subversion previously used to manipulate this working copy."}, {"start_index": 1242232, "end_index": 1242768, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead."}, {"start_index": 1243168, "end_index": 1243569, "text": "Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 717, "duplicates": [{"start_index": 1211524, "end_index": 1211709, "text": "Since svnadmin works via direct repository access (and thus can only be used on the machine that holds the repository), it refers to the repository with a path, not a URL."}, {"start_index": 1244266, "end_index": 1244450, "text": "Since svnlook works via direct repository access (and thus can be used only on the machine that holds the repository), it refers to the repository with a path, not a URL."}]}, {"group_id": 718, "duplicates": [{"start_index": 1212671, "end_index": 1212889, "text": "--config-dir DIR Instructs Subversion to read configuration information from the specified directory instead of the default location ( .subversion in the user&#39;s home directory)."}, {"start_index": 1266148, "end_index": 1266419, "text": "The following is a list of the options supported by this tool: --config-dir DIR Read configuration information from the specified directory instead of the default location ( .subversion in the user&#39;s home directory)."}, {"start_index": 1274425, "end_index": 1274748, "text": "Options in svnrdump are global, just as they are in svn and svnadmin : svnrdump Options --config-dir DIR Instructs Subversion to read configuration information from the specified directory instead of the default location ( .subversion in the user&#39;s home directory)."}, {"start_index": 1287088, "end_index": 1287306, "text": "--config-dir DIR Instructs Subversion to read configuration information from the specified directory instead of the default location ( .subversion in the user&#39;s home directory)."}]}, {"group_id": 719, "duplicates": [{"start_index": 1213999, "end_index": 1214391, "text": "--memory-cache-size ( -M ) ARG Configures the size (in Megabytes) of the extra in-memory cache used to minimize redundant operations. The default value is 16 . (This cache is used for FSFS-backed repositories only.) --parent-dir DIR When loading a dump file, root paths at DIR instead of / . --pre-1.4-compatible Deprecated ."}, {"start_index": 1283138, "end_index": 1283698, "text": "--memory-cache-size ( -M ) ARG Configures the size (in Megabytes) of the extra in-memory cache used to minimize redundant operations. The default value is 16 . (This cache is used for FSFS-backed repositories only.) --pid-file FILENAME Causes svnserve to write its process ID to FILENAME , which must be writable by the user under which svnserve is running. --prefer-ipv6 ( -6 When resolving the listen hostname, prever an IPv6 answer over an IPv4 one."}]}, {"group_id": 720, "duplicates": [{"start_index": 1214393, "end_index": 1214619, "text": "See option --compatible-version . When creating a new repository, use a format that is compatible with versions of Subversion earlier than Subversion 1.4. --pre-1.5-compatible Deprecated ."}, {"start_index": 1214621, "end_index": 1214847, "text": "See option --compatible-version . When creating a new repository, use a format that is compatible with versions of Subversion earlier than Subversion 1.5. --pre-1.6-compatible Deprecated ."}, {"start_index": 1214849, "end_index": 1215122, "text": "See option --compatible-version . When creating a new repository, use a format that is compatible with versions of Subversion earlier than Subversion 1.6. --revision ( -r ) ARG Specify a particular revision to operate on."}]}, {"group_id": 721, "duplicates": [{"start_index": 1215197, "end_index": 1215359, "text": "--use-post-commit-hook When loading a dump file, runs the repository&#39;s post-commit hook after finalizing each newly loaded revision."}, {"start_index": 1215541, "end_index": 1215702, "text": "--use-pre-commit-hook When loading a dump file, runs the repository&#39;s pre-commit hook before finalizing each newly loaded revision."}]}, {"group_id": 722, "duplicates": [{"start_index": 1215360, "end_index": 1215540, "text": "--use-post-revprop-change-hook When changing a revision property, runs the repository&#39;s post-revprop-change hook after changing the revision property."}, {"start_index": 1215786, "end_index": 1215965, "text": "--use-pre-revprop-change-hook When changing a revision property, runs the repository&#39;s pre-revprop-change hook before changing the revision property."}]}, {"group_id": 723, "duplicates": [{"start_index": 1221750, "end_index": 1222067, "text": "* Dumped revision 1. * Dumped revision 2. Incrementally dump a single transaction from your repository: $ svnadmin dump /var/svn/repos -r 21 --incremental &gt; incr.dump * Dumped revision 21. svnadmin subcommands freeze svnadmin freeze Prevent commits to the repository while running an arbitary program."}, {"start_index": 1278005, "end_index": 1278241, "text": "* Dumped revision 1. * Dumped revision 2. Incrementally dump a single revision from that same repository: $ svnrdump dump http://svn.example.com/repos/calc \\ -r 21 --incremental &gt; inc.dump * Dumped revision 21."}]}, {"group_id": 724, "duplicates": [{"start_index": 1224998, "end_index": 1225371, "text": "svnadmin list-dblogs REPOS_PATH Description Berkeley DB creates logs of all changes to the repository, which allow it to recover in the face of catastrophe. Unless you enable DB_LOG_AUTOREMOVE , the logfiles accumulate, although most are no longer used and can be deleted to reclaim disk space. See for more information."}, {"start_index": 1225561, "end_index": 1225941, "text": "svnadmin list-unused-dblogs REPOS_PATH Description Berkeley DB creates logs of all changes to the repository, which allow it to recover in the face of catastrophe. Unless you enable DB_LOG_AUTOREMOVE , the logfiles accumulate, although most are no longer used and can be deleted to reclaim disk space. See for more information."}]}, {"group_id": 725, "duplicates": [{"start_index": 1227231, "end_index": 1227520, "text": "Options Examples This shows the beginning of loading a repository from a backup file (made, of course, with svnadmin dump ): $ svnadmin load /var/svn/restored &lt; repos-backup &lt;&lt;&lt; Started new txn, based on original revision 1 * adding path : test ... done."}, {"start_index": 1227562, "end_index": 1227807, "text": "Or if you want to load into a subdirectory: $ svnadmin load --parent-dir new/subdir/for/project \\ /var/svn/restored &lt; repos-backup &lt;&lt;&lt; Started new txn, based on original revision 1 * adding path : test ... done."}]}, {"group_id": 726, "duplicates": [{"start_index": 1227526, "end_index": 1227558, "text": "* adding path : test/a ... done."}, {"start_index": 1227813, "end_index": 1227845, "text": "* adding path : test/a ... done."}]}, {"group_id": 727, "duplicates": [{"start_index": 1229623, "end_index": 1230184, "text": "Options None Examples This lists the one locked file in the repository at /var/svn/repos : $ svnadmin lslocks /var/svn/repos Path: /tree.jpg UUID Token: opaquelocktoken:ab00ddf0-6afb-0310-9cd0-dda813329753 Owner: harry Created: 2005-07-08 17:27:36 -0500 (Fri, 08 Jul 2005) Expires: Comment (1 line): Rework the uppermost branches on the bald cypress in the foreground. svnadmin subcommands lstxns svnadmin lstxns Print the names of all uncommitted transactions. svnadmin lstxns REPOS_PATH Description Print the names of all uncommitted transactions."}, {"start_index": 1257732, "end_index": 1258238, "text": "Options None Examples This describes the lock on the file tree.jpg : $ svnlook lock /var/svn/repos tree.jpg UUID Token: opaquelocktoken:ab00ddf0-6afb-0310-9cd0-dda813329753 Owner: harry Created: 2005-07-08 17:27:36 -0500 (Fri, 08 Jul 2005) Expires: Comment (1 line): Rework the uppermost branches on the bald cypress in the foreground. svnlook subcommands log svnlook log Print the log message, followed by a newline character. svnlook log REPOS_PATH Description Print the log message."}]}, {"group_id": 728, "duplicates": [{"start_index": 1232275, "end_index": 1232498, "text": "Options None Examples This deletes the locks on tree.jpg and house.jpg in the repository at /var/svn/repos : $ svnadmin rmlocks /var/svn/repos tree.jpg house.jpg Removed lock on &#39;/tree.jpg."}, {"start_index": 1232499, "end_index": 1232531, "text": "Removed lock on &#39;/house.jpg."}]}, {"group_id": 729, "duplicates": [{"start_index": 1240149, "end_index": 1240668, "text": "Options Examples If we have a dump file from a repository with a number of different picnic-related directories in it, but we want to keep everything except the sandwiches part of the repository, we&#39;ll exclude only that path: $ svndumpfilter exclude sandwiches &lt; dumpfile &gt; filtered-dumpfile Excluding prefixes: &#39;/sandwiches&#39; Revision 0 committed as 0. Revision 1 committed as 1. Revision 2 committed as 2. Revision 3 committed as 3. Revision 4 committed as 4."}, {"start_index": 1241738, "end_index": 1242230, "text": "Options Example If we have a dump file from a repository with a number of different picnic-related directories in it, but want to keep only the sandwiches part of the repository, we&#39;ll include only that path: $ svndumpfilter include sandwiches &lt; dumpfile &gt; filtered-dumpfile Including prefixes: &#39;/sandwiches&#39; Revision 0 committed as 0. Revision 1 committed as 1. Revision 2 committed as 2. Revision 3 committed as 3. Revision 4 committed as 4."}]}, {"group_id": 730, "duplicates": [{"start_index": 1240670, "end_index": 1241541, "text": "Dropped 1 node(s): &#39;/sandwiches&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead. So, for example, if you wished to filter out paths which ended with .OLD , you would do the following: $ svndumpfilter exclude --pattern &quot;*.OLD&quot; &lt; dumpfile &gt; filtered-dumpfile Excluding prefix patterns: &#39;/*.OLD&#39; Revision 0 committed as 0. Revision 1 committed as 1. Revision 2 committed as 2. Revision 3 committed as 3. Revision 4 committed as 4. Dropped 3 node(s): &#39;/condiments/salt.OLD&#39; &#39;/condiments/pepper.OLD&#39; &#39;/toppings/cheese.OLD&#39; $ svndumpfilter subcommands include svndumpfilter include Filter out nodes without given prefixes from dump stream."}, {"start_index": 1242232, "end_index": 1243569, "text": "Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead. So, for example, if you wished to include only paths which ended with ks , you would do the following: $ svndumpfilter include --pattern &quot;*ks&quot; &lt; dumpfile &gt; filtered-dumpfile Including prefix patterns: &#39;/*ks&#39; Revision 0 committed as 0. Revision 1 committed as 1. Revision 2 committed as 2. Revision 3 committed as 3. Revision 4 committed as 4. Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!"}]}, {"group_id": 731, "duplicates": [{"start_index": 1250893, "end_index": 1252457, "text": "Options Examples This shows a newly added (empty) file, a modified binary file, and a renamed (that is, copied and deleted) file with modifications: $ svnlook diff -r 40 /var/svn/repos Copied: trunk/relish.txt (from rev 39, trunk/vendors/deli/pickle.txt) =================================================================== --- trunk/relish.txt (rev 0) +++ trunk/relish.txt 2013-01-29 20:39:17 UTC (rev 40) @@ -0,0 +1 @@ +Pickle relish is mostly made from cucumbers. Deleted: trunk/vendors/deli/pickle.txt =================================================================== --- trunk/vendors/deli/pickle.txt (rev 39) +++ trunk/vendors/deli/pickle.txt 2013-01-29 20:39:17 UTC (rev 49) @@ -1 +0,0 @@ -Pickles are mostly made from cucumbers. Modified: trunk/vendors/deli/logo.jpg =================================================================== (Binary files differ) Added: trunk/vendors/deli/soda.txt =================================================================== $ By default, svnlook diff will treat copied files very much like any other added file, displaying in their entirety the contents of the new file and merely using a different label to draw the copy/add distinction. However, you can use the --diff-copy-from option to cause svnlook diff to consider a copied file as worthy of mention only if it differs from the file from which it was copied, and to actually describe those differences."}, {"start_index": 1253488, "end_index": 1254527, "text": "$ svnlook diff -r 40 /var/svn/repos --no-diff-deleted Copied: trunk/relish.txt (from rev 39, trunk/vendors/deli/pickle.txt) =================================================================== --- trunk/relish.txt (rev 0) +++ trunk/relish.txt 2013-01-29 20:39:17 UTC (rev 40) @@ -0,0 +1 @@ +Pickle relish is mostly made from cucumbers. Modified: trunk/vendors/deli/logo.jpg =================================================================== (Binary files differ) Added: trunk/vendors/deli/soda.txt ============================================================================== $ Note that in each of the previous examples, when a file has a nontextual svn:mime-type property, the differences are not explicitly shown. svnlook subcommands dirs-changed svnlook dirs-changed Print the directories that were themselves changed. svnlook dirs-changed REPOS_PATH Description Print the directories that were themselves changed (property edits) or whose file children were changed."}]}, {"group_id": 732, "duplicates": [{"start_index": 1252459, "end_index": 1252828, "text": "$ svnlook diff -r 40 /var/svn/repos --diff-copy-from Copied: trunk/relish.txt (from rev 39, trunk/vendors/deli/pickle.txt) =================================================================== --- trunk/vendors/deli/pickle.txt 2013-01-29 20:39:17 UTC (rev 39) +++ trunk/relish.txt 2013-01-29 20:47:40 UTC (rev 3) @@ -1 +1 @@ -Pickles are mostly made from cucumbers."}, {"start_index": 1252876, "end_index": 1253153, "text": "Deleted: trunk/vendors/deli/pickle.txt =================================================================== --- trunk/vendors/deli/pickle.txt (rev 39) +++ trunk/vendors/deli/pickle.txt 2013-01-29 20:39:17 UTC (rev 40) @@ -1 +0,0 @@ -Pickles are mostly made from cucumbers."}, {"start_index": 1253488, "end_index": 1253852, "text": "$ svnlook diff -r 40 /var/svn/repos --no-diff-deleted Copied: trunk/relish.txt (from rev 39, trunk/vendors/deli/pickle.txt) =================================================================== --- trunk/relish.txt (rev 0) +++ trunk/relish.txt 2013-01-29 20:39:17 UTC (rev 40) @@ -0,0 +1 @@ +Pickle relish is mostly made from cucumbers."}]}, {"group_id": 733, "duplicates": [{"start_index": 1255853, "end_index": 1256037, "text": "Options None svnlook subcommands history svnlook history Print information about the history of a path in the repository (or the root directory if no path is supplied)."}, {"start_index": 1256038, "end_index": 1256220, "text": "svnlook history REPOS_PATH [PATH_IN_REPOS] Description Print information about the history of a path in the repository (or the root directory if no path is supplied)."}]}, {"group_id": 734, "duplicates": [{"start_index": 1257235, "end_index": 1257436, "text": "Options Examples This shows the info output for revision 40 in our sample repository: $ svnlook info -r 40 /var/svn/repos sally 2003-02-22 17:44:49 -0600 (Sat, 22 Feb 2003) 16 Rearrange lunch."}, {"start_index": 1258239, "end_index": 1258379, "text": "Options Examples This shows the log output for revision 40 in our sample repository: $ svnlook log /var/svn/repos/ Rearrange lunch."}]}, {"group_id": 735, "duplicates": [{"start_index": 1266420, "end_index": 1266541, "text": "--config-option CONFSPEC Set, for the duration of the command, the value of a runtime configuration option."}, {"start_index": 1287307, "end_index": 1287439, "text": "--config-option CONFSPEC Sets, for the duration of the command, the value of a runtime configuration option."}]}, {"group_id": 736, "duplicates": [{"start_index": 1266557, "end_index": 1266782, "text": "CONFSPEC is a string which specifies the configuration option namespace, name and value that you&#39;d like to assign, formatted as FILE : SECTION : OPTION =[ VALUE ]."}, {"start_index": 1287442, "end_index": 1287647, "text": "CONFSPEC is a string which specifies the configuration option namespace, name and value that you&#39;d like to assign, formatted as FILE : SECTION : OPTION =[ VALUE ]."}]}, {"group_id": 737, "duplicates": [{"start_index": 1266797, "end_index": 1267695, "text": "In this syntax, FILE and SECTION are the runtime configuration file (either config or servers ) and the section thereof, respectively, which contain the option whose value you wish to change. OPTION is, of course, the option itself, and VALUE the value (if any) you wish to assign to the option. For example, to temporarily disable the use of the automatic property setting feature, use --config-option=config:miscellany:enable-auto-props=no . You can use this option multiple times to change multiple option values simultaneously. --extra-args ( -X ) ARGFILE Read additional would-be command-line arguments from ARGFILE , one argument per line."}, {"start_index": 1274910, "end_index": 1275874, "text": "FILE and SECTION are the runtime configuration file (either config or servers ) and the section thereof, respectively, which contain the option whose value you wish to change. OPTION is, of course, the option itself, and VALUE the value (if any) you wish to assign to the option. For example, to temporarily disable the use of the automatic property setting feature, use --config-option=servers:global:http-library=serf . You can use this option multiple times to change multiple option values simultaneously. --incremental Dump a revision or revision range only as a diff against the previous revision, instead of the default, which is begin a dumped revision range with a complete expansion of all contents of the repository as of that revision."}]}, {"group_id": 738, "duplicates": [{"start_index": 1269399, "end_index": 1269505, "text": "If not provided, or if incorrect, Subversion will prompt you for this information as needed."}, {"start_index": 1269631, "end_index": 1269737, "text": "If not provided, or if incorrect, Subversion will prompt you for this information as needed."}, {"start_index": 1276535, "end_index": 1276651, "text": "If not provided, or if incorrect, Subversion will prompt you for this information as needed."}, {"start_index": 1277156, "end_index": 1277272, "text": "If not provided, or if incorrect, Subversion will prompt you for this information as needed."}, {"start_index": 1289563, "end_index": 1289679, "text": "If not provided, or if incorrect, Subversion will prompt you for this information as needed."}, {"start_index": 1290117, "end_index": 1290233, "text": "If not provided, or if incorrect, Subversion will prompt you for this information as needed."}, {"start_index": 1290775, "end_index": 1290891, "text": "If not provided, or if incorrect, Subversion will prompt you for this information as needed."}, {"start_index": 1291001, "end_index": 1291117, "text": "If not provided, or if incorrect, Subversion will prompt you for this information as needed."}]}, {"group_id": 739, "duplicates": [{"start_index": 1270191, "end_index": 1270902, "text": "$ # Calculate some convenience variables. $ export FILEURL=http://svn.example.com/projects/sandbox/README $ export BASEREV=`svn info ${FILEURL} | \\ grep &#39;^Last Changed Rev&#39; | cut -d &#39; &#39; -f 2` $ # Get a copy of the file&#39;s current contents. $ svn cat ${FILEURL}@${BASEREV} &gt; /tmp/README.tmpfile $ # Edit the (copied) file. $ vi /tmp/README.tmpfile $ # Commit the new content for our file. $ svnmucc -r ${BASEREV} put README.tmpfile ${FILEURL} \\ -m &quot;Tweak the README file.&quot; r24 committed by harry at 2013-01-21T16:21:23.100133Z # Cleanup after ourselves. $ rm /tmp/README.tmpfile Apply a similar approach to change a file or directory property."}, {"start_index": 1271031, "end_index": 1271773, "text": "$ # Calculate some convenience variables. $ export PROJURL=http://svn.example.com/projects/sandbox $ export BASEREV=`svn info ${PROJURL} | \\ grep &#39;^Last Changed Rev&#39; | cut -d &#39; &#39; -f 2` $ # Get a copy of the directory&#39;s &quot;license&quot; property value. $ svn -r ${BASEREV} propget license ${PROJURL} &gt; /tmp/prop.tmpfile $ # Tweak the property. $ vi /tmp/prop.tmpfile $ # Commit the new property value. $ svnmucc -r ${BASEREV} propsetf prop.tmpfile ${PROJURL} \\ -m &quot;Tweak the project directory &#39;license&#39; property.&quot; r25 committed by harry at 2013-01-21T16:24:11.375936Z # Cleanup after ourselves. $ rm /tmp/prop.tmpfile Let&#39;s look now at some multi-operation examples."}]}, {"group_id": 740, "duplicates": [{"start_index": 1274749, "end_index": 1274907, "text": "--config-option FILE : SECTION : OPTION =[ VALUE ] Sets, for the duration of the command, the value of a runtime configuration option."}, {"start_index": 1287307, "end_index": 1287439, "text": "--config-option CONFSPEC Sets, for the duration of the command, the value of a runtime configuration option."}]}, {"group_id": 741, "duplicates": [{"start_index": 1276921, "end_index": 1277047, "text": "--trust-server-cert Used with --non-interactive to accept any unknown SSL server certificates without prompting."}, {"start_index": 1291118, "end_index": 1291244, "text": "--trust-server-cert Used with --non-interactive to accept any unknown SSL server certificates without prompting."}]}, {"group_id": 742, "duplicates": [{"start_index": 1289448, "end_index": 1289561, "text": "--source-password PASSWD Specifies the password for the Subversion server from which you are syncing."}, {"start_index": 1290664, "end_index": 1290773, "text": "--sync-password PASSWD Specifies the password for the Subversion server to which you are syncing."}]}, {"group_id": 743, "duplicates": [{"start_index": 1290004, "end_index": 1290115, "text": "--source-username NAME Specifies the username for the Subversion server from which you are syncing."}, {"start_index": 1290892, "end_index": 1290999, "text": "--sync-username NAME Specifies the username for the Subversion server to which you are syncing."}]}, {"group_id": 744, "duplicates": [{"start_index": 1292341, "end_index": 1293402, "text": "When SOURCE_URL is provided, svnsync will use it as the repository URL which the destination repository is mirroring. Generally, SOURCE_URL will be exactly the same source URL as was used with the svnsync initialize command when the mirror was first set up. You may choose, however, to omit SOURCE_URL , in which case svnsync will consult the mirror repository&#39;s records to determine the source URL which should be used. We strongly recommend that you specify the source URL on the command-line, especially when untrusted users have write access to the revision 0 properties which svnsync uses to coordinate its efforts. Options Examples Resynchronize the revision properties associated with a single revision (r6): $ svnsync copy-revprops -r 6 file:///var/svn/repos-mirror \\ http://svn.example.com/repos Copied properties for revision 6. $ svnsync subcommands help svnsync help Help!"}, {"start_index": 1297722, "end_index": 1298749, "text": "When SOURCE_URL is provided, svnsync will use it as the repository URL which the destination repository is mirroring. Generally, SOURCE_URL will be exactly the same source URL as was used with the svnsync initialize command when the mirror was first set up. You may choose, however, to omit SOURCE_URL , in which case svnsync will consult the mirror repository&#39;s records to determine the source URL which should be used. We strongly recommend that you specify the source URL on the command-line, especially when untrusted users have write access to the revision 0 properties which svnsync uses to coordinate its efforts. Options Examples Copy unsynchronized revisions from the source repository to the mirror repository: $ svnsync synchronize file:///var/svn/repos-mirror \\ http://svn.example.com/repos Committed revision 1. Copied properties for revision 1."}]}]}